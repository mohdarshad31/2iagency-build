{"version":3,"sources":["containers/AdminLayout/_nav.js","views/AdminDashboard/Dashboard/Dashboard.js","views/AdminDashboard/Category/CategoryData.js","views/AdminDashboard/Category/Category.js","views/AdminDashboard/ThreatType/ThreatTypeData.js","views/AdminDashboard/ThreatType/ThreatType.js","views/AdminDashboard/Organization/OrganizationData.js","views/AdminDashboard/Organization/Organization.js","views/AdminDashboard/Organization/Employee/EmployeeData.js","views/AdminDashboard/Organization/Employee/Employee.js","views/AdminDashboard/Organization/CompanyUser/CompanyUserData.js","views/AdminDashboard/Organization/CompanyUser/CompanyUser.js","routes/adminRoutes.js","containers/AdminLayout/DefaultFooter.js","containers/UserLayout/UserAvtar.js","containers/AdminLayout/DefaultHeader.js","containers/AdminLayout/AdminLayout.js"],"names":["items","name","url","icon","children","Dashboard","props","loading","className","state","dashBoardStats","organizationCount","usersCount","foodTruckCount","enquiryCount","userList","enquiryList","this","setState","commonService","getAPIWithAccessToken","then","res","undefined","data","status","toast","error","message","dashData","lineGraphLabels","foodTruckGraph","labels","foodTruckData","enquiryData","enquiryGraph","responseData","profileList","Row","Col","xs","sm","lg","src","height","alt","Component","CategoryData","buttonProcessing","rowIndex","dataTableItem","editCategoryAction","deleteCategoryAction","columns","label","options","filter","customBodyRender","value","tableMeta","updateValue","i","disabled","onClick","editCategoryItem","window","confirm","deleteCategoryItem","rowsItem","entries","cat","console","log","catInfo","categoryName","image","imagUrl","remark","getStatus","action","push","search","searchOpen","print","viewColumns","download","responsive","selectableRows","textLabels","body","noMatch","dataTableLoadingStatus","toolTip","columnHeaderTooltip","column","Category","changeHandler","event","target","toggle","modal","category_name","formValid","errors","categoryImageUrl","changeFileHandler","targetFile","files","formErrors","category_image","type","categoryImage","changeFilterHandler","filterItem","categoryList","category_name_valid","handleEditCategory","bind","submitHandler","handleDeleteCategory","filterItemList","resetSearchFilter","filterParmas","custom","statusText","getStatusVal","catch","err","response","localStorage","clear","history","preventDefault","validateForm","formData","formProccessing","categoryId","putAPIWithAccessToken","success","postAPIWithAccessToken","formField","trim","length","categoryItem","deleteAPIWithAccessToken","loaderElement","Loader","Card","CardHeader","Button","color","CardBody","md","FormGroup","Label","htmlFor","Input","placeholder","id","onChange","size","Modal","isOpen","ModalHeader","Form","onSubmit","noValidate","ModalBody","invalid","required","ModalFooter","threatName","ThreatType","threatId","ThreatTypeData","OrganizationData","editOrganizationAction","deleteOrganizationAction","orgnization","orgInfo","organizationName","authId","firstName","lastName","email","phoneNumber","address","createdAt","Date","toLocaleDateString","sort","editOrganizationItem","to","title","href","deleteOrganizationItem","downloadOptions","filename","separator","fixedHeaderOptions","xAxis","yAxis","Organization","changeStatusBtn","mobileNumber","address2","city","country","postalCode","setFilterFromDate","date","filterFormField","filterFrom","setFilterToDate","filterTo","resetfilterOragnization","filter_organization_id","filterOrgName","filterMobile","filterStatus","custom_search","organizationList","filterLocation","handleEditOrganization","handleDeleteOrganization","filterOragnizationList","organizationQuery","newFromDate","getFormatDate","newToDate","formInputField","organizationInfo","organizationId","pattern","RegExp","test","statusBtn","changeProfileStatus","profileId","formdata","getFullYear","toString","getMonth","substring","getDate","processingBtnText","EmployeeData","editEmployeeAction","deleteEmployeeAction","employee","roleName","editEmployeeItem","deleteEmployeeItem","queryString","require","SetOrganizationDropDownItem","Employee","role","employee_name","EmployeeList","handleEditEmployee","handleDeleteEmployee","filterEmployeeList","queryParams","parse","location","stroreWalkQuery","employeeInfo","organizationAuthId","employeeId","map","index","key","CompanyUserData","CompanyUser","adminRoutes","path","exact","component","employeeList","DefaultFooter","Fragment","rel","defaultProps","UserAvtar","arrName","getLocalStorageValue","split","slice","join","DefaultHeader","display","mobile","full","process","width","minimized","Nav","navbar","UncontrolledDropdown","nav","direction","DropdownToggle","DropdownMenu","right","DropdownItem","header","tag","e","onLogout","AdminLayout","fixed","fallback","signOut","navConfig","navigation","router","appRoutes","Container","fluid","route","idx","render","from"],"mappings":"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","file":"static/js/5.da087e62.chunk.js","sourcesContent":["export default {\r\n  items: [\r\n    {\r\n      name: 'Dashboard',\r\n      url: '/admin/dashboard',\r\n      icon: 'icon-speedometer',\r\n    },\r\n    {\r\n      name: 'Master Case Type',\r\n      url: '/admin/master-case-type',\r\n      icon: 'icon-people',   \r\n    },\r\n    {\r\n      name: 'Master Threat Type',\r\n      url: '/admin/master-threat-type',\r\n      icon: 'icon-people',   \r\n    },\r\n    {\r\n      name: 'Manage Company',\r\n      url: '/admin/organization',\r\n      icon: 'icon-people',  \r\n      children: [{\r\n          name: 'Company List',\r\n          url: '/admin/organization',\r\n          icon: 'icon-user',     \r\n        },\r\n        {\r\n          name: 'Company User',\r\n          url: '/admin/organization/user',\r\n          icon: 'icon-people',     \r\n        },\r\n        {\r\n          name: 'Company Employee User',\r\n          url: '/admin/organization/employee',\r\n          icon: 'icon-people',     \r\n        }       \r\n      ] \r\n\r\n    },\r\n    \r\n  ],\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport { Col, Row } from 'reactstrap';\r\n//import { PeopleAlt, LocalShipping, MailOutline, SupervisorAccount, Link } from '@material-ui/icons';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../core/services/commonService';\r\nimport './dashboard.css'\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n     loading: false,\r\n      dashBoardStats: {organizationCount: 0, usersCount: 0, foodTruckCount: 0, enquiryCount:0 },\r\n      userList: [],\r\n      enquiryList:[],\r\n     \r\n    };\r\n  }\r\n\r\n  componentDidMount() { \r\n    this.setState( { loading: true}, () => {\r\n\r\n      commonService.getAPIWithAccessToken('dashboard')\r\n        .then( res => {\r\n          if( undefined === res.data.data || !res.data.status ){\r\n            this.setState( {loading: false });\r\n            toast.error(res.data.message);\r\n            return;\r\n          }\r\n          const dashData = res.data.data;\r\n          this.setState({ loading:false, dashBoardStats:dashData, lineGraphLabels:dashData.foodTruckGraph.labels, foodTruckData:dashData.foodTruckGraph.data, enquiryData:dashData.enquiryGraph.data  })\r\n        }\r\n        )\r\n\r\n      commonService.getAPIWithAccessToken('organization?pageNo=1&pageSize=10')\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( {  loading: false } );\r\n            toast.error(res.data.message);    \r\n            return;\r\n          }  \r\n          const responseData = res.data.data;\r\n          this.setState({loading:false, userList: responseData.profileList});\r\n        } )\r\n        \r\n      \r\n      \r\n    } )\r\n  }\r\n \r\n\r\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"animated fadeIn admin-dashboard\">\r\n        <div className=\"overview-info\">\r\n          <Row>\r\n          <Col xs=\"12\" sm=\"6\" lg=\"3\">\r\n            <div className=\"card-bg-info card-bg-1\">\r\n              <div className=\"card-bg-icon\">\r\n                <img src=\"/images/user.svg\" height=\"35\" alt=\"\" />\r\n              </div>\r\n              <div className=\"card-bg-content\">\r\n                <h2 className=\"text-value\">0</h2>\r\n                <p>Total Organization</p>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col xs=\"12\" sm=\"6\" lg=\"3\">\r\n            <div className=\"card-bg-info card-bg-2\">\r\n              <div className=\"card-bg-icon\">\r\n                <img src=\"/images/timezone.svg\" height=\"35\" alt=\"\" />\r\n              </div>\r\n              <div className=\"card-bg-content\">\r\n                <h2 className=\"text-value\">0</h2>\r\n                <p>Total Cases</p>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col xs=\"12\" sm=\"6\" lg=\"3\">\r\n            <div className=\"card-bg-info card-bg-3\">\r\n              <div className=\"card-bg-icon\">\r\n                <img src=\"/images/task.svg\" height=\"35\" alt=\"\" />\r\n              </div>\r\n              <div className=\"card-bg-content\">\r\n                <h2 className=\"text-value\">0</h2>\r\n                <p>Total Active Cases</p>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col xs=\"12\" sm=\"6\" lg=\"3\">\r\n            <div className=\"card-bg-info card-bg-4\">\r\n                <div className=\"card-bg-icon\">\r\n                <img src=\"/images/payment.svg\" height=\"35\" alt=\"\" />\r\n                </div>\r\n                <div className=\"card-bg-content\">\r\n                  <h2 className=\"text-value\">0</h2>\r\n                  <p>Total Active Subscriber</p>\r\n                </div>\r\n            </div>\r\n          </Col>\r\n          </Row>\r\n        </div>\r\n\r\n            \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from 'react';\r\n//import { Button } from 'reactstrap';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport commonService from '../../../core/services/commonService';\r\nclass CategoryData extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: []\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n  /* Edit Category Item */\r\n  editCategoryItem(rowIndex){    \r\n    this.props.editCategoryAction(rowIndex);\r\n  }\r\n  /*Delete Category*/\r\n  deleteCategoryItem(rowIndex){    \r\n    this.props.deleteCategoryAction(rowIndex);\r\n  }\r\n  \r\n  render() {\r\n    const columns = [\r\n      /*{\r\n        label: 'Image',\r\n        name: 'image',\r\n        options: {\r\n          filter: true,\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            return (\r\n             <p className=\"imagePreview\"><img src={value} alt=\"\" /></p>\r\n            );\r\n          },\r\n        }\r\n      },*/\r\n      {\r\n        label: 'Name',\r\n        name: 'name',\r\n      },\r\n      \r\n      {\r\n        label: 'Status',\r\n        name: 'status',\r\n      },\r\n      {\r\n        label: 'Action',\r\n        name: 'action',\r\n        options: {\r\n          filter: true,\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            let i = tableMeta.rowIndex;\r\n           \r\n            return (\r\n             <p><button className=\"btn-edit\" disabled={this.state.buttonProcessing} onClick={() => \r\n              this.editCategoryItem(i)}><i className=\"fa fa-pencil\"></i> </button>\r\n              <button className=\"btn-delete\" disabled={this.state.buttonProcessing} onClick={() => \r\n              {if( window.confirm('Are you sure you wish to delete this case type?')) this.deleteCategoryItem(i)}}><i className=\"fa fa-trash\"></i></button></p>\r\n            );\r\n          },\r\n        }\r\n      },\r\n    ];\r\n\r\n    let rowsItem = [];    \r\n    for(const [i, cat] of this.props.data.entries()){\r\n      console.log(i);\r\n      let catInfo = {\r\n        name: cat.categoryName,\r\n        image: cat.imagUrl,\r\n        remark: cat.remark || \"\",\r\n        status: commonService.getStatus(cat.status) ,       \r\n        action: \"\",       \r\n      }      \r\n      rowsItem.push(catInfo);\r\n    }\r\n    const options = {\r\n      search: false,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      viewColumns: false,\r\n      download: false,\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Processing........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      /*fixedHeaderOptions: { xAxis: false, yAxis: false },\r\n       customToolbar: () => {\r\n        return (\r\n          <Button color=\"\" className=\"categoryAdd\" type=\"button\" onClick={this.props.toggle}><i className=\"fa fa-plus\"></i> Add Practice</Button>\r\n        );\r\n      }*/\r\n\r\n    };\r\n    \r\n    return (\r\n      <MUIDataTable\r\n        \r\n        data={rowsItem}        \r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CategoryData;","import React, { Component } from 'react';\nimport { Card, CardHeader, Col, Row, Button, Form, Input, FormGroup, Label, Modal, ModalHeader, ModalBody, CardBody, ModalFooter } from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport commonService from '../../../core/services/commonService';\n\nimport Loader from '../../Loader/Loader';\nimport CategoryData from './CategoryData';\nimport './Category.css'\n\nclass Category extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      modal: false,\n      category_name: \"\",\n      categoryList: [],\n      categoryImage: null,\n      categoryImageUrl: \"\",\n      loading: true,\n      rowIndex: -1,\n      status: \"\",\n      errors: {category_name: '', category_image: '', error: ''},\n      category_name_valid: false,\n      filterItem: {},\n      formValid: false,\n\n\n    } \n    this.handleEditCategory = this.handleEditCategory.bind(this);\n    this.submitHandler = this.submitHandler.bind(this);\n    this.handleDeleteCategory = this.handleDeleteCategory.bind(this);\n    this.filterItemList = this.filterItemList.bind(this);\n    this.resetSearchFilter = this.resetSearchFilter.bind(this);\n  }\n\n  // Fetch the category List\n  componentDidMount() { \n    this.categoryList();\n  }\n  /*Category List API*/\n  categoryList(filterItem = {}) {\n    let filterParmas = \"\";\n    \n    \n    if(filterItem.custom !== undefined && filterItem.custom !== \"\" ) \n      filterParmas += (filterParmas !==\"\" ) ? \"&keyword=\"+filterItem.custom: \"?keyword=\"+filterItem.custom;\n    if(filterItem.status !== undefined && filterItem.status !== \"\" ) {\n      let statusText = commonService.getStatusVal(filterItem.status)\n      filterParmas += (filterParmas !==\"\" ) ? \"&status=\"+statusText: \"?status=\"+statusText;\n    }\n    this.setState( { loading: true}, () => {\n      commonService.getAPIWithAccessToken('category'+filterParmas)\n        .then( res => {\n          \n           \n          if ( undefined === res.data.data || !res.data.status ) {\n            this.setState( {  loading: false } );\n            toast.error(res.data.message);    \n            return;\n          }   \n\n          this.setState({loading:false, categoryList: res.data.data});     \n         \n        } )\n        .catch( err => {   \n                \n          if(err.response !== undefined && err.response.status === 401) {\n            localStorage.clear();\n            this.props.history.push('/login');\n          }\n          else {\n            this.setState( { loading: false } );\n            toast.error(err.message);    \n          }\n        } )\n    } )\n  }\n  submitHandler (event) {\n    event.preventDefault();\n    event.target.className += \" was-validated\";\n    if(!this.validateForm())\n      return false;\n    let formData = {}; \n    formData.categoryName = this.state.category_name;\n    let statusText = commonService.getStatusVal(this.state.status)\n    formData.status = statusText;\n    formData.remark = this.state.remark;\n    \n    this.setState( { loading: true, formProccessing: true}, () => {\n      if(this.state.rowIndex > -1){\n        /* Update Category */\n        const categoryId = this.state.categoryList[this.state.rowIndex].categoryId;\n        formData.categoryId = categoryId;\n        \n        commonService.putAPIWithAccessToken( `category`, formData)\n          .then( res => {\n            \n           \n            \n            if ( undefined === res.data.data || !res.data.status ) { \n              let errors = {};\n              if(res.data.errors !== undefined)\n                errors = res.data.errors;\n              else\n                errors.categoryName = res.data.message;\n              this.setState( { formProccessing: false, loading: false, errors: errors} );\n              return false;\n            }  \n            let updatedCategoryLists = this.state.categoryList;\n            updatedCategoryLists[this.state.rowIndex] = res.data.data;\n            this.setState({modal: false, rowIndex: \"\", formProccessing: false, loading:false});\n            toast.success(res.data.message);    \n            this.categoryList();\n          } )\n          .catch( err => {       \n              \n            if(err.response !== undefined && err.response.status === 401) {\n              localStorage.clear();\n              this.props.history.push('/login');\n            }\n            else {\n              this.setState( { formProccessing: false, loading:false } );\n              toast.error(err.message);    \n            }\n          } )\n       \n      }\n      else{\n         /* Add Category */\n        commonService.postAPIWithAccessToken( `category`, formData)\n          .then( res => {\n            \n           \n            \n            if ( undefined === res.data.data || !res.data.status ) { \n              let errors = {};\n              if(res.data.errors !== undefined)\n                errors = res.data.errors;\n              else\n                errors.categoryName = res.data.message;\n              this.setState( { formProccessing: false, loading:false, errors: errors} );\n              return false;\n            }            \n            this.setState({modal: false, formProccessing: false, loading:false});\n            toast.success(res.data.message); \n            this.categoryList();\n          } )\n          .catch( err => {\n            if(err.response !== undefined && err.response.status === 401) {\n              localStorage.clear();\n              this.props.history.push('/login');\n            }\n            else{\n              this.setState( { formProccessing: false, loading:false } );\n              toast.error(err.message); \n            }\n          } )\n      }\n    })\n  };\n  /* Input Field On changes*/\n  changeHandler = event => {\n    const name = event.target.name;\n    const value = event.target.value\n    this.setState({ [name]: value });\n  };\n  \n \n  /* Validate Form */\n  validateForm() {\n    let formValid = true;\n    let formField = this.state; \n    let errors = {};\n    if(formField.category_name === undefined || formField.category_name.trim() === \"\" ){\n      formValid = false;\n      errors['categoryName'] = 'Case Type name field required';\n    }\n    if(formField.status === undefined || formField.status.trim() === \"\" ){\n      formValid = true;\n      errors['status'] = 'Status field required';\n    }\n    this.setState({errors:  errors});\n    return formValid;\n    \n  }\n  /* Set Error Class*/\n  errorClass(error) {\n    return(error.length === 0 ? '' : 'has-error');\n  }\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal,\n      category_name: \"\",\n      remark: \"\",\n      status: \"\",\n      rowIndex: -1,\n      formValid: false,\n      errors: {},\n      categoryImageUrl: \"\"\n    });\n  }\n  /* File changes handler*/\n  changeFileHandler = event => {   \n    const targetFile = event.target.files[0];\n    let formErrors = this.state.formErrors;\n    formErrors.category_image = \"\";\n    \n    if(targetFile.type !== \"image/png\" && targetFile.type !== \"image/jpeg\" && targetFile.type !== \"image/jpg\" && targetFile.type !== \"image/svg\") {\n      formErrors.category_image = \" accept only png, jpeg, jpg\";\n      this.setState({ categoryImage: targetFile, formErrors: formErrors  });\n    }\n    else\n      this.setState({ categoryImage: targetFile, formErrors: formErrors  });\n  };\n\n  /* Edit Category*/\n  handleEditCategory(rowIndex){\n   \n      const categoryItem = this.state.categoryList[rowIndex];\n      let status = \"Active\"\n      status = commonService.getStatus(categoryItem.status);\n\n      this.setState({modal: true, status: status, category_name: categoryItem.categoryName, remark: categoryItem.remark, rowIndex: rowIndex, formValid: true, category_name_valid: true, categoryImageUrl: categoryItem.imagUrl});\n  }\n  /* Add category */\n  handleDeleteCategory(rowIndex){\n   \n    const categoryItem = this.state.categoryList[rowIndex];\n   \n    this.setState( { loading: true}, () => {\n      commonService.deleteAPIWithAccessToken( `category/`+categoryItem.categoryId)\n        .then( res => {\n          this.setState({loading: false});\n          if ( undefined === res.data || !res.data.status ) {            \n             toast.error(res.data.message);      \n            return;\n          }         \n          \n          toast.success(res.data.message);\n          this.categoryList();\n        } )\n        .catch( err => {       \n            \n          if(err.response !== undefined && err.response.status === 401) {\n            localStorage.clear();\n            this.props.history.push('/login');\n          }\n          else{\n            this.setState( { loading: false } );\n            toast.error(err.message);\n          }\n      } )\n    })\n  }\n\n  filterItemList(){\n    const filterItem = this.state.filterItem;\n    this.categoryList(filterItem);\n  }\n  \n  changeFilterHandler = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    const filterItem = this.state.filterItem\n    filterItem[name] = value;\n    this.setState({ filterItem: filterItem });\n  };\n  resetSearchFilter() {\n    this.setState({filterItem: { status: '', custom: ''}});\n    this.categoryList();\n  }\n\n  render() {\n\n    const { categoryList, loading, modal, errors  } = this.state;     \n    let loaderElement ='';\n    \n    if(loading)\n      loaderElement = <Loader />\n    /*let categoryImagePreview = '';\n    if(this.state.categoryImageUrl !== \"\")\n      categoryImagePreview = <div className=\"imagePreview\"><img src={this.state.categoryImageUrl} alt=\"\" /></div>*/\n\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          \n          {loaderElement}\n          <Col lg={12}>\n            <Card className=\"\">\n                <CardHeader className=\"mainHeading\">\n                  <strong>Case Type List</strong> \n                  <Button color=\"\" className=\"categoryAdd\" type=\"button\" onClick={this.toggle}><i className=\"fa fa-plus\"></i> Add Case Type</Button>\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col md={12}>\n                      <Row className=\"filterRow\">                      \n                        <Col md={\"3\"}>\n                          <FormGroup> \n                            <Label htmlFor=\"filter_doctor_id\">Search By Name</Label>            \n                            <Input type=\"text\" placeholder=\"Search By Name\" id=\"custom\" name=\"custom\" value={this.state.filterItem.custom} onChange={this.changeFilterHandler} />\n                          </FormGroup>  \n                        </Col>\n                        <Col md={\"3\"}>\n                          <FormGroup> \n                            <Label htmlFor=\"filter_doctor_id\">Search By Status</Label>            \n                            <Input type=\"select\" placeholder=\"Search By Status\" id=\"status\" name=\"status\" value={this.state.filterItem.status} onChange={this.changeFilterHandler}>\n                                <option value = \"\">Select</option>\n                                <option value=\"Active\">Active</option>\n                                <option value=\"Inactive\">Inactive</option>\n                            </Input>\n                          </FormGroup>  \n                        </Col>\n                        <Col md={\"1\"} className=\"p-0\">\n                          <FormGroup> \n                            <Label>&nbsp;</Label><br />\n                            <Button color=\"success\" type=\"button\" size=\"sm\" onClick={this.filterItemList}><i className=\"fa fa-search\"></i></Button>&nbsp;\n                            <Button color=\"danger\" type=\"reset\" size=\"sm\" onClick={this.resetSearchFilter}><i className=\"fa fa-refresh\"></i></Button>\n                          </FormGroup>             \n                        </Col>\n                      </Row> \n                       \n                    </Col>       \n                    <Col lg= {12}>   \n                      <CategoryData data={categoryList} toggle={this.toggle} editCategoryAction={this.handleEditCategory} deleteCategoryAction={this.handleDeleteCategory} dataTableLoadingStatus = {this.state.loading} />\n                    </Col> \n                  </Row>\n                </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Modal isOpen={modal} toggle={this.toggle} className=\"category-modal-section\">\n          <ModalHeader toggle={this.toggle}>Case Type</ModalHeader>\n          <Form onSubmit={this.submitHandler} noValidate>\n            <ModalBody>\n              <FormGroup> \n                <Label htmlFor=\"category_name\">Case Type Name</Label>            \n                <Input type=\"text\" placeholder=\"Case Type Name *\" invalid={errors['categoryName'] !== undefined && errors['categoryName'] !== \"\"} id=\"category_name\" name=\"category_name\" value={this.state.category_name} onChange={this.changeHandler} required />\n                <div className=\"invalid-feedback\">\n                  {errors['categoryName']}\n                </div>\n              </FormGroup>\n              \n              <FormGroup>\n                <Label htmlFor=\"template_status\">Status</Label>            \n                <Input type=\"select\" placeholder=\"Status *\" invalid={errors['status'] !== undefined && errors['status'] !== \"\"} id=\"status\" name=\"status\" value={this.state.status} onChange={this.changeHandler} required >\n                  <option value=\"\">Select Status</option>\n                  <option value=\"Active\">Active</option>\n                  <option value=\"Inactive\">Inactive</option>\n                  \n                </Input>\n                <div className=\"invalid-feedback\">\n                  {errors['status']}\n                </div>\n              </FormGroup>\n               \n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" disabled={this.state.formProccessing} type=\"submit\">Submit</Button>\n              <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n            </ModalFooter>\n          </Form>\n        </Modal>\n      </div>\n\n    )\n  }\n}\n\nexport default Category;\n","import React, { Component } from 'react';\r\n//import { Button } from 'reactstrap';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport commonService from '../../../core/services/commonService';\r\nclass CategoryData extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: []\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n  /* Edit Category Item */\r\n  editCategoryItem(rowIndex){    \r\n    this.props.editCategoryAction(rowIndex);\r\n  }\r\n  /*Delete Category*/\r\n  deleteCategoryItem(rowIndex){    \r\n    this.props.deleteCategoryAction(rowIndex);\r\n  }\r\n  \r\n  render() {\r\n    const columns = [\r\n      /*{\r\n        label: 'Image',\r\n        name: 'image',\r\n        options: {\r\n          filter: true,\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            return (\r\n             <p className=\"imagePreview\"><img src={value} alt=\"\" /></p>\r\n            );\r\n          },\r\n        }\r\n      },*/\r\n      {\r\n        label: 'Name',\r\n        name: 'name',\r\n      },\r\n      \r\n      {\r\n        label: 'Status',\r\n        name: 'status',\r\n      },\r\n      {\r\n        label: 'Action',\r\n        name: 'action',\r\n        options: {\r\n          filter: true,\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            let i = tableMeta.rowIndex;\r\n           \r\n            return (\r\n             <p><button className=\"btn-edit\" disabled={this.state.buttonProcessing} onClick={() => \r\n              this.editCategoryItem(i)}><i className=\"fa fa-pencil\"></i> </button>\r\n              <button className=\"btn-delete\" disabled={this.state.buttonProcessing} onClick={() => \r\n              {if( window.confirm('Are you sure you wish to delete this case type?')) this.deleteCategoryItem(i)}}><i className=\"fa fa-trash\"></i></button></p>\r\n            );\r\n          },\r\n        }\r\n      },\r\n    ];\r\n\r\n    let rowsItem = [];    \r\n    for(const [i, cat] of this.props.data.entries()){\r\n      console.log(i);\r\n      let catInfo = {\r\n        name: cat.threatName,\r\n        image: cat.imagUrl,\r\n        remark: cat.remark || \"\",\r\n        status: commonService.getStatus(cat.status) ,       \r\n        action: \"\",       \r\n      }      \r\n      rowsItem.push(catInfo);\r\n    }\r\n    const options = {\r\n      search: false,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      viewColumns: false,\r\n      download: false,\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Processing........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      /*fixedHeaderOptions: { xAxis: false, yAxis: false },\r\n       customToolbar: () => {\r\n        return (\r\n          <Button color=\"\" className=\"categoryAdd\" type=\"button\" onClick={this.props.toggle}><i className=\"fa fa-plus\"></i> Add Practice</Button>\r\n        );\r\n      }*/\r\n\r\n    };\r\n    \r\n    return (\r\n      <MUIDataTable\r\n        \r\n        data={rowsItem}        \r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CategoryData;","import React, { Component } from 'react';\nimport { Card, CardHeader, Col, Row, Button, Form, Input, FormGroup, Label, Modal, ModalHeader, ModalBody, CardBody, ModalFooter } from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport commonService from '../../../core/services/commonService';\n\nimport Loader from '../../Loader/Loader';\nimport ThreatTypeData from './ThreatTypeData';\nimport './ThreatType.css'\n\nclass ThreatType extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      modal: false,\n      category_name: \"\",\n      categoryList: [],\n      categoryImage: null,\n      categoryImageUrl: \"\",\n      loading: true,\n      rowIndex: -1,\n      status: \"\",\n      errors: {category_name: '', category_image: '', error: ''},\n      category_name_valid: false,\n      filterItem: {},\n      formValid: false,\n\n\n    } \n    this.handleEditCategory = this.handleEditCategory.bind(this);\n    this.submitHandler = this.submitHandler.bind(this);\n    this.handleDeleteCategory = this.handleDeleteCategory.bind(this);\n    this.filterItemList = this.filterItemList.bind(this);\n    this.resetSearchFilter = this.resetSearchFilter.bind(this);\n  }\n\n  // Fetch the category List\n  componentDidMount() { \n    this.categoryList();\n  }\n  /*Category List API*/\n  categoryList(filterItem = {}) {\n    let filterParmas = \"\";\n    \n    \n    if(filterItem.custom !== undefined && filterItem.custom !== \"\" ) \n      filterParmas += (filterParmas !==\"\" ) ? \"&keyword=\"+filterItem.custom: \"?keyword=\"+filterItem.custom;\n    if(filterItem.status !== undefined && filterItem.status !== \"\" ) {\n      let statusText = commonService.getStatusVal(filterItem.status)\n      filterParmas += (filterParmas !==\"\" ) ? \"&status=\"+statusText: \"?status=\"+statusText;\n    }\n    this.setState( { loading: true}, () => {\n      commonService.getAPIWithAccessToken('threat'+filterParmas)\n        .then( res => {\n          \n           \n          if ( undefined === res.data.data || !res.data.status ) {\n            this.setState( {  loading: false } );\n            toast.error(res.data.message);    \n            return;\n          }   \n\n          this.setState({loading:false, categoryList: res.data.data});     \n         \n        } )\n        .catch( err => {   \n                \n          if(err.response !== undefined && err.response.status === 401) {\n            localStorage.clear();\n            this.props.history.push('/login');\n          }\n          else {\n            this.setState( { loading: false } );\n            toast.error(err.message);    \n          }\n        } )\n    } )\n  }\n  submitHandler (event) {\n    event.preventDefault();\n    event.target.className += \" was-validated\";\n    if(!this.validateForm())\n      return false;\n    let formData = {}; \n    formData.threatName = this.state.category_name;\n    let statusText = commonService.getStatusVal(this.state.status)\n    formData.status = statusText;\n    formData.remark = this.state.remark;\n    \n    this.setState( { loading: true, formProccessing: true}, () => {\n      if(this.state.rowIndex > -1){\n        /* Update Category */\n        const threatId = this.state.categoryList[this.state.rowIndex].threatId;\n        formData.threatId = threatId;\n        \n        commonService.putAPIWithAccessToken( `threat`, formData)\n          .then( res => {\n            \n           \n            \n            if ( undefined === res.data.data || !res.data.status ) { \n              let errors = {};\n              if(res.data.errors !== undefined)\n                errors = res.data.errors;\n              else\n                errors.threatName = res.data.message;\n              this.setState( { formProccessing: false, loading: false, errors: errors} );\n              return false;\n            }  \n            let updatedCategoryLists = this.state.categoryList;\n            updatedCategoryLists[this.state.rowIndex] = res.data.data;\n            this.setState({modal: false, rowIndex: \"\", formProccessing: false, loading:false});\n            toast.success(res.data.message);    \n            this.categoryList();\n          } )\n          .catch( err => {       \n              \n            if(err.response !== undefined && err.response.status === 401) {\n              localStorage.clear();\n              this.props.history.push('/login');\n            }\n            else {\n              this.setState( { formProccessing: false, loading:false } );\n              toast.error(err.message);    \n            }\n          } )\n       \n      }\n      else{\n         /* Add Category */\n        commonService.postAPIWithAccessToken( `threat`, formData)\n          .then( res => {\n            \n           \n            \n            if ( undefined === res.data.data || !res.data.status ) { \n              let errors = {};\n              if(res.data.errors !== undefined)\n                errors = res.data.errors;\n              else\n                errors.threatName = res.data.message;\n              this.setState( { formProccessing: false, loading:false, errors: errors} );\n              return false;\n            }            \n            this.setState({modal: false, formProccessing: false, loading:false});\n            toast.success(res.data.message); \n            this.categoryList();\n          } )\n          .catch( err => {\n            if(err.response !== undefined && err.response.status === 401) {\n              localStorage.clear();\n              this.props.history.push('/login');\n            }\n            else{\n              this.setState( { formProccessing: false, loading:false } );\n              toast.error(err.message); \n            }\n          } )\n      }\n    })\n  };\n  /* Input Field On changes*/\n  changeHandler = event => {\n    const name = event.target.name;\n    const value = event.target.value\n    this.setState({ [name]: value });\n  };\n  \n \n  /* Validate Form */\n  validateForm() {\n    let formValid = true;\n    let formField = this.state; \n    let errors = {};\n    if(formField.category_name === undefined || formField.category_name.trim() === \"\" ){\n      formValid = false;\n      errors['threatName'] = 'Threat type name field required';\n    }\n    if(formField.status === undefined || formField.status.trim() === \"\" ){\n      formValid = true;\n      errors['status'] = 'Status field required';\n    }\n    this.setState({errors:  errors});\n    return formValid;\n    \n  }\n  /* Set Error Class*/\n  errorClass(error) {\n    return(error.length === 0 ? '' : 'has-error');\n  }\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal,\n      category_name: \"\",\n      remark: \"\",\n      status: \"\",\n      rowIndex: -1,\n      formValid: false,\n      errors: {},\n      categoryImageUrl: \"\"\n    });\n  }\n  /* File changes handler*/\n  changeFileHandler = event => {   \n    const targetFile = event.target.files[0];\n    let formErrors = this.state.formErrors;\n    formErrors.category_image = \"\";\n    \n    if(targetFile.type !== \"image/png\" && targetFile.type !== \"image/jpeg\" && targetFile.type !== \"image/jpg\" && targetFile.type !== \"image/svg\") {\n      formErrors.category_image = \" accept only png, jpeg, jpg\";\n      this.setState({ categoryImage: targetFile, formErrors: formErrors  });\n    }\n    else\n      this.setState({ categoryImage: targetFile, formErrors: formErrors  });\n  };\n\n  /* Edit Category*/\n  handleEditCategory(rowIndex){\n   \n      const categoryItem = this.state.categoryList[rowIndex];\n      let status = \"Active\"\n      status = commonService.getStatus(categoryItem.status);\n      \n      this.setState({modal: true, status: status, category_name: categoryItem.threatName, remark: categoryItem.remark, rowIndex: rowIndex, formValid: true, category_name_valid: true, categoryImageUrl: categoryItem.imagUrl});\n  }\n  /* Add category */\n  handleDeleteCategory(rowIndex){\n   \n    const categoryItem = this.state.categoryList[rowIndex];\n   \n    this.setState( { loading: true}, () => {\n      commonService.deleteAPIWithAccessToken( `threat/`+categoryItem.threatId)\n        .then( res => {\n          this.setState({loading: false});\n          if ( undefined === res.data || !res.data.status ) {            \n             toast.error(res.data.message);      \n            return;\n          }         \n          \n          toast.success(res.data.message);\n          this.categoryList();\n        } )\n        .catch( err => {       \n            \n          if(err.response !== undefined && err.response.status === 401) {\n            localStorage.clear();\n            this.props.history.push('/login');\n          }\n          else{\n            this.setState( { loading: false } );\n            toast.error(err.message);\n          }\n      } )\n    })\n  }\n\n  filterItemList(){\n    const filterItem = this.state.filterItem;\n    this.categoryList(filterItem);\n  }\n  \n  changeFilterHandler = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    const filterItem = this.state.filterItem\n    filterItem[name] = value;\n    this.setState({ filterItem: filterItem });\n  };\n  resetSearchFilter() {\n    this.setState({filterItem: { status: '', custom: ''}});\n    this.categoryList();\n  }\n\n  render() {\n\n    const { categoryList, loading, modal, errors  } = this.state;     \n    let loaderElement ='';\n    \n    if(loading)\n      loaderElement = <Loader />\n    /*let categoryImagePreview = '';\n    if(this.state.categoryImageUrl !== \"\")\n      categoryImagePreview = <div className=\"imagePreview\"><img src={this.state.categoryImageUrl} alt=\"\" /></div>*/\n\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          \n          {loaderElement}\n          <Col lg={12}>\n            <Card className=\"\">\n                <CardHeader className=\"mainHeading\">\n                  <strong>Threat Type List</strong> \n                  <Button color=\"\" className=\"categoryAdd\" type=\"button\" onClick={this.toggle}><i className=\"fa fa-plus\"></i> Add Threat Type</Button>\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col md={12}>\n                      <Row className=\"filterRow\">                      \n                        <Col md={\"3\"}>\n                          <FormGroup> \n                            <Label htmlFor=\"filter_doctor_id\">Search By Name</Label>            \n                            <Input type=\"text\" placeholder=\"Search By Name\" id=\"custom\" name=\"custom\" value={this.state.filterItem.custom} onChange={this.changeFilterHandler} />\n                          </FormGroup>  \n                        </Col>\n                        <Col md={\"3\"}>\n                          <FormGroup> \n                            <Label htmlFor=\"filter_doctor_id\">Search By Status</Label>            \n                            <Input type=\"select\" placeholder=\"Search By Status\" id=\"status\" name=\"status\" value={this.state.filterItem.status} onChange={this.changeFilterHandler}>\n                                <option value = \"\">Select</option>\n                                <option value=\"Active\">Active</option>\n                                <option value=\"Inactive\">Inactive</option>\n                            </Input>\n                          </FormGroup>  \n                        </Col>\n                        <Col md={\"1\"} className=\"p-0\">\n                          <FormGroup> \n                            <Label>&nbsp;</Label><br />\n                            <Button color=\"success\" type=\"button\" size=\"sm\" onClick={this.filterItemList}><i className=\"fa fa-search\"></i></Button>&nbsp;\n                            <Button color=\"danger\" type=\"reset\" size=\"sm\" onClick={this.resetSearchFilter}><i className=\"fa fa-refresh\"></i></Button>\n                          </FormGroup>             \n                        </Col>\n                      </Row> \n                       \n                    </Col>       \n                    <Col lg= {12}>   \n                      <ThreatTypeData data={categoryList} toggle={this.toggle} editCategoryAction={this.handleEditCategory} deleteCategoryAction={this.handleDeleteCategory} dataTableLoadingStatus = {this.state.loading} />\n                    </Col> \n                  </Row>\n                </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Modal isOpen={modal} toggle={this.toggle} className=\"category-modal-section\">\n          <ModalHeader toggle={this.toggle}>Threat Type</ModalHeader>\n          <Form onSubmit={this.submitHandler} noValidate>\n            <ModalBody>\n              <FormGroup> \n                <Label htmlFor=\"category_name\">Threat Type Name</Label>            \n                <Input type=\"text\" placeholder=\"Threat Type Name *\" invalid={errors['threatName'] !== undefined && errors['threatName'] !== \"\"} id=\"category_name\" name=\"category_name\" value={this.state.category_name} onChange={this.changeHandler} required />\n                <div className=\"invalid-feedback\">\n                  {errors['threatName']}\n                </div>\n              </FormGroup>\n              \n              <FormGroup>\n                <Label htmlFor=\"template_status\">Status</Label>            \n                <Input type=\"select\" placeholder=\"Status *\" invalid={errors['status'] !== undefined && errors['status'] !== \"\"} id=\"status\" name=\"status\" value={this.state.status} onChange={this.changeHandler} required >\n                  <option value=\"\">Select Status</option>\n                  <option value=\"Active\">Active</option>\n                  <option value=\"Inactive\">Inactive</option>\n                  \n                </Input>\n                <div className=\"invalid-feedback\">\n                  {errors['status']}\n                </div>\n              </FormGroup>\n               \n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" disabled={this.state.formProccessing} type=\"submit\">Submit</Button>\n              <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n            </ModalFooter>\n          </Form>\n        </Modal>\n      </div>\n\n    )\n  }\n}\n\nexport default ThreatType;\n","import React, { Component } from 'react';\r\nimport  { Link } from 'react-router-dom';\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nclass OrganizationData extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: [],\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n  \r\n  editOrganizationItem(rowIndex){    \r\n    this.props.editOrganizationAction(rowIndex);\r\n  }\r\n  deleteOrganizationItem(rowIndex){    \r\n    this.props.deleteOrganizationAction(rowIndex);\r\n  }\r\n  \r\n  render() {\r\n   \r\n    let rowsItem = [];    \r\n    for(const [i, orgnization] of this.props.data.entries()){\r\n      console.log(i);\r\n      let orgInfo = {\r\n        organizationName: orgnization.organizationName,\r\n        authId: orgnization.authId,\r\n        firstName: orgnization.firstName +' '+ orgnization.lastName,\r\n        email: orgnization.email,\r\n        phoneNumber: orgnization.phoneNumber || \" \",\r\n        address: orgnization.address || \" \",\r\n        createdAt: (new Date(orgnization.createdAt)).toLocaleDateString(\"en-US\"),\r\n        status: orgnization.status ? \"Active\" : \"Inactive\",   \r\n      }      \r\n      rowsItem.push(orgInfo);\r\n    }      \r\n    const columns = [      \r\n      {\r\n        label: 'User Name',\r\n        name: 'firstName',\r\n      },\r\n      {\r\n        label: 'Organization',\r\n        name: 'organizationName',\r\n      },\r\n      {\r\n        label: 'Email ID',\r\n        name: 'email',\r\n      },\r\n      {\r\n        label: 'Phone no.',\r\n        name: 'phoneNumber',\r\n      },\r\n      {\r\n        label: 'Address',\r\n        name: 'address',\r\n      },\r\n      {\r\n        label: 'Registered on',\r\n        name: 'createdAt',\r\n      },\r\n      {\r\n        label: 'Status',\r\n        name: 'status',\r\n      },\r\n      {\r\n        label: 'Action',\r\n        name: 'action',\r\n        options: {\r\n          filter: false,\r\n          sort: false,\r\n          download: false,\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            let i = tableMeta.rowIndex;\r\n            return (\r\n              <p><button className=\"btn-edit\" disabled={this.state.buttonProcessing} onClick={() => \r\n                this.editOrganizationItem(i)}><i className=\"fa fa-pencil\"></i> </button>\r\n                <Link className=\"btn-view\" to={`/admin/organization/user?organizationId=${rowsItem[i].authId}`} title=\"Company User\"><i className=\"fa fa-user\"></i> </Link>\r\n                <Link className=\"btn-view\" to={`/admin/organization/employee?organizationId=${rowsItem[i].authId}`} title=\"Company Employee\"><i className=\"fa fa-users\"></i> </Link>\r\n                <a href=\"#!\" className=\"btn-delete\" disabled={this.state.buttonProcessing} onClick={() => { if(window.confirm('Are you sure you want to delete this record?')){ this.deleteOrganizationItem(i) };}} ><i className=\"fa fa-trash\"></i></a></p>\r\n            );\r\n          }\r\n        }\r\n      },\r\n    ];\r\n    const options = {\r\n      search: true,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      download: true,\r\n      downloadOptions: {filename: 'va-client-list.csv', separator: ','},\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Loading........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      fixedHeaderOptions: { xAxis: false, yAxis: false }\r\n\r\n    };\r\n    \r\n    \r\n    return (\r\n      <MUIDataTable\r\n        title={\"Company List\"}\r\n        data={rowsItem}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrganizationData;","import React, { Component } from 'react';\r\nimport { Card, CardBody, CardHeader, Col, Row, Button, Form, Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../core/services/commonService';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport Loader from '../../Loader/Loader';\r\nimport OrganizationData from './OrganizationData';\r\nimport './Organization.css'\r\n\r\nclass Organization extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      modal: false,      \r\n      organizationList: [],\r\n      loading: true,\r\n      rowIndex: -1,\r\n      changeStatusBtn:'',\r\n      formProccessing: false,\r\n      formField: {organizationName: '', email: '', firstName: '', lastName: '', mobileNumber:'', phoneNumber: '', address: '', address2:'', city:'', state:'', country:'', postalCode:'' },\r\n      errors: {organizationName: '', email: '', firstName: '', lastName: '', error: ''},\r\n      formValid: false,\r\n      filterItem: { filter_organization_id: '', filterOrgName: '', filterLocation: '', filterFrom:'',  filterTo:'', filterStatus:'', custom_search: ''},\r\n    } \r\n    this.handleEditOrganization = this.handleEditOrganization.bind(this);\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    this.handleDeleteOrganization = this.handleDeleteOrganization.bind(this);\r\n    this.filterOragnizationList = this.filterOragnizationList.bind(this);\r\n  }\r\n  // Fetch the organization List\r\n  componentDidMount() { \r\n    this.organizationList();\r\n  }\r\n  /*organization List API*/\r\n  organizationList(filterItem = {}) {\r\n    let organizationQuery = \"\";\r\n    console.log(filterItem);\r\n    if(filterItem.filterOrgName !== undefined && filterItem.filterOrgName !== \"\" ) \r\n      organizationQuery += (organizationQuery !==\"\" ) ? \"&organizationName=\"+filterItem.filterOrgName: \"?organizationName=\"+filterItem.filterOrgName;\r\n    if(filterItem.filterLocation !== undefined && filterItem.filterLocation !== \"\" ) \r\n      organizationQuery += (organizationQuery !==\"\" ) ? \"&location=\"+filterItem.filterLocation: \"?location=\"+filterItem.filterLocation;\r\n    if(filterItem.custom_search !== undefined && filterItem.custom_search !== \"\" ) \r\n      organizationQuery += (organizationQuery !==\"\" ) ? \"&emailOrName=\"+filterItem.custom_search: \"?emailOrName=\"+filterItem.custom_search;\r\n    if(filterItem.filterFrom !== undefined && filterItem.filterFrom !== \"\" ){\r\n      let newFromDate = this.getFormatDate( filterItem.filterFrom );\r\n      organizationQuery += (organizationQuery !==\"\" ) ? \"&start_date=\"+newFromDate : \"?start_date=\"+newFromDate;\r\n    }\r\n    if(filterItem.filterTo !== undefined && filterItem.filterTo !== \"\" ){\r\n      let newToDate = this.getFormatDate( filterItem.filterTo );\r\n      organizationQuery += (organizationQuery !==\"\" ) ? \"&end_date=\"+newToDate: \"?end_date=\"+newToDate;\r\n    }\r\n    if(filterItem.filterStatus !== undefined && filterItem.filterStatus !== \"\" ) \r\n      organizationQuery += (organizationQuery !==\"\" ) ? \"&status=\"+filterItem.filterStatus: \"?status=\"+filterItem.filterStatus;\r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('organization'+organizationQuery)\r\n        .then( res => {\r\n           \r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }   \r\n\r\n          this.setState({loading:false, organizationList: res.data.data});     \r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    } )\r\n  }\r\n  /* Submit Form Handler*/\r\n  submitHandler (event) {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n    if(this.validateForm())\r\n      return false;\r\n    \r\n    this.setState( { formProccessing: true}, () => {\r\n      const formInputField = this.state.formField;\r\n      const formData = {\r\n        \"email\": formInputField.email,\r\n        \"firstName\": formInputField.firstName, \r\n        \"lastName\": formInputField.lastName, \r\n        \"mobileNumber\": formInputField.mobileNumber, \r\n        \"phoneNumber\": formInputField.phoneNumber, \r\n        \"organizationName\": formInputField.organizationName,\r\n        \"address\": formInputField.address,\r\n        \"address2\": formInputField.address2,\r\n        \"city\": formInputField.city,\r\n        \"state\": formInputField.state,\r\n        \"country\": formInputField.country,\r\n        \"postalCode\": formInputField.postalCode\r\n      };\r\n      \r\n      /*if(this.state.address)\r\n        formData['address'] = this.state.address;\r\n      \r\n      if(this.state.address2)\r\n        formData['address2'] = this.state.address2;\r\n      \r\n      if(this.state.country)\r\n        formData['country'] = this.state.country;*/\r\n      \r\n      const rowIndex = this.state.rowIndex;\r\n      if(rowIndex > -1) {\r\n       const organizationInfo = this.state.organizationList[rowIndex];\r\n       formData['organizationId'] = organizationInfo.organizationId;\r\n        commonService.putAPIWithAccessToken('organization/'+organizationInfo.organizationId, formData)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {           \r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          this.setState({ modal: false, formProccessing: false});\r\n          toast.success(res.data.message);\r\n          this.organizationList();\r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n      }\r\n      else{\r\n        commonService.postAPIWithAccessToken('organization', formData)\r\n        .then( res => {           \r\n          if ( undefined === res.data.data || !res.data.status ) { \r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          this.setState({ modal: false});\r\n          toast.success(res.data.message);\r\n          this.organizationList();        \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n      }\r\n    } );\r\n    \r\n  };\r\n  /* Input Field On changes*/\r\n  changeHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const formField = this.state.formField\r\n    formField[name] = value;\r\n    this.setState({ formField: formField });\r\n  };\r\n  \r\n  \r\n /* Validate Form */\r\n  validateForm() {\r\n    let formValid = false;\r\n    let formField = this.state.formField; \r\n    let errors = {};\r\n    var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n    if(formField.firstName === undefined || formField.firstName.trim() === \"\"){\r\n      formValid = true;\r\n      errors['firstName'] = \"First name field required!\";\r\n    }\r\n    if(formField.organizationName === undefined || formField.organizationName.trim() === \"\"){\r\n      formValid = true;\r\n      errors['organizationName'] = \"Organization field required!\";\r\n    }\r\n    if(formField.email === undefined || formField.email.trim() === \"\"){\r\n      formValid = true;\r\n      errors['email'] = \"Email field required!\";\r\n    }\r\n    else if(!(pattern.test(formField.email))){\r\n      formValid = true;\r\n      errors['email'] = \"Invalid email format\";\r\n    }\r\n    \r\n    this.setState({errors:  errors});\r\n    return formValid;\r\n    \r\n  }\r\n  /* Set Error Class*/\r\n  errorClass(error) {\r\n    return(error.length === 0 ? '' : 'has-error');\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      rowIndex: -1,\r\n      changeStatusBtn: '',\r\n      formValid: false,\r\n      formField: {organizationName: '', email: '', firstName: '', lastName: '', mobileNumber:'', phoneNumber: '', address: '', address2:'', city:'', state:'', country:'', postalCode:'' },\r\n      errors: {organizationName: '', email: '', firstName: '', lastName: '', error: ''}\r\n    });\r\n  }\r\n  /* Edit organization*/\r\n  handleEditOrganization(rowIndex){\r\n      const organizationInfo = this.state.organizationList[rowIndex];\r\n      const formField = {\r\n        organizationName: organizationInfo.organizationName,\r\n        email: organizationInfo.email, \r\n        firstName: organizationInfo.firstName, \r\n        lastName: organizationInfo.lastName, \r\n        phoneNumber: organizationInfo.phoneNumber,\r\n        mobileNumber: organizationInfo.mobileNumber,\r\n        address: organizationInfo.address,\r\n        address2: organizationInfo.address2,\r\n        city: organizationInfo.city,\r\n        state: organizationInfo.state,\r\n        country: organizationInfo.country,\r\n        postalCode: organizationInfo.postalCode\r\n      };\r\n      const statusBtn = <Button type=\"button\" size=\"sm\" className={`changeStatusBtn `+( organizationInfo.status ? 'btn-danger' : 'btn-success' )} onClick={() => \r\n        this.changeProfileStatus(organizationInfo.profileId, organizationInfo.status )} >{ ( organizationInfo.status ? 'De-Activate Account' : 'Activate Account' )}</Button>\r\n      \r\n      this.setState({rowIndex: rowIndex, formField: formField, modal: true, changeStatusBtn:statusBtn, formValid: true});\r\n  }\r\n\r\n  /* Change Profile status*/\r\n  changeProfileStatus(profileId,status){\r\n    this.setState( { loading: true}, () => {\r\n      const formData = {\r\n        \"profileId\": profileId,\r\n        \"status\": (status ? false : true ),\r\n      };\r\n      commonService.putAPIWithAccessToken('organization/status', formData)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {           \r\n            this.setState( { loading: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          this.setState({ modal: false, loading: false});\r\n          toast.success(res.data.message);\r\n          this.organizationList();        \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n        } )\r\n    } );\r\n  }\r\n\r\n  /* Delete organization*/\r\n  handleDeleteOrganization(rowIndex){\r\n\r\n    const orgInfo = this.state.organizationList[rowIndex];\r\n    //console.log(orgInfo);return;\r\n    let formdata = { \"profileId\":orgInfo.profileId }\r\n\r\n    this.setState( { loading: true}, () => {\r\n      commonService.deleteAPIWithAccessToken( 'organization',formdata)\r\n        .then( res => {\r\n          this.setState({loading: false});\r\n          if ( undefined === res.data || !res.data.status ) {            \r\n             toast.error(res.data.message);      \r\n            return;\r\n          }         \r\n          toast.success(res.data.message);\r\n          this.organizationList();\r\n        } )\r\n        .catch( err => {       \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n      } )\r\n    })\r\n    \r\n  }\r\n  filterOragnizationList(){\r\n    const filterItem = this.state.filterItem;\r\n    this.organizationList(filterItem);\r\n  }\r\n  \r\n  changeFilterHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const filterItem = this.state.filterItem\r\n    filterItem[name] = value;\r\n    this.setState({ filterItem: filterItem });\r\n  };\r\n  \r\n\r\n  setFilterFromDate = date => {\r\n    let filterFormField = this.state.filterItem;\r\n    filterFormField.filterFrom = date;\r\n    this.setState({ filterItem: filterFormField });\r\n  };\r\n  setFilterToDate = date => {\r\n    let filterFormField = this.state.filterItem;\r\n    filterFormField.filterTo = date;\r\n    this.setState({ filterItem: filterFormField });\r\n  };\r\n\r\n  resetfilterOragnization = () => {\r\n    this.setState({\r\n      filterItem: { filter_organization_id: '', filterOrgName: '', filterMobile: '', filterFrom:'',  filterTo:'', filterStatus:'', custom_search: ''}\r\n    });\r\n    this.organizationList();\r\n  }\r\n  \r\n  getFormatDate(date) {\r\n    var year = date.getFullYear().toString();\r\n    var month = (date.getMonth() + 101).toString().substring(1);\r\n    var day = (date.getDate() + 100).toString().substring(1);\r\n    return year + \"-\" + month + \"-\" + day;\r\n  }\r\n\r\n  render() {\r\n    \r\n    const { organizationList, loading, modal, formProccessing, changeStatusBtn, filterItem, errors } = this.state;     \r\n    let loaderElement = '';\r\n    if(loading)        \r\n      loaderElement = <Loader />\r\n    const processingBtnText = <>Submit <i className=\"fa fa-spinner\"></i></>;\r\n    \r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          \r\n          {loaderElement}\r\n          <Col lg={12}>\r\n            <Card>\r\n              <CardHeader className=\"mainHeading\">\r\n                <strong>Company List</strong>\r\n                <Button color=\"primary\" className=\"categoryAdd\" type=\"button\" onClick={this.toggle}><i className=\"fa fa-plus\"></i> Add New Company</Button>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <Row className=\"filterRow\">                      \r\n                      <Col md={\"2\"} className=\"pl-3\">\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"filterOrgName\">Organization</Label>\r\n                          <Input id=\"filterOrgName\" name=\"filterOrgName\" placeholder=\"Organization Name\" value={this.state.filterItem.filterOrgName}  onChange={this.changeFilterHandler} />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"custom_search\">Email ID / Name</Label>\r\n                          <Input type=\"text\" placeholder=\"Search By Email ID / Name\" id=\"custom_search\" name=\"custom_search\" value={this.state.filterItem.custom_search} onChange={this.changeFilterHandler} />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      \r\n                      <Col md={\"1\"}>\r\n                        <FormGroup> \r\n                          <Label>Status</Label>\r\n                          <Input type=\"select\" name=\"filterStatus\" value={filterItem.filterStatus} onChange={this.changeFilterHandler}>\r\n                            <option value=\"\">All</option>\r\n                            <option value=\"1\">Active</option>\r\n                            <option value=\"0\">Inactive</option>\r\n                          </Input>\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      {/*<Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label>Date From</Label>\r\n                          <DatePicker className=\"form-control\" selected={ filterItem.filterFrom } onChange={this.setFilterFromDate} dateFormat=\"MM/dd/yyyy\" />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label>Date To</Label>\r\n                          <DatePicker className=\"form-control\" selected={ filterItem.filterTo } onChange={this.setFilterToDate} dateFormat=\"MM/dd/yyyy\" />\r\n                        </FormGroup>  \r\n                      </Col>*/}\r\n                      <Col md={\"1\"} className=\"p-0\">\r\n                        <FormGroup> \r\n                          <Label>&nbsp;</Label><br />\r\n                          <Button color=\"success\" type=\"button\" size=\"sm\" onClick={this.filterOragnizationList}><i className=\"fa fa-search\"></i></Button>&nbsp;\r\n                          <Button color=\"danger\" type=\"reset\" size=\"sm\" onClick={this.resetfilterOragnization}><i className=\"fa fa-refresh\"></i></Button>\r\n                        </FormGroup>             \r\n                      </Col>\r\n                    </Row>  \r\n                  </Col>\r\n                  <Col lg={12}>\r\n                    <OrganizationData data={organizationList} editOrganizationAction={this.handleEditOrganization} deleteOrganizationAction={this.handleDeleteOrganization} dataTableLoadingStatus = {this.state.loading} />\r\n                  </Col>  \r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Modal isOpen={modal} toggle={this.toggle} className=\"full-width-modal-section organization-modal\">\r\n          <ModalHeader toggle={this.toggle}>Company Info</ModalHeader>\r\n          <Form onSubmit={this.submitHandler} noValidate>\r\n            <ModalBody>\r\n              \r\n              <Row>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"firstName\">First Name</Label>            \r\n                    <Input type=\"text\" placeholder=\"First Person *\" id=\"firstName\" name=\"firstName\" value={this.state.formField.firstName} onChange={this.changeHandler} required />\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['firstName']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"lastName\">Last Name</Label>            \r\n                    <Input type=\"text\" placeholder=\"Last Person\" id=\"lastName\" name=\"lastName\" value={this.state.formField.lastName} onChange={this.changeHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"organizationName\">Organization Name</Label>            \r\n                    <Input type=\"text\" placeholder=\"Organization Name *\" id=\"organizationName\" name=\"organizationName\" value={this.state.formField.organizationName} onChange={this.changeHandler} required />\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['organizationName']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>  \r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"email\">Email</Label>            \r\n                    <Input type=\"text\" placeholder=\"Email *\" id=\"email\" name=\"email\" value={this.state.formField.email} onChange={this.changeHandler} required />\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['email']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n                \r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"phoneNumber\">Phone Number</Label>            \r\n                    <Input type=\"number\" placeholder=\"Phone Number\" id=\"phoneNumber\" name=\"phoneNumber\" value={this.state.formField.phoneNumber} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"address\">Street Address </Label>            \r\n                    <Input type=\"text\" placeholder=\"Street Address\" id=\"address\" name=\"address\" value={this.state.formField.address} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                \r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"city\">City </Label>            \r\n                    <Input type=\"text\" placeholder=\"City\" id=\"city\" name=\"city\" value={this.state.formField.city} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup>\r\n                    <Label htmlFor=\"state\">State</Label>            \r\n                    <Input type=\"text\" placeholder=\"State\" id=\"state\" name=\"state\" value={this.state.formField.state} onChange={this.changeHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"postalCode\">Postal Code </Label>            \r\n                    <Input type=\"text\" placeholder=\"Postal Code\" id=\"postalCode\" name=\"postalCode\" value={this.state.formField.postalCode} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"country\">Country </Label>            \r\n                    <Input type=\"text\" placeholder=\"Country\" id=\"country\" name=\"country\" value={this.state.formField.country} onChange={this.changeHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>           \r\n            </ModalBody>\r\n            <ModalFooter>\r\n              {changeStatusBtn}\r\n              <Button color=\"primary\" disabled={formProccessing} type=\"submit\">{formProccessing ? processingBtnText : 'Save Changes' }</Button>\r\n              <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Organization;\r\n","import React, { Component } from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport commonService from '../../../../core/services/commonService';\r\nclass EmployeeData extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: []\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n  /* Edit Employee Info */\r\n  editEmployeeItem(rowIndex){    \r\n    this.props.editEmployeeAction(rowIndex);\r\n  }\r\n\r\n  deleteEmployeeItem(rowIndex){    \r\n    this.props.deleteEmployeeAction(rowIndex);\r\n  }\r\n\r\n  render() {\r\n    \r\n    let rowsItem = [];    \r\n    for(const [i, employee] of this.props.data.entries()){\r\n      console.log(i);\r\n      let orgInfo = {   \r\n        organizationName: employee.organizationName,      \r\n        firstName: `${employee.firstName} ${employee.lastName}`,\r\n        email: employee.email,\r\n        roleName: employee.roleName || \" \",\r\n        phoneNumber: employee.phoneNumber || \" \",\r\n        address: employee.address || \" \",\r\n        city: employee.city || \" \",      \r\n        state: employee.state || \" \",\r\n        country: employee.country || \" \",\r\n        status: commonService.getStatus(employee.status),   \r\n        action: \"\",       \r\n      }      \r\n      rowsItem.push(orgInfo);\r\n    }      \r\n    \r\n    const columns = [ \r\n      {\r\n        label: 'Employee Name',\r\n        name: 'firstName',\r\n      },     \r\n      {\r\n        label: 'Organization Name',\r\n        name: 'organizationName',\r\n      },\r\n      \r\n      {\r\n        label: 'Email',\r\n        name: 'email',\r\n      },\r\n      {\r\n        label: 'Phone Number',\r\n        name: 'phoneNumber',\r\n      },\r\n      {\r\n        label: 'Status',\r\n        name: 'status',\r\n      },\r\n      {\r\n        label: 'Action',\r\n        name: 'action',\r\n        options: {\r\n          filter: true,\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            let i = tableMeta.rowIndex;\r\n           \r\n            return (\r\n             <p><button className=\"btn-edit\" disabled={this.state.buttonProcessing} onClick={() => \r\n              this.editEmployeeItem(i)}><i className=\"fa fa-pencil\"></i> </button>\r\n              <button className=\"btn-delete\" disabled={this.state.buttonProcessing} onClick={() => {if( window.confirm('Are you sure you wish to delete this employee?'))\r\n              this.deleteEmployeeItem(i)}}><i className=\"fa fa-trash\"></i></button></p>\r\n            );\r\n          },\r\n        }\r\n      },\r\n    ];\r\n    const options = {\r\n      search: true,viewColumns: false,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      download: true,\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Processing........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      fixedHeaderOptions: { xAxis: false, yAxis: false }\r\n\r\n    };\r\n    \r\n    return (\r\n      <MUIDataTable\r\n        title={\"Company Employee User\"}\r\n        data={rowsItem}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeeData;","import React, { Component } from 'react';\r\nimport { Card, CardBody, CardHeader, Col, Row, Button, Form, Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../../core/services/commonService';\r\nimport Loader from '../../../Loader/Loader';\r\nimport EmployeeData from './EmployeeData';\r\nimport './Employee.css'\r\nconst queryString = require('query-string');\r\nclass Employee extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      modal: false,      \r\n      EmployeeList: [],\r\n      organizationList: [],\r\n      loading: true,\r\n      formProccessing: false,\r\n      rowIndex: -1,\r\n      formField: { organizationId: '', email: '', firstName: '',lastName: '', phoneNumber: '', address: '', city: '', state: '', country: '', postalCode: '', role: '', status: '' },\r\n      errors: { email: '', employee_name: '', role: '', error: ''},\r\n      formValid: true,\r\n      filterItem: { filter_organization_id: '', country: '', state: '', custom_search: ''},\r\n    } \r\n    this.handleEditEmployee = this.handleEditEmployee.bind(this);\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    this.handleDeleteEmployee = this.handleDeleteEmployee.bind(this);\r\n    this.filterEmployeeList = this.filterEmployeeList.bind(this);\r\n    this.resetSearchFilter = this.resetSearchFilter.bind(this);\r\n    \r\n  }\r\n  \r\n  // Fetch the Employee List\r\n  componentDidMount() { \r\n    \r\n    const queryParams = queryString.parse(this.props.location.search);\r\n    if( queryParams.organizationId !== undefined) {     \r\n      let filterItem = this.state.filterItem;\r\n      filterItem.filter_organization_id = queryParams.organizationId;\r\n      this.setState({filterItem: filterItem});\r\n    }\r\n    this.EmployeeList(this.state.filterItem);\r\n    this.organizationList();\r\n    \r\n  }\r\n  /*Employee List API*/\r\n  EmployeeList(filterItem={}) {\r\n    let stroreWalkQuery = \"\";\r\n    if(filterItem.filter_organization_id !== undefined && filterItem.filter_organization_id !== \"\" ) \r\n      stroreWalkQuery += (stroreWalkQuery !==\"\" ) ? \"&organizationId=\"+filterItem.filter_organization_id: \"?organizationId=\"+filterItem.filter_organization_id;\r\n    if(filterItem.custom_search !== undefined && filterItem.custom_search !== \"\" ) \r\n      stroreWalkQuery += (stroreWalkQuery !==\"\" ) ? \"&keyword=\"+filterItem.custom_search: \"?keyword=\"+filterItem.custom_search;\r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('employee'+stroreWalkQuery)\r\n        .then( res => {\r\n          \r\n           \r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }   \r\n\r\n          this.setState({loading:false, EmployeeList: res.data.data});     \r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    } )\r\n  }\r\n\r\n  /*Organization List API*/\r\n  organizationList() {   \r\n    \r\n    commonService.getAPIWithAccessToken('organization')\r\n      .then( res => {       \r\n         \r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n          this.setState( { loading: false } );\r\n          toast.error(res.data.message);\r\n          return;\r\n        }   \r\n\r\n        this.setState({loading:false, organizationList: res.data.data});     \r\n       \r\n      } )\r\n      .catch( err => {         \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.history.push('/login');\r\n        }\r\n        else \r\n          this.setState( { loading: false } );\r\n      } )\r\n    \r\n  }\r\n  filterEmployeeList(){\r\n    const filterItem = this.state.filterItem;\r\n    this.EmployeeList(filterItem);\r\n  }\r\n  /* Submit Form Handler*/\r\n  submitHandler (event) {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n    if(this.validateForm())\r\n      return false;\r\n    this.setState( { formProccessing: true}, () => {\r\n      const formInputField = this.state.formField;\r\n      let statusText = commonService.getStatusVal(formInputField.status)\r\n    \r\n      const formData = {\r\n        \"email\": formInputField.email,\r\n        \"firstName\": formInputField.firstName, \r\n        \"lastName\": formInputField.lastName, \r\n        \"phoneNumber\": formInputField.phoneNumber, \r\n        \"address\": formInputField.address, \r\n        \"roleName\": formInputField.role, \r\n        \"city\": formInputField.city, \r\n        \"state\": formInputField.state, \r\n        \"country\": formInputField.country, \r\n        \"postalCode\": formInputField.postalCode, \r\n        \"employeeName\": formInputField.firstName,\r\n        \"organizationAuthId\": formInputField.organizationId,\r\n        \"status\": statusText\r\n      };\r\n      const rowIndex = this.state.rowIndex;\r\n      if(rowIndex > -1) {\r\n        const employeeInfo = this.state.EmployeeList[rowIndex];\r\n\r\n        commonService.putAPIWithAccessToken('employee/'+employeeInfo.profileId, formData)\r\n        .then( res => {\r\n          \r\n           \r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n           \r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          \r\n          this.setState({ modal: false, formProccessing: false});\r\n          toast.success(res.data.message);\r\n          this.EmployeeList(this.state.filterItem);\r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n        } )\r\n      }\r\n      else{\r\n        commonService.postAPIWithAccessToken('employee', formData)\r\n        .then( res => {\r\n         \r\n          if ( undefined === res.data.data || !res.data.status ) { \r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          \r\n          this.setState({ modal: false});\r\n          toast.success(res.data.message);\r\n          this.EmployeeList(this.state.filterItem);\r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n        } )\r\n      }\r\n    } );\r\n    \r\n  };\r\n  /* Input Field On changes*/\r\n  changeHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const formField = this.state.formField\r\n    formField[name] = value;\r\n    this.setState({ formField: formField });\r\n  };\r\n\r\n  changeFilterHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const filterItem = this.state.filterItem\r\n    filterItem[name] = value;\r\n    this.setState({ filterItem: filterItem });\r\n  };\r\n  \r\n  /* Validate Form Field */\r\n  \r\n  \r\n  /* Validate Form */\r\n  validateForm() {\r\n    let formValid = false;\r\n    let formField = this.state.formField; \r\n    let errors = {};\r\n    var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n    if(formField.firstName === undefined || formField.firstName.trim() === \"\"){\r\n      formValid = true;\r\n      errors['firstName'] = \"First name field required!\";\r\n    }\r\n    if(formField.organizationId === undefined || formField.organizationId.trim() === \"\"){\r\n      formValid = true;\r\n      errors['organizationId'] = \"Organization field required!\";\r\n    }\r\n    if(formField.email === undefined || formField.email.trim() === \"\"){\r\n      formValid = true;\r\n      errors['email'] = \"Email field required!\";\r\n    }\r\n    else if(!(pattern.test(formField.email))){\r\n      formValid = true;\r\n      errors['email'] = \"Invalid email format\";\r\n    }\r\n    if(formField.status === undefined || formField.status.trim() === \"\" ){\r\n      formValid = true;\r\n      errors['status'] = 'Status field required';\r\n    }\r\n    this.setState({errors:  errors});\r\n    return formValid;\r\n    \r\n  }\r\n  /* Set Error Class*/\r\n  errorClass(error) {\r\n    return(error.length === 0 ? '' : 'has-error');\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      rowIndex: -1,\r\n      formValid: false,\r\n      formProccessing : false,\r\n      formField: {email: '', firstName: '', lastName:'', phoneNumber: '', address: '', city: '', state: '', country: '', postalCode: '', role: '' },\r\n      errors: {email: '', employee_name: '', role: '', error: ''}\r\n    });\r\n  }\r\n  /* Edit Employee*/\r\n  handleEditEmployee(rowIndex){\r\n      const employeeInfo = this.state.EmployeeList[rowIndex];\r\n      let status = \"Active\"\r\n      status = commonService.getStatus(employeeInfo.status);\r\n      const formField = {\r\n        organizationId: employeeInfo.organizationAuthId,        \r\n        email: employeeInfo.email, \r\n        firstName: employeeInfo.firstName,\r\n        lastName: employeeInfo.lastName, \r\n        phoneNumber: employeeInfo.phoneNumber, \r\n        address: employeeInfo.address, \r\n        city: employeeInfo.city, \r\n        state: employeeInfo.state, \r\n        country: employeeInfo.country, \r\n        postalCode: employeeInfo.postalCode, \r\n        role: employeeInfo.roleName,\r\n        status: status };\r\n      this.setState({rowIndex: rowIndex, formField: formField, formProccessing : false, modal: true, formValid: true});\r\n  }\r\n  /* Delete Employee*/\r\n  handleDeleteEmployee(rowIndex){\r\n   \r\n    const employeeInfo = this.state.EmployeeList[rowIndex];\r\n    \r\n    this.setState( { loading : true}, () => {   \r\n      commonService.deleteAPIWithAccessToken('employee', {employeeId: employeeInfo.profileId})\r\n      .then( res => {\r\n        \r\n         \r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n         \r\n          this.setState( { loading : false} );\r\n          toast.error(res.data.message);\r\n          return;\r\n        } \r\n        \r\n        this.setState({ modal: false, loading : false});\r\n        toast.success(res.data.message);\r\n        this.EmployeeList();\r\n       \r\n      } )\r\n      .catch( err => {         \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.history.push('/login');\r\n        }\r\n        else\r\n          this.setState( { loading : false } );\r\n          toast.error(err.message);\r\n      } )\r\n    } );\r\n   \r\n    \r\n  }\r\n \r\n  resetSearchFilter() {\r\n    this.setState({filterItem: {filter_organization_id: \"\", custom_search: \"\" }});\r\n    this.EmployeeList();\r\n  }\r\n  render() {\r\n\r\n    const { EmployeeList, loading, modal, formProccessing, organizationList, errors } = this.state;     \r\n    let loaderElement = '';\r\n    if(loading)        \r\n      loaderElement = <Loader />\r\n\r\n    const processingBtnText = <>Submit <i className=\"fa fa-spinner\"></i></>;\r\n    \r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          \r\n          {loaderElement}\r\n          <Col lg={12}>\r\n            <Card className=\"oep-card\">\r\n              <CardHeader className=\"mainHeading\">\r\n                <strong>Company Employee List</strong> <Button color=\"primary\" className=\"categoryAdd\" type=\"button\" onClick={this.toggle}><i className=\"fa fa-plus\"></i> Add New</Button>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <Row className=\"filterRow\"> \r\n                \r\n                      <Col md={\"2\"} className=\"pl-3\">\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filter_organization_id\">Organization</Label>            \r\n                          <Input type=\"select\" placeholder=\"Organization *\" id=\"filter_organization_id\" name=\"filter_organization_id\" value={this.state.filterItem.filter_organization_id} onChange={this.changeFilterHandler} >\r\n                            <option value=\"\">Select</option>\r\n                            {organizationList.map((organizationInfo, index) =>\r\n                              <SetOrganizationDropDownItem key={index} organizationInfo={organizationInfo} />\r\n                            )}\r\n                          </Input>\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      \r\n                      <Col md={\"3\"}>\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filter_organization_id\">Search By Email/ Name</Label>            \r\n                          <Input type=\"text\" placeholder=\"Search By Email/ Name\" id=\"custom_search\" name=\"custom_search\" value={this.state.formField.custom_search} onChange={this.changeFilterHandler} />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"1\"} className=\"p-0\">\r\n                        <FormGroup> \r\n                          <Label>&nbsp;</Label><br />\r\n                          <Button color=\"success\" type=\"button\" size=\"sm\" onClick={this.filterEmployeeList}><i className=\"fa fa-search\"></i></Button>&nbsp;\r\n                          <Button color=\"danger\" type=\"reset\" size=\"sm\" onClick={this.resetSearchFilter}><i className=\"fa fa-refresh\"></i></Button>\r\n                        </FormGroup>             \r\n                      </Col>\r\n                    </Row> \r\n                  </Col>\r\n                  <Col md={12}>\r\n                    <EmployeeData data={EmployeeList} editEmployeeAction={this.handleEditEmployee} deleteEmployeeAction={this.handleDeleteEmployee} dataTableLoadingStatus = {this.state.loading} />\r\n                  </Col>\r\n                </Row> \r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Modal isOpen={modal} toggle={this.toggle} className=\"full-width-modal-section employee-modal\">\r\n          <ModalHeader toggle={this.toggle}>Company Employee User</ModalHeader>\r\n          <Form onSubmit={this.submitHandler} noValidate>\r\n            <ModalBody>\r\n              \r\n              <Row>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"organizationId\">Organization Name</Label>            \r\n                    <Input type=\"select\" placeholder=\"Organization Name *\" id=\"organizationId\" name=\"organizationId\" value={this.state.formField.organizationId} onChange={this.changeHandler} required >\r\n                      <option value=\"\">Select</option>\r\n                      {organizationList.map((organizationInfo, index) =>\r\n                        <SetOrganizationDropDownItem key={index} organizationInfo={organizationInfo} />\r\n                      )}\r\n                    </Input>\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['organizationId']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>  \r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"firstName\">First Name</Label>            \r\n                    <Input type=\"text\" placeholder=\"First Person *\" id=\"firstName\" name=\"firstName\" value={this.state.formField.firstName} onChange={this.changeHandler} required />\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['firstName']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"lastName\">Last Name</Label>            \r\n                    <Input type=\"text\" placeholder=\"Last Person\" id=\"lastName\" name=\"lastName\" value={this.state.formField.lastName} onChange={this.changeHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n                \r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"email\">Email</Label>            \r\n                    <Input type=\"text\" placeholder=\"Email *\" id=\"email\" name=\"email\" value={this.state.formField.email} onChange={this.changeHandler} required />\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['email']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n                \r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"phoneNumber\">Phone Number</Label>            \r\n                    <Input type=\"number\" placeholder=\"Phone Number\" id=\"phoneNumber\" name=\"phoneNumber\" value={this.state.formField.phoneNumber} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"address\">Street Address </Label>            \r\n                    <Input type=\"text\" placeholder=\"Street Address\" id=\"address\" name=\"address\" value={this.state.formField.address} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                \r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"city\">City </Label>            \r\n                    <Input type=\"text\" placeholder=\"City\" id=\"city\" name=\"city\" value={this.state.formField.city} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup>\r\n                    <Label htmlFor=\"state\">State</Label>            \r\n                    <Input type=\"text\" placeholder=\"State\" id=\"state\" name=\"state\" value={this.state.formField.state} onChange={this.changeHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"postalCode\">Postal Code </Label>            \r\n                    <Input type=\"text\" placeholder=\"Postal Code\" id=\"postalCode\" name=\"postalCode\" value={this.state.formField.postalCode} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"country\">Country </Label>            \r\n                    <Input type=\"text\" placeholder=\"Country\" id=\"country\" name=\"country\" value={this.state.formField.country} onChange={this.changeHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"template_status\">Status</Label>            \r\n                    <Input type=\"select\" placeholder=\"Status *\" invalid={errors['status'] !== undefined && errors['status'] !== \"\"} id=\"status\" name=\"status\" value={this.state.formField.status} onChange={this.changeHandler} required >\r\n                      <option value=\"\">Select Status</option>\r\n                      <option value=\"Active\">Active</option>\r\n                      <option value=\"Inactive\">Inactive</option>\r\n                    </Input>\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['status']}\r\n                    </div>\r\n              </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"primary\" disabled={formProccessing} type=\"submit\">{formProccessing ? processingBtnText : 'Submit' }</Button>\r\n              <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nfunction SetOrganizationDropDownItem (props) {\r\n  const organizationInfo = props.organizationInfo;\r\n  return (<option value={organizationInfo.authId} >{organizationInfo.organizationName}</option>)\r\n}\r\n\r\nexport default Employee;\r\n","import React, { Component } from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport commonService from '../../../../core/services/commonService';\r\nclass CompanyUserData extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: []\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n  /* Edit Employee Info */\r\n  editEmployeeItem(rowIndex){    \r\n    this.props.editEmployeeAction(rowIndex);\r\n  }\r\n\r\n  deleteEmployeeItem(rowIndex){    \r\n    this.props.deleteEmployeeAction(rowIndex);\r\n  }\r\n\r\n  render() {\r\n    \r\n    let rowsItem = [];    \r\n    for(const [i, employee] of this.props.data.entries()){\r\n      console.log(i);\r\n      let orgInfo = {   \r\n        organizationName: employee.organizationName,      \r\n        firstName: `${employee.firstName} ${employee.lastName}`,\r\n        email: employee.email,\r\n        roleName: employee.roleName || \" \",\r\n        phoneNumber: employee.phoneNumber || \" \",\r\n        address: employee.address || \" \",\r\n        city: employee.city || \" \",      \r\n        state: employee.state || \" \",\r\n        country: employee.country || \" \",\r\n        status: commonService.getStatus(employee.status),   \r\n        action: \"\",       \r\n      }      \r\n      rowsItem.push(orgInfo);\r\n    }      \r\n    \r\n    const columns = [ \r\n      {\r\n        label: 'User Name',\r\n        name: 'firstName',\r\n      },     \r\n      {\r\n        label: 'Organization Name',\r\n        name: 'organizationName',\r\n      },\r\n      \r\n      {\r\n        label: 'Email',\r\n        name: 'email',\r\n      },\r\n      {\r\n        label: 'Phone Number',\r\n        name: 'phoneNumber',\r\n      },\r\n      {\r\n        label: 'Status',\r\n        name: 'status',\r\n      },\r\n      {\r\n        label: 'Action',\r\n        name: 'action',\r\n        options: {\r\n          filter: true,\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            let i = tableMeta.rowIndex;\r\n           \r\n            return (\r\n             <p><button className=\"btn-edit\" disabled={this.state.buttonProcessing} onClick={() => \r\n              this.editEmployeeItem(i)}><i className=\"fa fa-pencil\"></i> </button>\r\n              <button className=\"btn-delete\" disabled={this.state.buttonProcessing} onClick={() => {if( window.confirm('Are you sure you wish to delete this employee?'))\r\n              this.deleteEmployeeItem(i)}}><i className=\"fa fa-trash\"></i></button></p>\r\n            );\r\n          },\r\n        }\r\n      },\r\n    ];\r\n    const options = {\r\n      search: true,viewColumns: false,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      download: true,\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Processing........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      fixedHeaderOptions: { xAxis: false, yAxis: false }\r\n\r\n    };\r\n    \r\n    return (\r\n      <MUIDataTable\r\n        title={\"Company User\"}\r\n        data={rowsItem}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CompanyUserData;","import React, { Component } from 'react';\r\nimport { Card, CardBody, CardHeader, Col, Row, Button, Form, Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../../core/services/commonService';\r\nimport Loader from '../../../Loader/Loader';\r\nimport CompanyUserData from './CompanyUserData';\r\nimport './CompanyUser.css'\r\nconst queryString = require('query-string');\r\nclass CompanyUser extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      modal: false,      \r\n      EmployeeList: [],\r\n      organizationList: [],\r\n      loading: true,\r\n      formProccessing: false,\r\n      rowIndex: -1,\r\n      formField: { organizationId: '', email: '', firstName: '',lastName: '', phoneNumber: '', address: '', city: '', state: '', country: '', postalCode: '', role: '', status: '' },\r\n      errors: { email: '', employee_name: '', role: '', error: ''},\r\n      formValid: true,\r\n      filterItem: { filter_organization_id: '', country: '', state: '', custom_search: ''},\r\n    } \r\n    this.handleEditEmployee = this.handleEditEmployee.bind(this);\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    this.handleDeleteEmployee = this.handleDeleteEmployee.bind(this);\r\n    this.filterEmployeeList = this.filterEmployeeList.bind(this);\r\n    this.resetSearchFilter = this.resetSearchFilter.bind(this);\r\n    \r\n  }\r\n  \r\n  // Fetch the Employee List\r\n  componentDidMount() { \r\n    const queryParams = queryString.parse(this.props.location.search);\r\n    if( queryParams.organizationId !== undefined) {     \r\n      let filterItem = this.state.filterItem;\r\n      filterItem.filter_organization_id = queryParams.organizationId;\r\n      this.setState({filterItem: filterItem});\r\n    }\r\n    this.EmployeeList(this.state.filterItem);\r\n    this.organizationList();\r\n    \r\n  }\r\n  /*Employee List API*/\r\n  EmployeeList(filterItem={}) {\r\n    let stroreWalkQuery = \"?roleType=company_user\";\r\n    if(filterItem.filter_organization_id !== undefined && filterItem.filter_organization_id !== \"\" ) \r\n      stroreWalkQuery += (stroreWalkQuery !==\"\" ) ? \"&organizationId=\"+filterItem.filter_organization_id: \"?organizationId=\"+filterItem.filter_organization_id;\r\n    if(filterItem.custom_search !== undefined && filterItem.custom_search !== \"\" ) \r\n      stroreWalkQuery += (stroreWalkQuery !==\"\" ) ? \"&keyword=\"+filterItem.custom_search: \"?keyword=\"+filterItem.custom_search;\r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('employee'+stroreWalkQuery)\r\n        .then( res => {\r\n          \r\n           \r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }   \r\n\r\n          this.setState({loading:false, EmployeeList: res.data.data});     \r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    } )\r\n  }\r\n\r\n  /*Organization List API*/\r\n  organizationList() {   \r\n    \r\n    commonService.getAPIWithAccessToken('organization')\r\n      .then( res => {       \r\n         \r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n          this.setState( { loading: false } );\r\n          toast.error(res.data.message);\r\n          return;\r\n        }   \r\n\r\n        this.setState({loading:false, organizationList: res.data.data});     \r\n       \r\n      } )\r\n      .catch( err => {         \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.history.push('/login');\r\n        }\r\n        else \r\n          this.setState( { loading: false } );\r\n      } )\r\n    \r\n  }\r\n  filterEmployeeList(){\r\n    const filterItem = this.state.filterItem;\r\n    this.EmployeeList(filterItem);\r\n  }\r\n  /* Submit Form Handler*/\r\n  submitHandler (event) {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n    if(this.validateForm())\r\n      return false;\r\n    this.setState( { formProccessing: true}, () => {\r\n      const formInputField = this.state.formField;\r\n      let statusText = commonService.getStatusVal(formInputField.status)\r\n    \r\n      const formData = {\r\n        \"email\": formInputField.email,\r\n        \"firstName\": formInputField.firstName, \r\n        \"lastName\": formInputField.lastName, \r\n        \"phoneNumber\": formInputField.phoneNumber, \r\n        \"address\": formInputField.address, \r\n        \"roleName\": formInputField.role, \r\n        \"city\": formInputField.city, \r\n        \"state\": formInputField.state, \r\n        \"country\": formInputField.country, \r\n        \"postalCode\": formInputField.postalCode, \r\n        \"employeeName\": formInputField.firstName,\r\n        \"organizationAuthId\": formInputField.organizationId,\r\n        \"status\": statusText,\r\n        \"roleType\": \"company_user\"\r\n      };\r\n      const rowIndex = this.state.rowIndex;\r\n      if(rowIndex > -1) {\r\n        const employeeInfo = this.state.EmployeeList[rowIndex];\r\n\r\n        commonService.putAPIWithAccessToken('employee/'+employeeInfo.profileId, formData)\r\n        .then( res => {\r\n          \r\n           \r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n           \r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          \r\n          this.setState({ modal: false, formProccessing: false});\r\n          toast.success(res.data.message);\r\n          this.EmployeeList(this.state.filterItem);\r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n        } )\r\n      }\r\n      else{\r\n        commonService.postAPIWithAccessToken('employee', formData)\r\n        .then( res => {\r\n         \r\n          if ( undefined === res.data.data || !res.data.status ) { \r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          \r\n          this.setState({ modal: false});\r\n          toast.success(res.data.message);\r\n          this.EmployeeList(this.state.filterItem);\r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n        } )\r\n      }\r\n    } );\r\n    \r\n  };\r\n  /* Input Field On changes*/\r\n  changeHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const formField = this.state.formField\r\n    formField[name] = value;\r\n    this.setState({ formField: formField });\r\n  };\r\n\r\n  changeFilterHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const filterItem = this.state.filterItem\r\n    filterItem[name] = value;\r\n    this.setState({ filterItem: filterItem });\r\n  };\r\n  \r\n  /* Validate Form Field */\r\n  \r\n  \r\n  /* Validate Form */\r\n  validateForm() {\r\n    let formValid = false;\r\n    let formField = this.state.formField; \r\n    let errors = {};\r\n    var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n    if(formField.firstName === undefined || formField.firstName.trim() === \"\"){\r\n      formValid = true;\r\n      errors['firstName'] = \"First name field required!\";\r\n    }\r\n    if(formField.organizationId === undefined || formField.organizationId.trim() === \"\"){\r\n      formValid = true;\r\n      errors['organizationId'] = \"Organization field required!\";\r\n    }\r\n    if(formField.email === undefined || formField.email.trim() === \"\"){\r\n      formValid = true;\r\n      errors['email'] = \"Email field required!\";\r\n    }\r\n    else if(!(pattern.test(formField.email))){\r\n      formValid = true;\r\n      errors['email'] = \"Invalid email format\";\r\n    }\r\n    if(formField.status === undefined || formField.status.trim() === \"\" ){\r\n      formValid = true;\r\n      errors['status'] = 'Status field required';\r\n    }\r\n    this.setState({errors:  errors});\r\n    return formValid;\r\n    \r\n  }\r\n  /* Set Error Class*/\r\n  errorClass(error) {\r\n    return(error.length === 0 ? '' : 'has-error');\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      rowIndex: -1,\r\n      formValid: false,\r\n      formProccessing : false,\r\n      formField: {email: '', firstName: '', lastName:'', phoneNumber: '', address: '', city: '', state: '', country: '', postalCode: '', role: '' },\r\n      errors: {email: '', employee_name: '', role: '', error: ''}\r\n    });\r\n  }\r\n  /* Edit Employee*/\r\n  handleEditEmployee(rowIndex){\r\n      const employeeInfo = this.state.EmployeeList[rowIndex];\r\n      let status = \"Active\"\r\n      status = commonService.getStatus(employeeInfo.status);\r\n      const formField = {\r\n        organizationId: employeeInfo.organizationAuthId,        \r\n        email: employeeInfo.email, \r\n        firstName: employeeInfo.firstName,\r\n        lastName: employeeInfo.lastName, \r\n        phoneNumber: employeeInfo.phoneNumber, \r\n        address: employeeInfo.address, \r\n        city: employeeInfo.city, \r\n        state: employeeInfo.state, \r\n        country: employeeInfo.country, \r\n        postalCode: employeeInfo.postalCode, \r\n        role: employeeInfo.roleName,\r\n        status: status };\r\n      this.setState({rowIndex: rowIndex, formField: formField, formProccessing : false, modal: true, formValid: true});\r\n  }\r\n  /* Delete Employee*/\r\n  handleDeleteEmployee(rowIndex){\r\n   \r\n    const employeeInfo = this.state.EmployeeList[rowIndex];\r\n    \r\n    this.setState( { loading : true}, () => {   \r\n      commonService.deleteAPIWithAccessToken('employee', {employeeId: employeeInfo.profileId})\r\n      .then( res => {\r\n        \r\n         \r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n         \r\n          this.setState( { loading : false} );\r\n          toast.error(res.data.message);\r\n          return;\r\n        } \r\n        \r\n        this.setState({ modal: false, loading : false});\r\n        toast.success(res.data.message);\r\n        this.EmployeeList();\r\n       \r\n      } )\r\n      .catch( err => {         \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.history.push('/login');\r\n        }\r\n        else\r\n          this.setState( { loading : false } );\r\n          toast.error(err.message);\r\n      } )\r\n    } );\r\n   \r\n    \r\n  }\r\n \r\n  resetSearchFilter() {\r\n    this.setState({filterItem: {filter_organization_id: \"\", custom_search: \"\" }});\r\n    this.EmployeeList();\r\n  }\r\n  render() {\r\n\r\n    const { EmployeeList, loading, modal, formProccessing, organizationList, errors } = this.state;     \r\n    let loaderElement = '';\r\n    if(loading)        \r\n      loaderElement = <Loader />\r\n\r\n    const processingBtnText = <>Submit <i className=\"fa fa-spinner\"></i></>;\r\n    \r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          \r\n          {loaderElement}\r\n          <Col lg={12}>\r\n            <Card className=\"oep-card\">\r\n              <CardHeader className=\"mainHeading\">\r\n                <strong>Company User List</strong> <Button color=\"primary\" className=\"categoryAdd\" type=\"button\" onClick={this.toggle}><i className=\"fa fa-plus\"></i> Add New</Button>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <Row className=\"filterRow\"> \r\n                \r\n                      <Col md={\"2\"} className=\"pl-3\">\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filter_organization_id\">Organization</Label>            \r\n                          <Input type=\"select\" placeholder=\"Organization *\" id=\"filter_organization_id\" name=\"filter_organization_id\" value={this.state.filterItem.filter_organization_id} onChange={this.changeFilterHandler} >\r\n                            <option value=\"\">Select</option>\r\n                            {organizationList.map((organizationInfo, index) =>\r\n                              <SetOrganizationDropDownItem key={index} organizationInfo={organizationInfo} />\r\n                            )}\r\n                          </Input>\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      \r\n                      <Col md={\"3\"}>\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filter_organization_id\">Search By Email/ Name</Label>            \r\n                          <Input type=\"text\" placeholder=\"Search By Email/ Name\" id=\"custom_search\" name=\"custom_search\" value={this.state.formField.custom_search} onChange={this.changeFilterHandler} />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"1\"} className=\"p-0\">\r\n                        <FormGroup> \r\n                          <Label>&nbsp;</Label><br />\r\n                          <Button color=\"success\" type=\"button\" size=\"sm\" onClick={this.filterEmployeeList}><i className=\"fa fa-search\"></i></Button>&nbsp;\r\n                          <Button color=\"danger\" type=\"reset\" size=\"sm\" onClick={this.resetSearchFilter}><i className=\"fa fa-refresh\"></i></Button>\r\n                        </FormGroup>             \r\n                      </Col>\r\n                    </Row> \r\n                  </Col>\r\n                  <Col md={12}>\r\n                    <CompanyUserData data={EmployeeList} editEmployeeAction={this.handleEditEmployee} deleteEmployeeAction={this.handleDeleteEmployee} dataTableLoadingStatus = {this.state.loading} />\r\n                  </Col>\r\n                </Row> \r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Modal isOpen={modal} toggle={this.toggle} className=\"full-width-modal-section employee-modal\">\r\n          <ModalHeader toggle={this.toggle}>Company User</ModalHeader>\r\n          <Form onSubmit={this.submitHandler} noValidate>\r\n            <ModalBody>\r\n              \r\n              <Row>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"organizationId\">Organization Name</Label>            \r\n                    <Input type=\"select\" placeholder=\"Organization Name *\" id=\"organizationId\" name=\"organizationId\" value={this.state.formField.organizationId} onChange={this.changeHandler} required >\r\n                      <option value=\"\">Select</option>\r\n                      {organizationList.map((organizationInfo, index) =>\r\n                        <SetOrganizationDropDownItem key={index} organizationInfo={organizationInfo} />\r\n                      )}\r\n                    </Input>\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['organizationId']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>  \r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"firstName\">First Name</Label>            \r\n                    <Input type=\"text\" placeholder=\"First Person *\" id=\"firstName\" name=\"firstName\" value={this.state.formField.firstName} onChange={this.changeHandler} required />\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['firstName']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"lastName\">Last Name</Label>            \r\n                    <Input type=\"text\" placeholder=\"Last Person\" id=\"lastName\" name=\"lastName\" value={this.state.formField.lastName} onChange={this.changeHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n                \r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"email\">Email</Label>            \r\n                    <Input type=\"text\" placeholder=\"Email *\" id=\"email\" name=\"email\" value={this.state.formField.email} onChange={this.changeHandler} required />\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['email']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"roleName\">Role</Label>            \r\n                    <Input type=\"text\" placeholder=\"Role\" id=\"roleName\" name=\"roleName\" value={this.state.formField.roleName} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"phoneNumber\">Phone Number</Label>            \r\n                    <Input type=\"number\" placeholder=\"Phone Number\" id=\"phoneNumber\" name=\"phoneNumber\" value={this.state.formField.phoneNumber} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"address\">Street Address </Label>            \r\n                    <Input type=\"text\" placeholder=\"Street Address\" id=\"address\" name=\"address\" value={this.state.formField.address} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                \r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"city\">City </Label>            \r\n                    <Input type=\"text\" placeholder=\"City\" id=\"city\" name=\"city\" value={this.state.formField.city} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup>\r\n                    <Label htmlFor=\"state\">State</Label>            \r\n                    <Input type=\"text\" placeholder=\"State\" id=\"state\" name=\"state\" value={this.state.formField.state} onChange={this.changeHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"postalCode\">Postal Code </Label>            \r\n                    <Input type=\"text\" placeholder=\"Postal Code\" id=\"postalCode\" name=\"postalCode\" value={this.state.formField.postalCode} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"country\">Country </Label>            \r\n                    <Input type=\"text\" placeholder=\"Country\" id=\"country\" name=\"country\" value={this.state.formField.country} onChange={this.changeHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"template_status\">Status</Label>            \r\n                    <Input type=\"select\" placeholder=\"Status *\" invalid={errors['status'] !== undefined && errors['status'] !== \"\"} id=\"status\" name=\"status\" value={this.state.formField.status} onChange={this.changeHandler} required >\r\n                      <option value=\"\">Select Status</option>\r\n                      <option value=\"Active\">Active</option>\r\n                      <option value=\"Inactive\">Inactive</option>\r\n                    </Input>\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['status']}\r\n                    </div>\r\n              </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"primary\" disabled={formProccessing} type=\"submit\">{formProccessing ? processingBtnText : 'Submit' }</Button>\r\n              <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nfunction SetOrganizationDropDownItem (props) {\r\n  const organizationInfo = props.organizationInfo;\r\n  return (<option value={organizationInfo.authId} >{organizationInfo.organizationName}</option>)\r\n}\r\n\r\nexport default CompanyUser;\r\n","import Dashboard from '../views/AdminDashboard/Dashboard/Dashboard';\r\nimport Category from '../views/AdminDashboard/Category/Category';\r\nimport ThreatType from '../views/AdminDashboard/ThreatType/ThreatType'\r\nimport organizationList from '../views/AdminDashboard/Organization/Organization';\r\nimport employeeList from '../views/AdminDashboard/Organization/Employee/Employee';\r\nimport CompanyUser from '../views/AdminDashboard/Organization/CompanyUser/CompanyUser';\r\n/*import UsersList from '../views/AdminDashboard/Users/Users'\r\nimport UserDetails from '../views/AdminDashboard/Users/User';\r\nimport EnquiryListing from '../views/AdminDashboard/Organization/Enquiry/EnquiryListing';\r\nimport AdvertiserPlans from '../views/AdminDashboard/Subscription/AdvertiserSubscription';\r\nimport ChangePassword from '../views/AdminDashboard/ChangePassword/ChangePassword';\r\nimport UserTransactionList from '../views/AdminDashboard/UserTransactions/UserTransactionList';\r\nimport SubscribedAdvertiserList from '../views/AdminDashboard/SubscribedUsers/SubscribedAdvertiserList';\r\nimport SubscribedOwnerList from '../views/AdminDashboard/SubscribedUsers/SubscribedOwnerList';\r\nimport ApplicationList from '../views/AdminDashboard/VaApplications/ApplicationLists.';\r\nimport EditVaApplication from '../views/AdminDashboard/VaApplications/EditVaApplication';\r\nimport VaRequestListing from '../views/AdminDashboard/Organization/VaRequest/VaRequestListing';\r\nimport ScheduledBooking from '../views/AdminDashboard/ScheduledBooking/ScheduledBooking';\r\nimport AssignRequest from '../views/AdminDashboard/Organization/VaRequest/AssignRequest';\r\nimport VaTaskListing from '../views/AdminDashboard/Organization/VaTask/VaTaskListing';\r\nimport SubscribersList from '../views/AdminDashboard/NewsletterSubscriber/NewsletterSubscribersList';\r\nimport VaTimesheetList from '../views/AdminDashboard/Organization/VaTimesheet/VaTimesheetList';\r\nimport BillingList from '../views/AdminDashboard/Organization/Billing/BillingList';\r\nimport AddVaApplication from '../views/AdminDashboard/VaApplications/AddVaApplication';\r\n*/\r\nconst adminRoutes = [\r\n  { path: '/admin/', exact: true, name: 'Admin' },\r\n  { path: '/admin/dashboard', exact: true, name: 'Dashboard', component: Dashboard },\r\n  { path: '/admin/master-case-type', exact: true, name: 'Master Case Type', component: Category },  \r\n  \r\n  { path: '/admin/master-threat-type', exact: true, name: 'Master Threat Type', component: ThreatType },  \r\n  \r\n  { path: '/admin/organization', exact: true, name: 'Manage Company', component: organizationList },\r\n  { path: '/admin/organization/user', exact: true, name: 'Company User', component: CompanyUser },\r\n  { path: '/admin/organization/employee', exact: true, name: 'Company Employee User', component: employeeList },\r\n  /*{ path: '/admin/users', exact: true, name: 'Manage Admin Users', component: UsersList },\r\n  { path: '/admin/user/:profileId', exact: true,  name: 'User Details', component: UserDetails },\r\n  { path: '/admin/va-application', exact: true, name: 'Manage VA Application', component: ApplicationList },\r\n  { path: '/admin/va-application/add-new-va', exact: true, name: 'Add New VA Application', component: AddVaApplication },\r\n  { path: '/admin/va-application/:vaApplicationId', exact: true, name: 'VA Application Details', component: EditVaApplication },\r\n  { path: '/admin/va-request', exact: true, name: 'Manage Request', component: VaRequestListing },\r\n  { path: '/admin/va-request/assign-va/:vaRequestId', exact: true, name: 'Assign VA Request', component: AssignRequest },\r\n  { path: '/admin/enquiries', exact: true, name: 'Manage Enquiries', component: EnquiryListing },\r\n  { path: '/admin/scheduled-booking', exact: true, name: 'Manage Discovery Call', component: ScheduledBooking },\r\n  { path: '/admin/subscription', exact: true, name: 'Manage Advertiser Subscription', component: AdvertiserPlans },\r\n  { path: '/admin/change-password', exact: true,  name: 'Change Password', component: ChangePassword },\r\n  { path: '/admin/transactions', exact: true, name: 'Manage Transactions', component: UserTransactionList },\r\n  { path: '/admin/subscribed', exact: true, name: 'Subscribed Owner', component: SubscribedOwnerList },\r\n  { path: '/admin/subscribed/advertisers', exact: true, name: 'Subscribed Advertiser', component: SubscribedAdvertiserList },\r\n  { path: '/admin/va-task', exact: true, name: 'Manage Task', component: VaTaskListing },\r\n  { path: '/admin/timesheet', exact: true, name: 'Manage Timesheet', component: VaTimesheetList },\r\n  { path: '/admin/newsletter', exact: true, name: 'Newsletter Subscribers', component: SubscribersList },\r\n  { path: '/admin/billing', exact: true, name: 'Clients Billing', component: BillingList },*/\r\n\r\n\r\n];\r\n\r\nexport default adminRoutes;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nconst defaultProps = {};\r\n\r\nclass DefaultFooter extends Component {\r\n  render() {\r\n\r\n    // eslint-disable-next-line\r\n    const { children, ...attributes } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <span>Copyright  &copy; {(new Date().getFullYear())} VirDrop. All Rights Reserved.</span>\r\n        <span className=\"ml-auto\">Powered by <a href=\"https://www.niletechnologies.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Nile Technologies</a>.</span>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nDefaultFooter.propTypes = propTypes;\r\nDefaultFooter.defaultProps = defaultProps;\r\n\r\nexport default DefaultFooter;\r\n","import React from 'react';\r\nimport \"./UserAvtar.css\";\r\nimport commonService from '../../core/services/commonService';\r\nconst UserAvtar = (props) => {\r\n  let name = commonService.getLocalStorageValue( 'userName' );\r\n  let arrName = name.split(\" \");\r\n  let firstName = arrName.slice(0, 1).join(' ');\r\n  let lastName = arrName.slice(1, arrName.length).join(' ');\r\n  return (\r\n    <div className=\"profileImage\">{firstName.substring(0, 1)+''+lastName.substring(0, 1)}</div>\r\n  );\r\n}\r\n\r\nexport default UserAvtar;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UncontrolledDropdown, DropdownItem, DropdownMenu, DropdownToggle, Nav } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { AppNavbarBrand, AppSidebarToggler } from '@coreui/react';\r\nimport UserAvtar from '../UserLayout/UserAvtar'\r\nimport commonService from '../../core/services/commonService';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nconst defaultProps = {};\r\n\r\nclass DefaultHeader extends Component {\r\n  render() {\r\n\r\n    // eslint-disable-next-line\r\n    const { children, ...attributes } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <AppSidebarToggler className=\"d-lg-none\" display=\"md\" mobile />\r\n        <AppNavbarBrand\r\n          full={{ src: `${process.env.PUBLIC_URL}/logo.png`, width: 88, height: 40, alt: 'Incursus Logo' }}\r\n          minimized={{ src: `${process.env.PUBLIC_URL}/logo.png`, width: 30, height: 30, alt: 'Incursus Logo' }}\r\n        />\r\n        <AppSidebarToggler className=\"d-md-down-none\" display=\"lg\" />\r\n\r\n        \r\n        <Nav className=\"ml-auto\" navbar>\r\n          <UncontrolledDropdown nav direction=\"down\">\r\n            <DropdownToggle nav>\r\n              <div className=\"admin-avatar\"><UserAvtar /></div>\r\n              <span className=\"admin-profile-username\">\r\n                {commonService.getLocalStorageValue( 'userName' )} <span className=\"caret\"></span>\r\n              </span>\r\n            </DropdownToggle>\r\n            <DropdownMenu right>\r\n              <DropdownItem header tag=\"div\" className=\"text-center\"><strong>My Account</strong></DropdownItem>\r\n              <DropdownItem><Link to=\"/admin/dashboard\" className=\"profileDropDownLink\"><i className=\"fa fa-dashboard\"></i> Dashboard</Link></DropdownItem>\r\n              <DropdownItem><Link to=\"/admin/change-password\" className=\"profileDropDownLink\"><i className=\"fa fa-lock\"></i> Change Password</Link></DropdownItem>\r\n              <DropdownItem onClick={e => this.props.onLogout(e)}><i className=\"fa fa-sign-out\"></i> Logout</DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </Nav>\r\n        \r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nDefaultHeader.propTypes = propTypes;\r\nDefaultHeader.defaultProps = defaultProps;\r\n\r\nexport default DefaultHeader;\r\n","import React, { Component, Suspense } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport * as router from 'react-router-dom';\r\nimport { Container } from 'reactstrap';\r\nimport './App.scss';\r\n\r\nimport {\r\n  AppAside,\r\n  AppFooter,\r\n  AppHeader,\r\n  AppSidebar,\r\n  AppSidebarFooter,\r\n  AppSidebarForm,\r\n  AppSidebarHeader,\r\n  AppSidebarMinimizer,\r\n  AppBreadcrumb2 as AppBreadcrumb,\r\n  AppSidebarNav2 as AppSidebarNav,\r\n} from '@coreui/react';\r\n// sidebar nav config\r\nimport navigation from './_nav';\r\n// routes config\r\nimport adminRoutes from '../../routes/adminRoutes';\r\nimport './AdminLayout.css';\r\n//import DefaultAside from './DefaultAside';\r\nimport DefaultFooter from './DefaultFooter';\r\nimport DefaultHeader from './DefaultHeader';\r\n\r\nclass AdminLayout extends Component {\r\n\r\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n\r\n  signOut(e) {\r\n    e.preventDefault();\r\n    localStorage.clear();\r\n    this.props.history.push('/login')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app dashboard-template\">\r\n        <AppHeader fixed>\r\n          <Suspense  fallback={this.loading()}>\r\n            <DefaultHeader onLogout={e=>this.signOut(e)}/>\r\n          </Suspense>\r\n        </AppHeader>\r\n        <div className=\"app-body admin-panel\">\r\n          <AppSidebar fixed display=\"lg\">\r\n            <AppSidebarHeader />\r\n            <AppSidebarForm />\r\n            <Suspense>\r\n            <AppSidebarNav navConfig={navigation} {...this.props} router={router}/>\r\n            </Suspense>\r\n            <AppSidebarFooter />\r\n            <AppSidebarMinimizer />\r\n          </AppSidebar>\r\n          <main className=\"main\">\r\n            <AppBreadcrumb appRoutes={adminRoutes} router={router}/>\r\n            <Container fluid>\r\n              <ToastContainer />\r\n              <Suspense fallback={this.loading()}>\r\n                <Switch>\r\n                  {adminRoutes.map((route, idx) => {\r\n                    return route.component ? (\r\n                      <Route\r\n                        key={idx}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        name={route.name}\r\n                        render={props => (\r\n                          <route.component {...props} />\r\n                        )} />\r\n                    ) : (null);\r\n                  })}                  \r\n                  <Redirect from=\"/admin\" to=\"/admin/dashboard\" />\r\n                </Switch>\r\n              </Suspense>\r\n            </Container>\r\n          </main>\r\n          <AppAside fixed>\r\n            <Suspense fallback={this.loading()}>\r\n              {/* <DefaultAside /> */}\r\n            </Suspense>\r\n          </AppAside>\r\n        </div>\r\n        <AppFooter>\r\n          <Suspense fallback={this.loading()}>\r\n            <DefaultFooter />\r\n          </Suspense>\r\n        </AppFooter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminLayout;\r\n"],"sourceRoot":""}