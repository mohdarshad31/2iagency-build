{"version":3,"sources":["core/services/commonService.js","views/Pages/404/PageNotFound.js","views/Login/ForgotPassword.js","views/Login/Login.js","App.js","serviceWorker.js","index.js","views/Loader/Loader.js"],"names":["API_BASE_URL","CryptoJS","require","ApiService","isSubscribed","this","getLocalStorageValue","isSubscribe","toString","setLocalStorageValue","urlSegment","axios","get","headers","formdata","post","put","accessToken","delete","data","key","localStorage","getItem","decyptdata","AES","decrypt","enc","Utf8","JSON","parse","value","stringify","setItem","encrypt","status","statusText","$utcTime","$format","convertedDate","undefined","newDate","Date","getDay","getDate","getYear","getFullYear","getMonth","getHour","getHours","getMinutes","getSeconds","PageNotFound","className","Container","Row","Col","md","lg","React","Component","ForgotPassword","props","changeHandler","event","setState","target","name","forgotPasswordHandler","preventDefault","validateForm","loading","commonService","postAPI","email","state","then","res","toast","error","message","success","catch","err","response","clear","propHistory","push","loggedIn","toggle","hideForgotPasswordForm","unsubscribe","password","userName","forgotPasswordEmail","modal","isLoggedIn","errors","settingsData","formIsValid","trim","RegExp","test","Modal","isOpen","ModalHeader","Form","onSubmit","noValidate","ModalBody","FormGroup","Label","htmlFor","Input","type","placeholder","id","onChange","required","FormFeedback","ModalFooter","Button","disabled","onClick","logoUrl","process","Login","submitHandler","isAccountVerified","console","log","loggedInfo","role","toLowerCase","refreshToken","authId","profilePic","firstName","history","showforgotPassword","to","noThrow","style","backgroundImage","Loader","src","alt","invalid","for","showForgotPasswordForm","bind","UserLayout","lazy","AdminLayout","App","Suspense","fallback","path","component","PrivateRoute","rest","render","routeProps","getAuth","renderMergedProps","pathname","from","location","ProtectedRoute","finalProps","Object","assign","createElement","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"0IACMA,EAAe,uCAGjBC,EAAWC,EAAQ,KACjBC,E,yGAIE,IAAIC,EAAeC,KAAKC,qBAAqB,gBAC7C,MAAoB,KAAjBF,GAAwC,OAAjBA,EACjB,GAEgD,SAA9CC,KAAKC,qBAAqB,kB,uCAEF,IAAxBC,EAAuB,uDAAT,QACzBA,EAAcA,EAAYC,WAC1BH,KAAKI,qBAAsB,kB,6BAIxBC,GACH,OAAOC,IAAMC,IAAIZ,EAAaU,K,4CAGZA,GAClB,IACMG,EAAU,CACZ,cAAiB,OAFDR,KAAKC,qBAAqB,gBAI9C,OAAOK,IAAMC,IAAIZ,EAAaU,EAAY,CAACG,QAASA,M,8BAGhDH,EAAYI,GAIhB,OAAOH,IAAMI,KAAKf,EAAaU,EAAYI,EAAU,CAACD,QAHtC,CACZ,eAAgB,wB,6CAKDH,EAAYI,GAC/B,IACMD,EAAU,CACZ,eAAgB,mBAChB,cAAiB,OAHDR,KAAKC,qBAAqB,gBAK9C,OAAOK,IAAMI,KAAKf,EAAaU,EAAYI,EAAU,CAACD,QAASA,M,0DAI/BH,EAAYI,GAC5C,IACMD,EAAU,CACZ,eAAgB,sBAChB,cAAiB,OAHDR,KAAKC,qBAAqB,gBAK9C,OAAOK,IAAMI,KAAKf,EAAaU,EAAYI,EAAU,CAACD,QAASA,M,4CAI7CH,EAAYI,GAC9B,IACMD,EAAU,CACZ,eAAgB,mBAChB,cAAiB,OAHDR,KAAKC,qBAAqB,gBAK9C,OAAOK,IAAMK,IAAIhB,EAAaU,EAAYI,EAAU,CAACD,QAASA,M,+CAIzCH,GAA0B,IAAdI,EAAa,uDAAH,GACrCG,EAAcZ,KAAKC,qBAAqB,eACxCO,EAAU,CACZ,eAAgB,mBAChB,cAAiB,OAAOI,GAI5B,OAAON,IAAMO,OAAOlB,EAAaU,EAAY,CAAEG,QAASA,EAAUM,KAAML,M,gCAIxE,IAAIG,EAAcZ,KAAKC,qBAAqB,eAC5C,MAAmB,KAAhBW,GAAsC,OAAhBA,I,kCAOzB,MAvF8B,oC,2CA0FbG,GACjB,IAAID,EAAOE,aAAaC,QAAQF,GAChC,GAAY,KAATD,GAAwB,OAATA,EAChB,MAAO,GAEP,IAAII,EAActB,EAASuB,IAAIC,QAAQJ,aAAaC,QAAQF,GAAM,4BAA4BZ,SAASP,EAASyB,IAAIC,MACpH,OAAOJ,EAAaK,KAAKC,MAAMN,GAAcA,I,2CAG9BH,EAAKU,GACtB,IAAIX,EAAOS,KAAKG,UAAUD,GAC1BT,aAAaW,QAASZ,EAAKnB,EAASuB,IAAIS,QAAQd,EAAM,4BAA4BX,c,kCAEhE,IAAZ0B,EAAW,uDAAF,EAEbC,EAAa,SAOjB,OANc,IAAXD,EACDC,EAAa,WACI,IAAXD,EACNC,EAAa,UACI,IAAXD,IACNC,EAAa,qBACRA,I,qCAGwB,IAApBD,EAAmB,uDAAV,SACdC,EAAa,EAOjB,MANc,aAAXD,EACDC,EAAa,EACI,YAAXD,EACNC,EAAa,EACI,sBAAXD,GAA6C,UAAXA,IACxCC,EAAa,GACRA,I,sCAEe,IAAZD,EAAW,uDAAF,EAEjBC,EAAa,SAOjB,OANc,IAAXD,EACDC,EAAa,WACI,IAAXD,EACNC,EAAa,UACI,IAAXD,IACNC,EAAa,SACRA,I,kCAGGC,GAAwC,IAA9BC,EAA6B,uDAApB,mBACvBC,EAAgB,GACpB,QAAgBC,IAAbH,GAAuC,KAAbA,EAAiB,CAC1C,IAAII,EAAU,IAAIC,KAAKL,GACnBM,EAASF,EAAQG,UACrBD,EAAUA,EAAS,GAAM,IAAMA,EAASA,EACxC,IAAIE,EAAUJ,EAAQK,cAClBC,EAAWN,EAAQM,WAEvBA,GADAA,GAAsB,GACC,GAAM,IAAMA,EAAWA,EAC9C,IAAIC,EAAUP,EAAQQ,WACtBD,EAAWA,EAAU,GAAM,IAAMA,EAAUA,EAC3C,IAAIE,EAAaT,EAAQS,aACzBA,EAAcA,EAAa,GAAM,IAAMA,EAAaA,EACpD,IAAIC,EAAaV,EAAQU,aACzBA,EAAcA,EAAa,GAAM,IAAMA,EAAaA,EACrC,qBAAZb,EACCC,EAAgBM,EAAQ,IAAIE,EAAS,IAAIJ,EAAO,IAAIK,EAAQ,IAAIE,EAAW,IAAIC,EAC/D,qBAAZb,EACJC,EAAgBI,EAAO,IAAII,EAAS,IAAIF,EAAQ,IAAIG,EAAQ,IAAIE,EAAW,IAAIC,EAC/D,mBAAZb,EACJC,EAAgBI,EAAO,IAAII,EAAS,IAAIF,EAAQ,IAAIG,EAAQ,IAAIE,EAChD,qBAAZZ,EACJC,EAAgBM,EAAQ,IAAIE,EAAS,IAAIJ,EAAO,IAAIK,EAAQ,IAAIE,EAAW,IAAIC,EAC/D,qBAAZb,EACJC,EAAgBQ,EAAS,IAAIJ,EAAO,IAAIE,EAAQ,IAAIG,EAAQ,IAAIE,EAAW,IAAIC,EAC/D,qBAAZb,IACJC,EAAgBI,EAAO,IAAII,EAAS,IAAIF,EAAQ,IAAIG,EAAQ,IAAIE,EAAW,IAAIC,GAGvF,OAAOZ,I,8BAEHF,GAAkC,IAAxBC,EAAuB,uDAAd,aACnBC,EAAgB,GACpB,QAAgBC,IAAbH,GAAuC,KAAbA,EAAiB,CAC1C,IAAII,EAAU,IAAIC,KAAKL,GACnBM,EAASF,EAAQG,UACrBD,EAAUA,EAAS,GAAM,IAAMA,EAASA,EACxC,IAAIE,EAAUJ,EAAQK,cAClBC,EAAWN,EAAQM,WAEvBA,GADAA,GAAsB,GACC,GAAM,IAAMA,EAAWA,EAE/B,eAAZT,EACCC,EAAgBM,EAAQ,IAAIE,EAAS,IAAIJ,EACzB,eAAZL,EACJC,EAAgBI,EAAO,IAAII,EAAS,IAAIF,EACxB,eAAZP,EACJC,EAAgBM,EAAQ,IAAIE,EAAS,IAAIJ,EACzB,eAAZL,EACJC,EAAgBQ,EAAS,IAAIJ,EAAO,IAAIE,EACxB,eAAZP,IACJC,EAAgBI,EAAO,IAAII,EAAS,IAAIF,GAGhD,OAAON,M,KAIA,QAAInC,G,mmBC9KJgD,G,8KAlBX,OACE,oCAEE,6BAASC,UAAU,gBACf,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,MACZ,uD,GAVOC,IAAMC,Y,kHC6HlBC,G,yDApHb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA2BRC,cAAgB,SAAAC,GACd,EAAKC,SAAL,eAAiBD,EAAME,OAAOC,KAAOH,EAAME,OAAOnC,SA7BjC,EAyDnBqC,sBAAwB,SAAAJ,GAGtB,GAFAA,EAAMK,iBACNL,EAAME,OAAOb,WAAa,kBACtB,EAAKiB,eACP,OAAO,EACT,EAAKL,SAAS,CAACM,SAAS,IAAO,WAC7BC,IAAcC,QAAQ,uBAAwB,CAACC,MAAO,EAAKC,MAAMD,QAAQE,MAAK,SAACC,GAE3E,GADA,EAAKZ,SAAS,CAACM,SAAS,SACnB/B,IAAcqC,EAAIzD,OAASyD,EAAIzD,KAAKe,OAGvC,OAFA2C,IAAMC,MAAMF,EAAIzD,KAAK4D,cACrB,EAAKf,SAAS,CAACM,SAAS,IAI1BO,IAAMG,QAAQJ,EAAIzD,KAAK4D,YACxBE,OAAM,SAACC,QACY3C,IAAjB2C,EAAIC,UAAkD,MAAxBD,EAAIC,SAASjD,QAC5Cb,aAAa+D,QACb,EAAKvB,MAAMwB,YAAYC,KAAK,YAG5B,EAAKtB,SAAU,CAAEM,SAAS,EAAOiB,UAAU,IAC3CV,IAAMC,MAAMI,EAAIH,iBA/EL,EAoFnBS,OAAS,WACP,EAAK3B,MAAM4B,0BAnFX,EAAKC,YAAc,KACjB,EAAKhB,MAAQ,CACbD,MAAO,GACPkB,SAAU,GACVC,SAAU,GACV1B,KAAM,GACN2B,oBAAqB,GACrBC,OAAO,EACPP,UAAU,EACVjB,SAAS,EACTyB,YAAY,EACZC,OAAQ,GACRC,aAAc,IAdC,E,wGAiCjB,IAAID,EAAS,GACTE,GAAc,GAEb7F,KAAKqE,MAAMD,QACZyB,GAAc,EACdF,EAAM,MAAY,kCAEEzD,IAArBlC,KAAKqE,MAAMD,OAAmD,KAA5BpE,KAAKqE,MAAMD,MAAM0B,UACxC,IAAIC,OAAO,mSACbC,KAAKhG,KAAKqE,MAAMD,MAAM0B,UAC9BD,GAAc,EACdF,EAAM,MAAY,0BAWtB,OALA3F,KAAK2D,SAAS,CACZM,SAAS,EACT0B,OAAQA,IAGHE,I,+BAiCC,IACAzB,EAASpE,KAAKqE,MAAdD,MAER,OACE,kBAAC6B,EAAA,EAAD,CAAOC,QAAQ,EAAMf,OAAQnF,KAAKmF,OAAQpC,UAAU,eAChD,kBAACoD,EAAA,EAAD,CAAahB,OAAQnF,KAAKmF,QAA1B,oBACA,kBAACiB,EAAA,EAAD,CAAMC,SAAUrG,KAAK8D,sBAAuBwC,YAAU,EAACvD,UAAU,aAC/D,kBAACwD,EAAA,EAAD,KACE,kBAACtD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,MACP,kBAACqD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,QAAQ,SAAf,iBACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,QAAQC,YAAY,UAAUC,GAAG,QAAQjD,KAAK,QAAQpC,MAAOzB,KAAKqE,MAAMD,MAAO2C,SAAU/G,KAAKyD,cAAeuD,UAAQ,IACjI,kBAACC,EAAA,EAAD,KAAejH,KAAKqE,MAAMsB,OAAOvB,QAKzC,kBAAC8C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQpE,UAAU,aAAaqE,SAAYpH,KAAKqE,MAAMJ,QAAU2C,KAAK,UAArE,UACA,kBAACO,EAAA,EAAD,CAAQpE,UAAU,YAAYsE,QAASrH,KAAKmF,QAA5C,iB,GA7Ge7B,cCGvBgE,EAAO,UAAMC,GAAN,aAkMEC,E,kDAhMb,WAAYhE,GAAQ,IAAD,8BACjB,cAAMA,IAyBRiE,cAAgB,SAAA/D,GAGd,GAFAA,EAAMK,iBACNL,EAAME,OAAOb,WAAa,kBACtB,EAAKiB,eACP,OAAO,EACT,EAAKL,SAAS,CAACM,SAAS,IAAO,WAC3BC,IAAcC,QAAQ,eAAgB,CAACC,MAAO,EAAKC,MAAMD,MAAOkB,SAAU,EAAKjB,MAAMiB,WAAWhB,MAAK,SAACC,GACpG,QAAKrC,IAAcqC,EAAIzD,OAASyD,EAAIzD,KAAKe,OA0BvC,OAzBA,EAAK8B,SAAU,CAAEM,SAAS,IAC1BO,IAAMC,MAAMF,EAAIzD,KAAK4D,cACjBH,EAAIzD,KAAKe,aACuBK,IAA/BqC,EAAIzD,KAAK4G,mBAAoCnD,EAAIzD,KAAK4G,mBACvD,EAAK/D,SAAU,CAAEM,SAAS,EAAMyB,YAAY,IAAQ,WAClDxB,IAAcC,QAAd,kBAA0C,CAACC,MAAO,EAAKC,MAAMD,QAC1DE,MAAM,SAAAC,GAGL,GADAoD,QAAQC,IAAIrD,QACPrC,IAAcqC,EAAIzD,OAASyD,EAAIzD,KAAKe,OAGvC,OAFA,EAAK8B,SAAU,CAAEM,SAAS,SAC1BO,IAAMC,MAAMF,EAAIzD,KAAK4D,SAGvB,EAAKf,SAAU,CAAEM,SAAS,IAC1BO,IAAMG,QAAQJ,EAAIzD,KAAK4D,YAExBE,OAAO,SAAAC,GAEN,EAAKlB,SAAU,CAAEM,SAAS,IAC1BO,IAAMC,MAAMI,EAAIH,gBAQ5B,IAAMmD,EAAatD,EAAIzD,KACmB,UAAvC+G,EAAW/G,KAAKgH,KAAKC,eAAoE,iBAAvCF,EAAW/G,KAAKgH,KAAKC,eACxE7D,IAAc9D,qBAAsB,cAAeyH,EAAW/G,KAAKF,aACnEsD,IAAc9D,qBAAsB,eAAgByH,EAAW/G,KAAKkH,cACpE9D,IAAc9D,qBAAsB,OAAQyH,EAAW/G,KAAKgH,MAC5D5D,IAAc9D,qBAAsB,SAAUyH,EAAW/G,KAAKmH,QAC9D/D,IAAc9D,qBAAsB,aAAcyH,EAAW/G,KAAKoH,YAClEhE,IAAc9D,qBAAsB,WAAYyH,EAAW/G,KAAKqH,WACtB,iBAAvCN,EAAW/G,KAAKgH,KAAKC,cACtB,EAAKvE,MAAM4E,QAAQnD,KAAK,mBAExB,EAAKzB,MAAM4E,QAAQnD,KAAK,qBAG1BT,IAAMC,MAAM,kDACbG,OAAM,SAACC,QACY3C,IAAjB2C,EAAIC,UAAkD,MAAxBD,EAAIC,SAASjD,QAC5Cb,aAAa+D,QACb,EAAKvB,MAAMwB,YAAYC,KAAK,YAG5B,EAAKtB,SAAU,CAAEM,SAAS,EAAOiB,UAAU,IAC3CV,IAAMC,MAAMI,EAAIH,iBApFP,EA0FnBjB,cAAgB,SAAAC,GACd,EAAKC,SAAL,eAAiBD,EAAME,OAAOC,KAAOH,EAAME,OAAOnC,SAxFlD,EAAK4D,YAAc,KACjB,EAAKhB,MAAQ,CACbD,MAAO,GACPkB,SAAU,GACVC,SAAU,GACVC,oBAAqB,GACrBC,OAAO,EACPP,UAAU,EACVjB,SAAS,EACTyB,YAAY,EACZC,OAAQ,GACR0C,oBAAoB,EACpBzC,aAAc,IAfC,E,wGA+FjB,IAAID,EAAS,GACTE,GAAc,EAiBlB,OAhBK7F,KAAKqE,MAAMiB,WACZO,GAAc,EACdF,EAAM,SAAe,2BAEpB3F,KAAKqE,MAAMD,QACZyB,GAAc,EACdF,EAAM,MAAY,6BAKtB3F,KAAK2D,SAAS,CACZM,SAAS,EACT0B,OAAQA,IAGHE,I,+CAGP7F,KAAK2D,SAAS,CAAC0E,oBAAoB,M,+CAGnCrI,KAAK2D,SAAS,CAAC0E,oBAAoB,M,+BAG3B,IAAD,EAC+CrI,KAAKqE,MAAnDD,EADD,EACCA,MAAOkB,EADR,EACQA,SAAUJ,EADlB,EACkBA,SAAUjB,EAD5B,EAC4BA,QAAS0B,EADrC,EACqCA,OAC5C,OAAKT,EAC+C,UAA/ChB,IAAcjE,qBAAqB,QAC3B,kBAAC,IAAD,CAAUqI,GAAE,SAAYC,SAAO,IAE/B,kBAAC,IAAD,CAAUD,GAAE,aAAgBC,SAAO,IAI3C,yBAAKxF,UAAU,eAAeyF,MAAO,CAACC,gBAAgB,0BACvD,kBAACzF,EAAA,EAAD,KACGiB,EAAU,kBAACyE,EAAA,EAAD,MAAa,qCACxB,kBAAC,IAAD,MACA,kBAACzF,EAAA,EAAD,CAAKF,UAAU,gDACb,kBAACG,EAAA,EAAD,CAAKC,GAAI,IACP,yBAAKJ,UAAU,SACb,uCACA,kBAACqD,EAAA,EAAD,CAAMrD,UAAU,qCAAqCsD,SAAUrG,KAAKyH,cAAenB,YAAU,GAC3F,yBAAKvD,UAAU,gBACb,yBAAK4F,IAAOrB,EAASsB,IAAI,UAE3B,kBAACpC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,cACA,kBAACE,EAAA,EAAD,CACEC,KAAK,QACL/C,KAAK,QACLgF,aAA6B3G,IAApByD,EAAM,OAA+C,KAApBA,EAAM,MAAkBlE,MAAO2C,EAAO2C,SAAU/G,KAAKyD,cAAeqD,GAAG,QACjHD,YAAY,sBAEd,yBAAK9D,UAAU,oBAAf,2CAIF,kBAACyD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOqC,IAAI,mBAAX,YACA,kBAACnC,EAAA,EAAD,CACEC,KAAK,WACL/C,KAAK,WACLgF,aAAgC3G,IAAvByD,EAAM,UAAqD,KAAvBA,EAAM,SAAqBlE,MAAO6D,EAAUyB,SAAU/G,KAAKyD,cAAeqD,GAAG,WAC1HD,YAAY,aAEd,yBAAK9D,UAAU,oBAAf,2CAIF,kBAACyD,EAAA,EAAD,KACI,kBAACvD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACgE,EAAA,EAAD,CAAQP,KAAK,SAAS7D,UAAU,gBAAhC,WAEF,kBAACG,EAAA,EAAD,CAAKC,GAAI,GACP,uBAAGJ,UAAU,cAAcsE,QAAWrH,KAAK+I,uBAAuBC,KAAKhJ,OAAvE,wBAMTA,KAAKqE,MAAMgE,mBAAqB,kBAAC,EAAD,CAAgBjD,uBAA0BpF,KAAKoF,uBAAuB4D,KAAKhJ,QAAY,Y,GArLpHsD,aCLd2F,EAAa5F,IAAM6F,MAAK,kBAAM,uDAC9BC,EAAc9F,IAAM6F,MAAK,kBAAM,8DAI/BE,E,uKAEF,OACE,kBAAC,gBAAD,KACI,kBAAC,IAAMC,SAAP,CAAgBC,SANJ,kBAACZ,EAAA,EAAD,OAOV,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAca,KAAK,SAAS1F,KAAK,QAAQ2F,UAAWL,IAEpD,kBAAC,EAAD,CAAgBI,KAAK,QAAQ1F,KAAK,OAAO2F,UAAWP,IAEpD,kBAAC,IAAD,CAAOM,KAAK,SAAS1F,KAAK,QAAQ2F,UAAWhC,IAC7C,kBAAC,IAAD,CAAO+B,KAAK,IAAI1F,KAAK,QAAQ2F,UAAWhC,IAExC,kBAAC,IAAD,CAAO3D,KAAK,iBAAiB2F,UAAW1G,W,GAbpCQ,aAqBZmG,EAAe,SAAC,GAA4B,IAA1BD,EAAyB,EAAzBA,UAAcE,EAAW,6BAC/C,OACE,kBAAC,IAAD,iBAAWA,EAAX,CAAiBC,OAAQ,SAAAC,GACvB,OAAO1F,IAAc2F,WAA4D,UAA/C3F,IAAcjE,qBAAqB,QACnE6J,EAAkBN,EAAWI,EAAYF,GAEzC,kBAAC,IAAD,CAAUpB,GAAI,CACZyB,SAAU,SACV1F,MAAO,CAAE2F,KAAMJ,EAAWK,kBAO9BC,EAAiB,SAAC,GAA4B,IAA1BV,EAAyB,EAAzBA,UAAcE,EAAW,6BACjD,OACE,kBAAC,IAAD,iBAAWA,EAAX,CAAiBC,OAAQ,SAAAC,GACvB,OAAO1F,IAAc2F,WAA4D,KAA/C3F,IAAcjE,qBAAqB,QACnE6J,EAAkBN,EAAWI,EAAYF,GAEzC,kBAAC,IAAD,CAAUpB,GAAI,CACZyB,SAAU,SACV1F,MAAO,CAAE2F,KAAMJ,EAAWK,kBAO9BH,EAAoB,SAACN,GAAwB,IAAD,uBAATE,EAAS,iCAATA,EAAS,kBAChD,IAAMS,EAAaC,OAAOC,OAAP,MAAAD,OAAM,CAAQ,IAAR,OAAeV,IACxC,OACErG,IAAMiH,cAAcd,EAAWW,IAIpBf,IC9DTmB,EAAcC,QACW,cAA7BC,OAAOR,SAASS,UAEe,UAA7BD,OAAOR,SAASS,UAEhBD,OAAOR,SAASS,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTvG,MAAK,SAAA4G,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB/G,QACf0G,UAAUC,cAAcO,YAI1B5D,QAAQC,IACN,iHAKEkD,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlBvD,QAAQC,IAAI,sCAGRkD,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BtG,OAAM,SAAAH,GACLkD,QAAQlD,MAAM,4CAA6CA,M,OCzFjEiH,IAAS/B,OAAO,kBAAC,EAAD,MAASgC,SAASC,eAAe,SDe1C,SAAkBd,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIc,IAAItE,GAAwBkD,OAAOR,SAAS6B,MACpDC,SAAWtB,OAAOR,SAAS8B,OAIvC,OAGFtB,OAAOuB,iBAAiB,QAAQ,WAC9B,IAAMnB,EAAK,UAAMtD,GAAN,sBAEPgD,IAgEV,SAAiCM,EAAOC,GAEtCmB,MAAMpB,EAAO,CACXrK,QAAS,CAAE,iBAAkB,YAE5B8D,MAAK,SAAAQ,GAEJ,IAAMoH,EAAcpH,EAAStE,QAAQD,IAAI,gBAEnB,MAApBuE,EAASjD,QACO,MAAfqK,IAA8D,IAAvCA,EAAYC,QAAQ,cAG5CpB,UAAUC,cAAcoB,MAAM9H,MAAK,SAAA4G,GACjCA,EAAamB,aAAa/H,MAAK,WAC7BmG,OAAOR,SAASqC,eAKpB1B,EAAgBC,EAAOC,MAG1BlG,OAAM,WACL+C,QAAQC,IACN,oEAvFA2E,CAAwB1B,EAAOC,GAI/BC,UAAUC,cAAcoB,MAAM9H,MAAK,WACjCqD,QAAQC,IACN,iHAMJgD,EAAgBC,EAAOC,OCtC/BE,I,gCCZA,2BAYetC,IAVA,WACX,OACI,yBAAK3F,UAAU,iBACV,yBAAKA,UAAU,8BAA8B+E,KAAK,UAC7C,0BAAM/E,UAAU,WAAhB,mB","file":"static/js/main.0645f1f8.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst API_BASE_URL = 'https://incursus.herokuapp.com/v0.0/';\r\n//const API_BASE_URL = 'http://localhost:8080/v0.0/'; // \r\nconst API_BASE_URL_WITH_OUT_VERSION = 'https://incursus.herokuapp.com/';\r\nvar CryptoJS = require(\"crypto-js\");\r\nclass ApiService {\r\n\r\n    /*Get Organization Subscribe*/\r\n    getIsSubscribe() {\r\n        let isSubscribed = this.getLocalStorageValue(\"isSubscribed\");\r\n        if(isSubscribed === '' || isSubscribed === null)\r\n          return \"\";\r\n        else\r\n          return ( this.getLocalStorageValue(\"isSubscribed\") === \"true\") ? true : false;\r\n    }\r\n    setIsSubscribe(isSubscribe = \"false\") {\r\n        isSubscribe = isSubscribe.toString();\r\n        this.setLocalStorageValue( 'isSubscribed');\r\n    }\r\n\r\n    /*Get API*/\r\n    getAPI(urlSegment) {\r\n        return axios.get(API_BASE_URL+urlSegment);\r\n    }\r\n    /*Get API With Authentication header */\r\n    getAPIWithAccessToken(urlSegment) {\r\n        const accessToken = this.getLocalStorageValue(\"accessToken\");\r\n        const headers = {\r\n            'Authorization': 'JWT '+accessToken\r\n        }\r\n        return axios.get(API_BASE_URL+urlSegment, {headers: headers});\r\n    }\r\n    /*Post API Without Authentication header */\r\n    postAPI(urlSegment, formdata) {        \r\n        const headers = {\r\n            'Content-Type': 'application/json'           \r\n        }\r\n        return axios.post(API_BASE_URL+urlSegment, formdata, {headers: headers});\r\n    }\r\n    /*Post API With Authentication header */\r\n    postAPIWithAccessToken(urlSegment, formdata){\r\n        const accessToken = this.getLocalStorageValue(\"accessToken\");\r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'JWT '+accessToken\r\n        }\r\n        return axios.post(API_BASE_URL+urlSegment, formdata, {headers: headers});\r\n    } \r\n\r\n    /*Post form data API With Authentication header */\r\n    postMultipartDataAPIWithAccessToken(urlSegment, formdata){\r\n        const accessToken = this.getLocalStorageValue(\"accessToken\");\r\n        const headers = {\r\n            'Content-Type': 'multipart/form-data',\r\n            'Authorization': 'JWT '+accessToken\r\n        }\r\n        return axios.post(API_BASE_URL+urlSegment, formdata, {headers: headers} );\r\n    } \r\n\r\n    /*PUt API With Authentication header */\r\n    putAPIWithAccessToken(urlSegment, formdata){\r\n        const accessToken = this.getLocalStorageValue(\"accessToken\");\r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'JWT '+accessToken\r\n        }\r\n        return axios.put(API_BASE_URL+urlSegment, formdata, {headers: headers});\r\n    } \r\n\r\n    /*Delete API With Authentication header and Without parameter */\r\n    deleteAPIWithAccessToken(urlSegment, formdata= {}){\r\n        const accessToken = this.getLocalStorageValue(\"accessToken\");\r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'JWT '+accessToken\r\n        }\r\n\r\n        //debugger;\r\n        return axios.delete(API_BASE_URL+urlSegment, { headers: headers , data: formdata});\r\n    } \r\n    /* Check user logged in or not */\r\n    getAuth(){\r\n        let accessToken = this.getLocalStorageValue(\"accessToken\");        \r\n        if(accessToken === '' || accessToken === null)\r\n          return false;\r\n        else\r\n          return true;\r\n    }\r\n    /*Get API Url*/\r\n    getAPIUrl(){\r\n        return API_BASE_URL_WITH_OUT_VERSION;\r\n    }\r\n\r\n    getLocalStorageValue(key) {\r\n        let data = localStorage.getItem(key);        \r\n        if(data === '' || data === null)\r\n          return \"\";\r\n        else{\r\n          let decyptdata =  CryptoJS.AES.decrypt(localStorage.getItem(key), '2iAgencyENCRYPTION@12345').toString(CryptoJS.enc.Utf8);\r\n          return decyptdata ? JSON.parse(decyptdata) : decyptdata;\r\n        }\r\n    }\r\n    setLocalStorageValue(key, value) {\r\n        let data = JSON.stringify(value);\r\n        localStorage.setItem( key, CryptoJS.AES.encrypt(data, '2iAgencyENCRYPTION@12345').toString());\r\n    }\r\n    getStatus(status = 1){\r\n        \r\n      let statusText = \"Active\"\r\n      if(status === 0)\r\n        statusText = \"Inactive\";\r\n      else if(status === 2)\r\n        statusText = \"Pending\";\r\n      else if(status === 3)\r\n        statusText = \"Under Negotiation\";\r\n      return statusText;\r\n    }\r\n\r\n    getStatusVal(status = \"Active\") {\r\n        let statusText = 1;\r\n        if(status === \"Inactive\")\r\n          statusText = 0;\r\n        else if(status === \"Pending\")\r\n          statusText = 2;\r\n        else if(status === \"Under Negotiation\" || status === \"Block\")\r\n          statusText = 3;\r\n        return statusText;\r\n    }\r\n    getUserStatus(status = 1){\r\n        \r\n      let statusText = \"Active\"\r\n      if(status === 0)\r\n        statusText = \"Inactive\";\r\n      else if(status === 2)\r\n        statusText = \"Pending\";\r\n      else if(status === 3)\r\n        statusText = \"Block\";\r\n      return statusText;\r\n    }\r\n\r\n    getDateTime($utcTime, $format= 'YYYY-MM-DD H:i:s') {\r\n        var convertedDate = \"\";\r\n        if($utcTime !== undefined && $utcTime !== \"\") {\r\n            let newDate = new Date($utcTime);\r\n            let getDay = newDate.getDate();\r\n            getDay = (getDay < 10) ? '0' + getDay : getDay;\r\n            let getYear = newDate.getFullYear();            \r\n            let getMonth = newDate.getMonth();\r\n            getMonth = getMonth + 1;\r\n            getMonth = (getMonth < 10) ? '0' + getMonth : getMonth;\r\n            let getHour = newDate.getHours();\r\n            getHour = (getHour < 10) ? '0' + getHour : getHour;\r\n            let getMinutes = newDate.getMinutes();\r\n            getMinutes = (getMinutes < 10) ? '0' + getMinutes : getMinutes;\r\n            let getSeconds = newDate.getSeconds();\r\n            getSeconds = (getSeconds < 10) ? '0' + getSeconds : getSeconds;\r\n            if($format === 'YYYY-MM-DD H:i:s')\r\n                convertedDate = getYear+'-'+getMonth+'-'+getDay+' '+getHour+':'+getMinutes+':'+getSeconds;\r\n            else if($format === 'DD-MM-YYYY H:i:s')\r\n                convertedDate = getDay+'-'+getMonth+'-'+getYear+' '+getHour+':'+getMinutes+':'+getSeconds;\r\n            else if($format === 'DD-MM-YYYY H:i')\r\n                convertedDate = getDay+'-'+getMonth+'-'+getYear+' '+getHour+':'+getMinutes;\r\n            else if($format === 'YYYY/MM/DD H:i:s')\r\n                convertedDate = getYear+'/'+getMonth+'/'+getDay+' '+getHour+':'+getMinutes+':'+getSeconds;\r\n            else if($format === 'MM/DD/YYYY H:i:s')\r\n                convertedDate = getMonth+'/'+getDay+'/'+getYear+' '+getHour+':'+getMinutes+':'+getSeconds;\r\n            else if($format === 'DD/MM/YYYY H:i:s')\r\n                convertedDate = getDay+'/'+getMonth+'/'+getYear+' '+getHour+':'+getMinutes+':'+getSeconds;\r\n\r\n        }\r\n        return convertedDate;\r\n    }\r\n    getDate($utcTime, $format= 'MM/DD/YYYY') {\r\n        var convertedDate = \"\";\r\n        if($utcTime !== undefined && $utcTime !== \"\") {\r\n            let newDate = new Date($utcTime);\r\n            let getDay = newDate.getDate();\r\n            getDay = (getDay < 10) ? '0' + getDay : getDay;\r\n            let getYear = newDate.getFullYear();            \r\n            let getMonth = newDate.getMonth();\r\n            getMonth = getMonth + 1;\r\n            getMonth = (getMonth < 10) ? '0' + getMonth : getMonth;\r\n           \r\n            if($format === 'YYYY-MM-DD')\r\n                convertedDate = getYear+'-'+getMonth+'-'+getDay;\r\n            else if($format === 'DD-MM-YYYY')\r\n                convertedDate = getDay+'-'+getMonth+'-'+getYear;\r\n            else if($format === 'YYYY/MM/DD')\r\n                convertedDate = getYear+'/'+getMonth+'/'+getDay;\r\n            else if($format === 'MM/DD/YYYY')\r\n                convertedDate = getMonth+'/'+getDay+'/'+getYear;\r\n            else if($format === 'DD/MM/YYYY')\r\n                convertedDate = getDay+'/'+getMonth+'/'+getYear;\r\n\r\n        }\r\n        return convertedDate;\r\n    }\r\n}\r\n\r\nexport default new ApiService();\r\n","import React from \"react\";\r\nimport { Container, Row, Col} from 'reactstrap';\r\nimport \"./PageNotFound.css\";\r\n\r\nclass PageNotFound extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <>        \r\n\r\n        <section className=\"main-content\">\r\n            <Container>\r\n                <Row>\r\n                <Col md=\"12\" lg=\"12\">\r\n                    <h2>Page Not Found</h2>\r\n                </Col>\r\n                </Row>\r\n            </Container>\r\n        </section>\r\n            \r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageNotFound;","import React, { Component } from 'react';\n\nimport {\n   Col, Row, Button, Form, Input, FormGroup, FormFeedback, Label, Modal, ModalHeader, ModalBody, ModalFooter\n} from 'reactstrap';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport commonService from '../../core/services/commonService';\n\nimport './Login.css';\n\nclass ForgotPassword extends Component {\n  constructor(props) {\n    super(props)\n    this.unsubscribe = null;\n      this.state = {\n      email: '',\n      password: '',\n      userName: '',\n      name: '',\n      forgotPasswordEmail: \"\",\n      modal: false,\n      loggedIn: false,\n      loading: false,      \n      isLoggedIn: false,\n      errors: {},\n      settingsData: {}\n    }\n\n  }\n\n \n\n  componentDidMount() { \n    \n  }\n\n  \n\n  \n  changeHandler = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  validateForm() {\n    let errors = {};\n    let formIsValid = true;\n    \n    if (!this.state.email) {\n        formIsValid = false;\n        errors[\"email\"] = \"*Please enter your email.\";\n    }\n    if(this.state.email !== undefined && this.state.email.trim() !== \"\"){\n      var regex = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n      if(!regex.test(this.state.email.trim())){\n        formIsValid = false\n        errors[\"email\"] = 'Invalid email address';\n      }\n    }\n    \n   \n    \n    this.setState({\n      loading: false,\n      errors: errors\n    });\n    \n    return formIsValid;\n  }\n  forgotPasswordHandler = event => {\n    event.preventDefault();\n    event.target.className += \" was-validated\";\n    if(!this.validateForm())\n      return false;\n    this.setState({loading: true}, () => {\n      commonService.postAPI(\"auth/forgot-password\", {email: this.state.email}).then((res) => {\n          this.setState({loading: false});\n          if ( undefined === res.data || !res.data.status ) {\n            toast.error(res.data.message);\n            this.setState({loading: false});\n            return;\n\n          }\n          toast.success(res.data.message);\n      }).catch((err) => {\n        if(err.response !== undefined && err.response.status === 401) {\n          localStorage.clear();\n          this.props.propHistory.push('/login');\n        }\n        else {\n          this.setState( { loading: false, loggedIn: true } );\n          toast.error(err.message);    \n        }\n      })\n    });\n  } \n  toggle = () => {\n    this.props.hideForgotPasswordForm();\n  }\n\n  render() {\n    const { email} = this.state;\n    \n    return (\n      <Modal isOpen={true} toggle={this.toggle} className=\"store-modal\">\n          <ModalHeader toggle={this.toggle}>Forgot Password </ModalHeader>\n          <Form onSubmit={this.forgotPasswordHandler} noValidate className=\"form-info\">\n            <ModalBody>              \n              <Row>          \n                <Col md={\"12\"}>\n                  <FormGroup> \n                    <Label htmlFor=\"email\">Email Address</Label>            \n                    <Input type=\"email\" placeholder=\"email *\" id=\"email\" name=\"email\" value={this.state.email} onChange={this.changeHandler} required />\n                    <FormFeedback>{this.state.errors[email]}</FormFeedback>\n                  </FormGroup>  \n                </Col>\n              </Row>\n            </ModalBody>\n            <ModalFooter>\n              <Button className=\"submit-btn\" disabled = {this.state.loading}  type=\"submit\">Forgot</Button>\n              <Button className=\"btnCancel\" onClick={this.toggle}>Cancel</Button>\n            </ModalFooter>\n          </Form>\n        </Modal>\n    );\n  }\n}\n\nexport default ForgotPassword;","import React, { Component } from 'react';\r\n\r\nimport {\r\n  Container, Form,\r\n  FormGroup, Label, Input, Row, Col,\r\n  Button,\r\n} from 'reactstrap';\r\nimport  { Redirect } from 'react-router-dom';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../core/services/commonService';\r\nimport Loader from '../Loader/Loader';\r\nimport ForgotPassword from './ForgotPassword';\r\n\r\nimport './Login.css';\r\nconst logoUrl = `${process.env.PUBLIC_URL}/logo.png`;\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.unsubscribe = null;\r\n      this.state = {\r\n      email: '',\r\n      password: '',\r\n      userName: '',\r\n      forgotPasswordEmail: \"\",\r\n      modal: false,\r\n      loggedIn: false,\r\n      loading: false,      \r\n      isLoggedIn: false,\r\n      errors: {},\r\n      showforgotPassword: false,\r\n      settingsData: {}\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() { \r\n    \r\n  }\r\n\r\n  \r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n    if(!this.validateForm())\r\n      return false;\r\n    this.setState({loading: true}, () => {;\r\n        commonService.postAPI(\"auth/sign-in\", {email: this.state.email, password: this.state.password}).then((res) => {\r\n          if ( undefined === res.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            if(!res.data.status) {\r\n              if(res.data.isAccountVerified !== undefined && !res.data.isAccountVerified) {\r\n                this.setState( { loading: true, isLoggedIn: true }, () => {\r\n                  commonService.postAPI( `auth/resend-otp`, {email: this.state.email} )\r\n                    .then( res => {\r\n                     \r\n                      console.log(res);\r\n                      if ( undefined === res.data || !res.data.status ) {\r\n                        this.setState( { loading: false} );\r\n                        toast.error(res.data.message);\r\n                        return;\r\n                      }\r\n                      this.setState( { loading: false } );\r\n                      toast.success(res.data.message);            \r\n                    } )\r\n                    .catch( err => {\r\n                      \r\n                      this.setState( { loading: false } );\r\n                      toast.error(err.message);\r\n                    } )\r\n                } )\r\n              }\r\n            }\r\n            return;\r\n          }\r\n          \r\n          const loggedInfo = res.data;\r\n          if(loggedInfo.data.role.toLowerCase() === \"admin\" || loggedInfo.data.role.toLowerCase() === \"organization\") {\r\n            commonService.setLocalStorageValue( 'accessToken', loggedInfo.data.accessToken);\r\n            commonService.setLocalStorageValue( 'refreshToken', loggedInfo.data.refreshToken);\r\n            commonService.setLocalStorageValue( 'role', loggedInfo.data.role);\r\n            commonService.setLocalStorageValue( 'authId', loggedInfo.data.authId);\r\n            commonService.setLocalStorageValue( 'profilePic', loggedInfo.data.profilePic );\r\n            commonService.setLocalStorageValue( 'userName', loggedInfo.data.firstName );\r\n            if(loggedInfo.data.role.toLowerCase() === \"organization\")\r\n              this.props.history.push(\"/user/dashboard\")\r\n            else\r\n              this.props.history.push(\"/admin/dashboard\")\r\n          }\r\n          else\r\n            toast.error(\"You have not permission to access dashboard\");\r\n        }).catch((err) => {\r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.propHistory.push('/login');\r\n          }\r\n          else {\r\n            this.setState( { loading: false, loggedIn: true } );\r\n            toast.error(err.message);    \r\n          }\r\n          \r\n        })\r\n    });\r\n  }\r\n  changeHandler = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  validateForm() {\r\n    let errors = {};\r\n    let formIsValid = true;\r\n    if (!this.state.password) {\r\n        formIsValid = false;\r\n        errors[\"password\"] = \"*Please enter password.\";\r\n    }\r\n    if (!this.state.email) {\r\n        formIsValid = false;\r\n        errors[\"email\"] = \"*Please enter your email.\";\r\n    }\r\n    \r\n   \r\n    \r\n    this.setState({\r\n      loading: false,\r\n      errors: errors\r\n    });\r\n    \r\n    return formIsValid;\r\n  }\r\n  showForgotPasswordForm(){\r\n    this.setState({showforgotPassword: true})\r\n  }\r\n  hideForgotPasswordForm(){\r\n    this.setState({showforgotPassword: false})\r\n  }\r\n\r\n  render() {\r\n    const { email, password, loggedIn, loading, errors} = this.state;\r\n    if ( loggedIn ) {\r\n      if(commonService.getLocalStorageValue('role') === \"admin\")\r\n        return ( <Redirect to={`/admin`} noThrow /> )\r\n      else\r\n        return ( <Redirect to={`/dashboard`} noThrow /> )\r\n\r\n    }\r\n    return(\r\n         <div className=\"auth-section\" style={{backgroundImage:`url('/images/bg.jpg')`}}>\r\n        <Container>\r\n          {loading ? <Loader /> : <></>}\r\n          <ToastContainer />\r\n          <Row className=\"justify-content-md-center align-items-center\">\r\n            <Col md={12}>\r\n              <div className=\"Login\">\r\n                <h2>Sign In</h2>  \r\n                <Form className=\"form form-content needs-validation\" onSubmit={this.submitHandler} noValidate>\r\n                  <div className=\"logo-section\">\r\n                    <img src = {logoUrl} alt=\"Logo\" />\r\n                  </div>\r\n                  <FormGroup>\r\n                    <Label>Email</Label>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      invalid={errors['email'] !== undefined && errors['email'] !== \"\"} value={email} onChange={this.changeHandler} id=\"email\"\r\n                      placeholder=\"myemail@email.com\"\r\n                    />\r\n                    <div className=\"invalid-feedback\">\r\n                      Please enter your registered email-id.\r\n                    </div>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"examplePassword\">Password</Label>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      invalid={errors['password'] !== undefined && errors['password'] !== \"\"} value={password} onChange={this.changeHandler} id=\"password\"\r\n                      placeholder=\"********\"\r\n                    />\r\n                    <div className=\"invalid-feedback\">\r\n                      Please enter your registered password.\r\n                    </div>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                      <Row>\r\n                        <Col md={6}>\r\n                          <Button type=\"submit\" className=\"submit-btn-1\">Submit</Button>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                          <p className=\"forgot-text\" onClick = {this.showForgotPasswordForm.bind(this)}>Forgot Password?</p>\r\n                        </Col>\r\n                      </Row>\r\n                  </FormGroup>\r\n                  \r\n                </Form>\r\n                {this.state.showforgotPassword ? <ForgotPassword hideForgotPasswordForm = {this.hideForgotPasswordForm.bind(this)} /> : \"\"}\r\n                {/*this.state.showResendVerification ? <ResendVerification hideResendVerificationForm = {this.hideResendVerificationForm.bind(this)} /> : \"\"*/}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport commonService from './core/services/commonService';\r\n\r\nimport './App.css';\r\nimport Loader from './views/Loader/Loader';\r\nimport PageNotFound from './views/Pages/404/PageNotFound';\r\nimport Login from './views/Login/Login';\r\n// Containers\r\n//const FrontEndLayout = React.lazy(() => import('./containers/FrontEndLayout/FrontEndLayout'));\r\n//const CommonLayout = React.lazy(() => import('./containers/CommonLayout/CommonLayout'));\r\nconst UserLayout = React.lazy(() => import('./containers/UserLayout/UserLayout'));\r\nconst AdminLayout = React.lazy(() => import('./containers/AdminLayout/AdminLayout'));\r\n\r\nconst loading = () => <Loader />;\r\n\r\nclass App extends Component {\r\n  render(){\r\n    return (\r\n      <Router>\r\n          <React.Suspense fallback={loading()}>\r\n            <Switch>\r\n              <PrivateRoute path=\"/admin\" name=\"Admin\" component={AdminLayout} />\r\n             {/*<Route path=\"/common\" name=\"Common\" component={CommonLayout} />*/}\r\n              <ProtectedRoute path=\"/user\" name=\"User\" component={UserLayout} />\r\n              {/*<Route path=\"/\" name=\"Home\" component={FrontEndLayout} />*/}\r\n              <Route path=\"/login\" name=\"Login\" component={Login} />\r\n              <Route path=\"/\" name=\"Login\" component={Login} />\r\n\r\n              <Route name=\"Page not found\" component={PageNotFound} />\r\n            </Switch>\r\n          </React.Suspense>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nconst PrivateRoute = ({ component, ...rest }) => {\r\n  return (\r\n    <Route {...rest} render={routeProps => {\r\n      return commonService.getAuth() && commonService.getLocalStorageValue(\"role\") === \"admin\" ? (\r\n        renderMergedProps(component, routeProps, rest)\r\n      ) : (\r\n        <Redirect to={{\r\n          pathname: '/login',\r\n          state: { from: routeProps.location }\r\n        }}/>\r\n      );\r\n    }}/>\r\n  );\r\n};\r\n\r\nconst ProtectedRoute = ({ component, ...rest }) => {\r\n  return (\r\n    <Route {...rest} render={routeProps => {\r\n      return commonService.getAuth() && commonService.getLocalStorageValue(\"role\") !== \"\" ? (\r\n        renderMergedProps(component, routeProps, rest)\r\n      ) : (\r\n        <Redirect to={{\r\n          pathname: '/login',\r\n          state: { from: routeProps.location }\r\n        }}/>\r\n      );\r\n    }}/>\r\n  );\r\n};\r\n\r\nconst renderMergedProps = (component, ...rest) => {\r\n  const finalProps = Object.assign({}, ...rest);\r\n  return (\r\n    React.createElement(component, finalProps)\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","import React from 'react';\r\nimport \"./Loader.css\"\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loaderSection\">\r\n             <div className=\"spinner-border text-primary\" role=\"status\">\r\n                  <span className=\"sr-only\">Loading...</span>\r\n              </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;"],"sourceRoot":""}