{"version":3,"sources":["containers/AdminLayout/_nav.js","views/AdminDashboard/Dashboard/Dashboard.js","views/AdminDashboard/Category/CategoryData.js","views/AdminDashboard/Category/Category.js","views/AdminDashboard/ThreatType/ThreatTypeData.js","views/AdminDashboard/ThreatType/ThreatType.js","views/AdminDashboard/Organization/OrganizationData.js","views/AdminDashboard/Organization/Organization.js","views/AdminDashboard/Organization/Employee/EmployeeData.js","views/AdminDashboard/Organization/Employee/Employee.js","views/AdminDashboard/Organization/CompanyUser/CompanyUserData.js","views/AdminDashboard/Organization/CompanyUser/CompanyUser.js","routes/adminRoutes.js","containers/AdminLayout/DefaultFooter.js","containers/UserLayout/UserAvtar.js","containers/AdminLayout/DefaultHeader.js","containers/AdminLayout/AdminLayout.js"],"names":["items","name","url","icon","children","Dashboard","props","loading","className","state","dashBoardStats","totalEmployeeUser","totalCompanyUser","totalCases","totalNewCases","totalInProgressCases","totalClosedCases","userList","enquiryList","this","setState","commonService","getAPIWithAccessToken","then","res","undefined","data","status","toast","error","message","dashData","class","aria-hidden","Component","CategoryData","buttonProcessing","rowIndex","dataTableItem","editCategoryAction","deleteCategoryAction","columns","label","options","filter","customBodyRender","value","tableMeta","updateValue","i","disabled","onClick","editCategoryItem","window","confirm","deleteCategoryItem","rowsItem","entries","cat","console","log","catInfo","categoryName","image","imagUrl","remark","getStatus","action","push","search","searchOpen","print","viewColumns","download","responsive","selectableRows","textLabels","body","noMatch","dataTableLoadingStatus","toolTip","columnHeaderTooltip","column","Category","changeHandler","event","target","toggle","modal","category_name","formValid","errors","categoryImageUrl","changeFileHandler","targetFile","files","formErrors","category_image","type","categoryImage","changeFilterHandler","filterItem","categoryList","category_name_valid","handleEditCategory","bind","submitHandler","handleDeleteCategory","filterItemList","resetSearchFilter","filterParmas","custom","statusText","getStatusVal","catch","err","response","localStorage","clear","history","preventDefault","validateForm","formData","formProccessing","categoryId","putAPIWithAccessToken","success","postAPIWithAccessToken","formField","trim","length","categoryItem","deleteAPIWithAccessToken","loaderElement","Loader","Row","Col","lg","Card","CardHeader","Button","color","CardBody","md","FormGroup","Label","htmlFor","Input","placeholder","id","onChange","size","Modal","isOpen","ModalHeader","Form","onSubmit","noValidate","ModalBody","invalid","required","ModalFooter","threatName","ThreatType","threatId","ThreatTypeData","OrganizationData","editOrganizationAction","deleteOrganizationAction","orgnization","orgInfo","organizationName","authId","firstName","lastName","email","phoneNumber","address","createdAt","Date","toLocaleDateString","sort","editOrganizationItem","to","title","href","deleteOrganizationItem","downloadOptions","filename","separator","fixedHeaderOptions","xAxis","yAxis","Organization","changeStatusBtn","mobileNumber","address2","city","country","postalCode","setFilterFromDate","date","filterFormField","filterFrom","setFilterToDate","filterTo","resetfilterOragnization","filter_organization_id","filterOrgName","filterMobile","filterStatus","custom_search","organizationList","filterLocation","handleEditOrganization","handleDeleteOrganization","filterOragnizationList","organizationQuery","newFromDate","getFormatDate","newToDate","formInputField","organizationInfo","organizationId","pattern","RegExp","test","statusBtn","changeProfileStatus","profileId","formdata","getFullYear","toString","getMonth","substring","getDate","processingBtnText","EmployeeData","editEmployeeAction","deleteEmployeeAction","employee","roleName","editEmployeeItem","deleteEmployeeItem","queryString","require","SetOrganizationDropDownItem","Employee","role","employee_name","EmployeeList","handleEditEmployee","handleDeleteEmployee","filterEmployeeList","queryParams","parse","location","stroreWalkQuery","employeeInfo","organizationAuthId","employeeId","map","index","key","CompanyUserData","CompanyUser","adminRoutes","path","exact","component","employeeList","DefaultFooter","Fragment","rel","defaultProps","UserAvtar","arrName","getLocalStorageValue","split","slice","join","DefaultHeader","display","mobile","full","src","process","width","height","alt","minimized","Nav","navbar","UncontrolledDropdown","nav","direction","DropdownToggle","DropdownMenu","right","DropdownItem","header","tag","e","onLogout","AdminLayout","fixed","fallback","signOut","navConfig","navigation","router","appRoutes","Container","fluid","route","idx","render","from"],"mappings":"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","file":"static/js/5.beea10d8.chunk.js","sourcesContent":["export default {\r\n  items: [\r\n    {\r\n      name: 'Dashboard',\r\n      url: '/admin/dashboard',\r\n      icon: 'icon-speedometer',\r\n    },\r\n    \r\n    \r\n    {\r\n      name: 'Manage Organization',\r\n      url: '/admin/organization',\r\n      icon: 'icon-people',  \r\n    },\r\n    {\r\n      name: 'Manage Data',\r\n      url: '/admin/master-case-type',\r\n      icon: 'icon-people',  \r\n      children: [{\r\n          name: 'Master Case Type',\r\n          url: '/admin/master-case-type',\r\n          icon: 'icon-people',   \r\n        },\r\n        {\r\n          name: 'Master Threat Type',\r\n          url: '/admin/master-threat-type',\r\n          icon: 'icon-people',   \r\n        },\r\n               \r\n      ] \r\n\r\n    },\r\n    \r\n  ],\r\n};\r\n","import React, { Component } from 'react';\r\n\r\n//import { Col, Row } from 'reactstrap';\r\n//import { PeopleAlt, LocalShipping, MailOutline, SupervisorAccount, Link } from '@material-ui/icons';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../core/services/commonService';\r\nimport './dashboard.css'\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n     loading: false,\r\n      dashBoardStats: {totalEmployeeUser: 0,\r\n          totalCompanyUser: 0,\r\n          totalCases: 0,\r\n          totalNewCases: 0,\r\n          totalInProgressCases: 0,\r\n          totalClosedCases: 0 },\r\n      userList: [],\r\n      enquiryList:[],\r\n     \r\n    };\r\n  }\r\n\r\n  componentDidMount() { \r\n    this.setState( { loading: true}, () => {\r\n\r\n      commonService.getAPIWithAccessToken('dashboard')\r\n        .then( res => {\r\n          if( undefined === res.data.data || !res.data.status ){\r\n            this.setState( {loading: false });\r\n            toast.error(res.data.message);\r\n            return;\r\n          }\r\n          const dashData = res.data.data;\r\n          this.setState({ loading:false, dashBoardStats:dashData})\r\n        }\r\n        )\r\n\r\n      \r\n        \r\n      \r\n      \r\n    } )\r\n  }\r\n \r\n\r\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"animated fadeIn admin-dashboard\">\r\n        <div className=\"overview-info\">\r\n          <div class=\"row\">\r\n          <div class=\"col-lg-12\">\r\n            <div class=\"user-H\">\r\n              <h5>User Overview</h5>\r\n              <hr/>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-4 col-md-6 col-sm-6\">\r\n            <div class=\"card card-stats\">\r\n              <div class=\"card-header card-header-warning card-header-icon\">\r\n                <div class=\"card-icon\">\r\n                   <i class=\"fa fa-user\"></i>\r\n                </div>\r\n                <p class=\"card-category\">Total Employee User</p>\r\n                <h3 class=\"card-title\">\r\n                  {this.state.dashBoardStats.totalEmployeeUser}\r\n                </h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-lg-4 col-md-6 col-sm-6\">\r\n            <div class=\"card card-stats\">\r\n              <div class=\"card-header card-header-success card-header-icon\">\r\n                <div class=\"card-icon\">\r\n                   <i class=\"fa fa-group\"></i>\r\n                </div>\r\n                <p class=\"card-category\">Total Company user</p>\r\n                <h3 class=\"card-title\">{this.state.dashBoardStats.totalCompanyUser}</h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row mt-5\">\r\n          <div class=\"col-lg-12\">\r\n            <div class=\"cases-H\">\r\n              <h5>Cases Overview</h5>\r\n              <hr/>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-4 col-md-6 col-sm-6\">\r\n            <div class=\"card card-stats\">\r\n              <div class=\"card-header card-header-info card-header-icon\">\r\n                <div class=\"card-icon\">\r\n                  <i class=\"fa fa-file-text\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <p class=\"card-category\">Total registered cases</p>\r\n                <h3 class=\"card-title\">{this.state.dashBoardStats.totalCases}</h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-lg-4 col-md-6 col-sm-6 \">\r\n            <div class=\"card card-stats\">\r\n              <div class=\"card-header card-header-info-closed card-header-icon\">\r\n                <div class=\"card-icon\">\r\n                  <i class=\"fa fa-file-text\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <p class=\"card-category\">Closed cases</p>\r\n                <h3 class=\"card-title\">{this.state.dashBoardStats.totalClosedCases}</h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-lg-4 col-md-6 col-sm-6 \">\r\n            <div class=\"card card-stats\">\r\n              <div class=\"card-header card-header-info-pending card-header-icon\">\r\n                <div class=\"card-icon\">\r\n                  <i class=\"fa fa-file-text\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <p class=\"card-category\"> Investigation Inprogress Cases</p>\r\n                <h3 class=\"card-title\">{this.state.dashBoardStats.totalInProgressCases}</h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-lg-4 col-md-6 col-sm-6 mt-5\">\r\n            <div class=\"card card-stats\">\r\n              <div class=\"card-header card-header-info-NewCases card-header-icon\">\r\n                <div class=\"card-icon\">\r\n                  <i class=\"fa fa-file-text\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <p class=\"card-category\">New Cases</p>\r\n                <h3 class=\"card-title\">{this.state.dashBoardStats.totalNewCases}</h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div> \r\n        </div>\r\n\r\n            \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from 'react';\r\n//import { Button } from 'reactstrap';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport commonService from '../../../core/services/commonService';\r\nclass CategoryData extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: []\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n  /* Edit Category Item */\r\n  editCategoryItem(rowIndex){    \r\n    this.props.editCategoryAction(rowIndex);\r\n  }\r\n  /*Delete Category*/\r\n  deleteCategoryItem(rowIndex){    \r\n    this.props.deleteCategoryAction(rowIndex);\r\n  }\r\n  \r\n  render() {\r\n    const columns = [\r\n      /*{\r\n        label: 'Image',\r\n        name: 'image',\r\n        options: {\r\n          filter: true,\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            return (\r\n             <p className=\"imagePreview\"><img src={value} alt=\"\" /></p>\r\n            );\r\n          },\r\n        }\r\n      },*/\r\n      {\r\n        label: 'Name',\r\n        name: 'name',\r\n      },\r\n      \r\n      {\r\n        label: 'Status',\r\n        name: 'status',\r\n      },\r\n      {\r\n        label: 'Action',\r\n        name: 'action',\r\n        options: {\r\n          filter: true,\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            let i = tableMeta.rowIndex;\r\n           \r\n            return (\r\n             <p><button className=\"btn-edit\" disabled={this.state.buttonProcessing} onClick={() => \r\n              this.editCategoryItem(i)}><i className=\"fa fa-pencil\"></i> </button>\r\n              <button className=\"btn-delete\" disabled={this.state.buttonProcessing} onClick={() => \r\n              {if( window.confirm('Are you sure you wish to delete this case type?')) this.deleteCategoryItem(i)}}><i className=\"fa fa-trash\"></i></button></p>\r\n            );\r\n          },\r\n        }\r\n      },\r\n    ];\r\n\r\n    let rowsItem = [];    \r\n    for(const [i, cat] of this.props.data.entries()){\r\n      console.log(i);\r\n      let catInfo = {\r\n        name: cat.categoryName,\r\n        image: cat.imagUrl,\r\n        remark: cat.remark || \"\",\r\n        status: commonService.getStatus(cat.status) ,       \r\n        action: \"\",       \r\n      }      \r\n      rowsItem.push(catInfo);\r\n    }\r\n    const options = {\r\n      search: false,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      viewColumns: false,\r\n      download: false,\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Processing........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      /*fixedHeaderOptions: { xAxis: false, yAxis: false },\r\n       customToolbar: () => {\r\n        return (\r\n          <Button color=\"\" className=\"categoryAdd\" type=\"button\" onClick={this.props.toggle}><i className=\"fa fa-plus\"></i> Add Practice</Button>\r\n        );\r\n      }*/\r\n\r\n    };\r\n    \r\n    return (\r\n      <MUIDataTable\r\n        \r\n        data={rowsItem}        \r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CategoryData;","import React, { Component } from 'react';\nimport { Card, CardHeader, Col, Row, Button, Form, Input, FormGroup, Label, Modal, ModalHeader, ModalBody, CardBody, ModalFooter } from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport commonService from '../../../core/services/commonService';\n\nimport Loader from '../../Loader/Loader';\nimport CategoryData from './CategoryData';\nimport './Category.css'\n\nclass Category extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      modal: false,\n      category_name: \"\",\n      categoryList: [],\n      categoryImage: null,\n      categoryImageUrl: \"\",\n      loading: true,\n      rowIndex: -1,\n      status: \"\",\n      errors: {category_name: '', category_image: '', error: ''},\n      category_name_valid: false,\n      filterItem: {},\n      formValid: false,\n\n\n    } \n    this.handleEditCategory = this.handleEditCategory.bind(this);\n    this.submitHandler = this.submitHandler.bind(this);\n    this.handleDeleteCategory = this.handleDeleteCategory.bind(this);\n    this.filterItemList = this.filterItemList.bind(this);\n    this.resetSearchFilter = this.resetSearchFilter.bind(this);\n  }\n\n  // Fetch the category List\n  componentDidMount() { \n    this.categoryList();\n  }\n  /*Category List API*/\n  categoryList(filterItem = {}) {\n    let filterParmas = \"\";\n    \n    \n    if(filterItem.custom !== undefined && filterItem.custom !== \"\" ) \n      filterParmas += (filterParmas !==\"\" ) ? \"&keyword=\"+filterItem.custom: \"?keyword=\"+filterItem.custom;\n    if(filterItem.status !== undefined && filterItem.status !== \"\" ) {\n      let statusText = commonService.getStatusVal(filterItem.status)\n      filterParmas += (filterParmas !==\"\" ) ? \"&status=\"+statusText: \"?status=\"+statusText;\n    }\n    this.setState( { loading: true}, () => {\n      commonService.getAPIWithAccessToken('category'+filterParmas)\n        .then( res => {\n          \n           \n          if ( undefined === res.data.data || !res.data.status ) {\n            this.setState( {  loading: false } );\n            toast.error(res.data.message);    \n            return;\n          }   \n\n          this.setState({loading:false, categoryList: res.data.data});     \n         \n        } )\n        .catch( err => {   \n                \n          if(err.response !== undefined && err.response.status === 401) {\n            localStorage.clear();\n            this.props.history.push('/login');\n          }\n          else {\n            this.setState( { loading: false } );\n            toast.error(err.message);    \n          }\n        } )\n    } )\n  }\n  submitHandler (event) {\n    event.preventDefault();\n    event.target.className += \" was-validated\";\n    if(!this.validateForm())\n      return false;\n    let formData = {}; \n    formData.categoryName = this.state.category_name;\n    let statusText = commonService.getStatusVal(this.state.status)\n    formData.status = statusText;\n    formData.remark = this.state.remark;\n    \n    this.setState( { loading: true, formProccessing: true}, () => {\n      if(this.state.rowIndex > -1){\n        /* Update Category */\n        const categoryId = this.state.categoryList[this.state.rowIndex].categoryId;\n        formData.categoryId = categoryId;\n        \n        commonService.putAPIWithAccessToken( `category`, formData)\n          .then( res => {\n            \n           \n            \n            if ( undefined === res.data.data || !res.data.status ) { \n              let errors = {};\n              if(res.data.errors !== undefined)\n                errors = res.data.errors;\n              else\n                errors.categoryName = res.data.message;\n              this.setState( { formProccessing: false, loading: false, errors: errors} );\n              return false;\n            }  \n            let updatedCategoryLists = this.state.categoryList;\n            updatedCategoryLists[this.state.rowIndex] = res.data.data;\n            this.setState({modal: false, rowIndex: \"\", formProccessing: false, loading:false});\n            toast.success(res.data.message);    \n            this.categoryList();\n          } )\n          .catch( err => {       \n              \n            if(err.response !== undefined && err.response.status === 401) {\n              localStorage.clear();\n              this.props.history.push('/login');\n            }\n            else {\n              this.setState( { formProccessing: false, loading:false } );\n              toast.error(err.message);    \n            }\n          } )\n       \n      }\n      else{\n         /* Add Category */\n        commonService.postAPIWithAccessToken( `category`, formData)\n          .then( res => {\n            \n           \n            \n            if ( undefined === res.data.data || !res.data.status ) { \n              let errors = {};\n              if(res.data.errors !== undefined)\n                errors = res.data.errors;\n              else\n                errors.categoryName = res.data.message;\n              this.setState( { formProccessing: false, loading:false, errors: errors} );\n              return false;\n            }            \n            this.setState({modal: false, formProccessing: false, loading:false});\n            toast.success(res.data.message); \n            this.categoryList();\n          } )\n          .catch( err => {\n            if(err.response !== undefined && err.response.status === 401) {\n              localStorage.clear();\n              this.props.history.push('/login');\n            }\n            else{\n              this.setState( { formProccessing: false, loading:false } );\n              toast.error(err.message); \n            }\n          } )\n      }\n    })\n  };\n  /* Input Field On changes*/\n  changeHandler = event => {\n    const name = event.target.name;\n    const value = event.target.value\n    this.setState({ [name]: value });\n  };\n  \n \n  /* Validate Form */\n  validateForm() {\n    let formValid = true;\n    let formField = this.state; \n    let errors = {};\n    if(formField.category_name === undefined || formField.category_name.trim() === \"\" ){\n      formValid = false;\n      errors['categoryName'] = 'Case Type name field required';\n    }\n    if(formField.status === undefined || formField.status.trim() === \"\" ){\n      formValid = true;\n      errors['status'] = 'Status field required';\n    }\n    this.setState({errors:  errors});\n    return formValid;\n    \n  }\n  /* Set Error Class*/\n  errorClass(error) {\n    return(error.length === 0 ? '' : 'has-error');\n  }\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal,\n      category_name: \"\",\n      remark: \"\",\n      status: \"\",\n      rowIndex: -1,\n      formValid: false,\n      errors: {},\n      categoryImageUrl: \"\"\n    });\n  }\n  /* File changes handler*/\n  changeFileHandler = event => {   \n    const targetFile = event.target.files[0];\n    let formErrors = this.state.formErrors;\n    formErrors.category_image = \"\";\n    \n    if(targetFile.type !== \"image/png\" && targetFile.type !== \"image/jpeg\" && targetFile.type !== \"image/jpg\" && targetFile.type !== \"image/svg\") {\n      formErrors.category_image = \" accept only png, jpeg, jpg\";\n      this.setState({ categoryImage: targetFile, formErrors: formErrors  });\n    }\n    else\n      this.setState({ categoryImage: targetFile, formErrors: formErrors  });\n  };\n\n  /* Edit Category*/\n  handleEditCategory(rowIndex){\n   \n      const categoryItem = this.state.categoryList[rowIndex];\n      let status = \"Active\"\n      status = commonService.getStatus(categoryItem.status);\n\n      this.setState({modal: true, status: status, category_name: categoryItem.categoryName, remark: categoryItem.remark, rowIndex: rowIndex, formValid: true, category_name_valid: true, categoryImageUrl: categoryItem.imagUrl});\n  }\n  /* Add category */\n  handleDeleteCategory(rowIndex){\n   \n    const categoryItem = this.state.categoryList[rowIndex];\n   \n    this.setState( { loading: true}, () => {\n      commonService.deleteAPIWithAccessToken( `category/`+categoryItem.categoryId)\n        .then( res => {\n          this.setState({loading: false});\n          if ( undefined === res.data || !res.data.status ) {            \n             toast.error(res.data.message);      \n            return;\n          }         \n          \n          toast.success(res.data.message);\n          this.categoryList();\n        } )\n        .catch( err => {       \n            \n          if(err.response !== undefined && err.response.status === 401) {\n            localStorage.clear();\n            this.props.history.push('/login');\n          }\n          else{\n            this.setState( { loading: false } );\n            toast.error(err.message);\n          }\n      } )\n    })\n  }\n\n  filterItemList(){\n    const filterItem = this.state.filterItem;\n    this.categoryList(filterItem);\n  }\n  \n  changeFilterHandler = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    const filterItem = this.state.filterItem\n    filterItem[name] = value;\n    this.setState({ filterItem: filterItem });\n  };\n  resetSearchFilter() {\n    this.setState({filterItem: { status: '', custom: ''}});\n    this.categoryList();\n  }\n\n  render() {\n\n    const { categoryList, loading, modal, errors  } = this.state;     \n    let loaderElement ='';\n    \n    if(loading)\n      loaderElement = <Loader />\n    /*let categoryImagePreview = '';\n    if(this.state.categoryImageUrl !== \"\")\n      categoryImagePreview = <div className=\"imagePreview\"><img src={this.state.categoryImageUrl} alt=\"\" /></div>*/\n\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          \n          {loaderElement}\n          <Col lg={12}>\n            <Card className=\"\">\n                <CardHeader className=\"mainHeading\">\n                  <strong>Case Type List</strong> \n                  <Button color=\"\" className=\"categoryAdd\" type=\"button\" onClick={this.toggle}><i className=\"fa fa-plus\"></i> Add Case Type</Button>\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col md={12}>\n                      <Row className=\"filterRow\">                      \n                        <Col md={\"3\"}>\n                          <FormGroup> \n                            <Label htmlFor=\"filter_doctor_id\">Search By Name</Label>            \n                            <Input type=\"text\" placeholder=\"Search By Name\" id=\"custom\" name=\"custom\" value={this.state.filterItem.custom} onChange={this.changeFilterHandler} />\n                          </FormGroup>  \n                        </Col>\n                        <Col md={\"3\"}>\n                          <FormGroup> \n                            <Label htmlFor=\"filter_doctor_id\">Search By Status</Label>            \n                            <Input type=\"select\" placeholder=\"Search By Status\" id=\"status\" name=\"status\" value={this.state.filterItem.status} onChange={this.changeFilterHandler}>\n                                <option value = \"\">Select</option>\n                                <option value=\"Active\">Active</option>\n                                <option value=\"Inactive\">Inactive</option>\n                            </Input>\n                          </FormGroup>  \n                        </Col>\n                        <Col md={\"1\"} className=\"p-0\">\n                          <FormGroup> \n                            <Label>&nbsp;</Label><br />\n                            <Button color=\"success\" type=\"button\" size=\"sm\" onClick={this.filterItemList}><i className=\"fa fa-search\"></i></Button>&nbsp;\n                            <Button color=\"danger\" type=\"reset\" size=\"sm\" onClick={this.resetSearchFilter}><i className=\"fa fa-refresh\"></i></Button>\n                          </FormGroup>             \n                        </Col>\n                      </Row> \n                       \n                    </Col>       \n                    <Col lg= {12}>   \n                      <CategoryData data={categoryList} toggle={this.toggle} editCategoryAction={this.handleEditCategory} deleteCategoryAction={this.handleDeleteCategory} dataTableLoadingStatus = {this.state.loading} />\n                    </Col> \n                  </Row>\n                </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Modal isOpen={modal} toggle={this.toggle} className=\"category-modal-section\">\n          <ModalHeader toggle={this.toggle}>Case Type</ModalHeader>\n          <Form onSubmit={this.submitHandler} noValidate>\n            <ModalBody>\n              <FormGroup> \n                <Label htmlFor=\"category_name\">Case Type Name</Label>            \n                <Input type=\"text\" placeholder=\"Case Type Name *\" invalid={errors['categoryName'] !== undefined && errors['categoryName'] !== \"\"} id=\"category_name\" name=\"category_name\" value={this.state.category_name} onChange={this.changeHandler} required />\n                <div className=\"invalid-feedback\">\n                  {errors['categoryName']}\n                </div>\n              </FormGroup>\n              \n              <FormGroup>\n                <Label htmlFor=\"template_status\">Status</Label>            \n                <Input type=\"select\" placeholder=\"Status *\" invalid={errors['status'] !== undefined && errors['status'] !== \"\"} id=\"status\" name=\"status\" value={this.state.status} onChange={this.changeHandler} required >\n                  <option value=\"\">Select Status</option>\n                  <option value=\"Active\">Active</option>\n                  <option value=\"Inactive\">Inactive</option>\n                  \n                </Input>\n                <div className=\"invalid-feedback\">\n                  {errors['status']}\n                </div>\n              </FormGroup>\n               \n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" disabled={this.state.formProccessing} type=\"submit\">Submit</Button>\n              <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n            </ModalFooter>\n          </Form>\n        </Modal>\n      </div>\n\n    )\n  }\n}\n\nexport default Category;\n","import React, { Component } from 'react';\r\n//import { Button } from 'reactstrap';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport commonService from '../../../core/services/commonService';\r\nclass CategoryData extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: []\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n  /* Edit Category Item */\r\n  editCategoryItem(rowIndex){    \r\n    this.props.editCategoryAction(rowIndex);\r\n  }\r\n  /*Delete Category*/\r\n  deleteCategoryItem(rowIndex){    \r\n    this.props.deleteCategoryAction(rowIndex);\r\n  }\r\n  \r\n  render() {\r\n    const columns = [\r\n      /*{\r\n        label: 'Image',\r\n        name: 'image',\r\n        options: {\r\n          filter: true,\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            return (\r\n             <p className=\"imagePreview\"><img src={value} alt=\"\" /></p>\r\n            );\r\n          },\r\n        }\r\n      },*/\r\n      {\r\n        label: 'Name',\r\n        name: 'name',\r\n      },\r\n      \r\n      {\r\n        label: 'Status',\r\n        name: 'status',\r\n      },\r\n      {\r\n        label: 'Action',\r\n        name: 'action',\r\n        options: {\r\n          filter: true,\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            let i = tableMeta.rowIndex;\r\n           \r\n            return (\r\n             <p><button className=\"btn-edit\" disabled={this.state.buttonProcessing} onClick={() => \r\n              this.editCategoryItem(i)}><i className=\"fa fa-pencil\"></i> </button>\r\n              <button className=\"btn-delete\" disabled={this.state.buttonProcessing} onClick={() => \r\n              {if( window.confirm('Are you sure you wish to delete this case type?')) this.deleteCategoryItem(i)}}><i className=\"fa fa-trash\"></i></button></p>\r\n            );\r\n          },\r\n        }\r\n      },\r\n    ];\r\n\r\n    let rowsItem = [];    \r\n    for(const [i, cat] of this.props.data.entries()){\r\n      console.log(i);\r\n      let catInfo = {\r\n        name: cat.threatName,\r\n        image: cat.imagUrl,\r\n        remark: cat.remark || \"\",\r\n        status: commonService.getStatus(cat.status) ,       \r\n        action: \"\",       \r\n      }      \r\n      rowsItem.push(catInfo);\r\n    }\r\n    const options = {\r\n      search: false,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      viewColumns: false,\r\n      download: false,\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Processing........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      /*fixedHeaderOptions: { xAxis: false, yAxis: false },\r\n       customToolbar: () => {\r\n        return (\r\n          <Button color=\"\" className=\"categoryAdd\" type=\"button\" onClick={this.props.toggle}><i className=\"fa fa-plus\"></i> Add Practice</Button>\r\n        );\r\n      }*/\r\n\r\n    };\r\n    \r\n    return (\r\n      <MUIDataTable\r\n        \r\n        data={rowsItem}        \r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CategoryData;","import React, { Component } from 'react';\nimport { Card, CardHeader, Col, Row, Button, Form, Input, FormGroup, Label, Modal, ModalHeader, ModalBody, CardBody, ModalFooter } from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport commonService from '../../../core/services/commonService';\n\nimport Loader from '../../Loader/Loader';\nimport ThreatTypeData from './ThreatTypeData';\nimport './ThreatType.css'\n\nclass ThreatType extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      modal: false,\n      category_name: \"\",\n      categoryList: [],\n      categoryImage: null,\n      categoryImageUrl: \"\",\n      loading: true,\n      rowIndex: -1,\n      status: \"\",\n      errors: {category_name: '', category_image: '', error: ''},\n      category_name_valid: false,\n      filterItem: {},\n      formValid: false,\n\n\n    } \n    this.handleEditCategory = this.handleEditCategory.bind(this);\n    this.submitHandler = this.submitHandler.bind(this);\n    this.handleDeleteCategory = this.handleDeleteCategory.bind(this);\n    this.filterItemList = this.filterItemList.bind(this);\n    this.resetSearchFilter = this.resetSearchFilter.bind(this);\n  }\n\n  // Fetch the category List\n  componentDidMount() { \n    this.categoryList();\n  }\n  /*Category List API*/\n  categoryList(filterItem = {}) {\n    let filterParmas = \"\";\n    \n    \n    if(filterItem.custom !== undefined && filterItem.custom !== \"\" ) \n      filterParmas += (filterParmas !==\"\" ) ? \"&keyword=\"+filterItem.custom: \"?keyword=\"+filterItem.custom;\n    if(filterItem.status !== undefined && filterItem.status !== \"\" ) {\n      let statusText = commonService.getStatusVal(filterItem.status)\n      filterParmas += (filterParmas !==\"\" ) ? \"&status=\"+statusText: \"?status=\"+statusText;\n    }\n    this.setState( { loading: true}, () => {\n      commonService.getAPIWithAccessToken('threat'+filterParmas)\n        .then( res => {\n          \n           \n          if ( undefined === res.data.data || !res.data.status ) {\n            this.setState( {  loading: false } );\n            toast.error(res.data.message);    \n            return;\n          }   \n\n          this.setState({loading:false, categoryList: res.data.data});     \n         \n        } )\n        .catch( err => {   \n                \n          if(err.response !== undefined && err.response.status === 401) {\n            localStorage.clear();\n            this.props.history.push('/login');\n          }\n          else {\n            this.setState( { loading: false } );\n            toast.error(err.message);    \n          }\n        } )\n    } )\n  }\n  submitHandler (event) {\n    event.preventDefault();\n    event.target.className += \" was-validated\";\n    if(!this.validateForm())\n      return false;\n    let formData = {}; \n    formData.threatName = this.state.category_name;\n    let statusText = commonService.getStatusVal(this.state.status)\n    formData.status = statusText;\n    formData.remark = this.state.remark;\n    \n    this.setState( { loading: true, formProccessing: true}, () => {\n      if(this.state.rowIndex > -1){\n        /* Update Category */\n        const threatId = this.state.categoryList[this.state.rowIndex].threatId;\n        formData.threatId = threatId;\n        \n        commonService.putAPIWithAccessToken( `threat`, formData)\n          .then( res => {\n            \n           \n            \n            if ( undefined === res.data.data || !res.data.status ) { \n              let errors = {};\n              if(res.data.errors !== undefined)\n                errors = res.data.errors;\n              else\n                errors.threatName = res.data.message;\n              this.setState( { formProccessing: false, loading: false, errors: errors} );\n              return false;\n            }  \n            let updatedCategoryLists = this.state.categoryList;\n            updatedCategoryLists[this.state.rowIndex] = res.data.data;\n            this.setState({modal: false, rowIndex: \"\", formProccessing: false, loading:false});\n            toast.success(res.data.message);    \n            this.categoryList();\n          } )\n          .catch( err => {       \n              \n            if(err.response !== undefined && err.response.status === 401) {\n              localStorage.clear();\n              this.props.history.push('/login');\n            }\n            else {\n              this.setState( { formProccessing: false, loading:false } );\n              toast.error(err.message);    \n            }\n          } )\n       \n      }\n      else{\n         /* Add Category */\n        commonService.postAPIWithAccessToken( `threat`, formData)\n          .then( res => {\n            \n           \n            \n            if ( undefined === res.data.data || !res.data.status ) { \n              let errors = {};\n              if(res.data.errors !== undefined)\n                errors = res.data.errors;\n              else\n                errors.threatName = res.data.message;\n              this.setState( { formProccessing: false, loading:false, errors: errors} );\n              return false;\n            }            \n            this.setState({modal: false, formProccessing: false, loading:false});\n            toast.success(res.data.message); \n            this.categoryList();\n          } )\n          .catch( err => {\n            if(err.response !== undefined && err.response.status === 401) {\n              localStorage.clear();\n              this.props.history.push('/login');\n            }\n            else{\n              this.setState( { formProccessing: false, loading:false } );\n              toast.error(err.message); \n            }\n          } )\n      }\n    })\n  };\n  /* Input Field On changes*/\n  changeHandler = event => {\n    const name = event.target.name;\n    const value = event.target.value\n    this.setState({ [name]: value });\n  };\n  \n \n  /* Validate Form */\n  validateForm() {\n    let formValid = true;\n    let formField = this.state; \n    let errors = {};\n    if(formField.category_name === undefined || formField.category_name.trim() === \"\" ){\n      formValid = false;\n      errors['threatName'] = 'Threat type name field required';\n    }\n    if(formField.status === undefined || formField.status.trim() === \"\" ){\n      formValid = true;\n      errors['status'] = 'Status field required';\n    }\n    this.setState({errors:  errors});\n    return formValid;\n    \n  }\n  /* Set Error Class*/\n  errorClass(error) {\n    return(error.length === 0 ? '' : 'has-error');\n  }\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal,\n      category_name: \"\",\n      remark: \"\",\n      status: \"\",\n      rowIndex: -1,\n      formValid: false,\n      errors: {},\n      categoryImageUrl: \"\"\n    });\n  }\n  /* File changes handler*/\n  changeFileHandler = event => {   \n    const targetFile = event.target.files[0];\n    let formErrors = this.state.formErrors;\n    formErrors.category_image = \"\";\n    \n    if(targetFile.type !== \"image/png\" && targetFile.type !== \"image/jpeg\" && targetFile.type !== \"image/jpg\" && targetFile.type !== \"image/svg\") {\n      formErrors.category_image = \" accept only png, jpeg, jpg\";\n      this.setState({ categoryImage: targetFile, formErrors: formErrors  });\n    }\n    else\n      this.setState({ categoryImage: targetFile, formErrors: formErrors  });\n  };\n\n  /* Edit Category*/\n  handleEditCategory(rowIndex){\n   \n      const categoryItem = this.state.categoryList[rowIndex];\n      let status = \"Active\"\n      status = commonService.getStatus(categoryItem.status);\n      \n      this.setState({modal: true, status: status, category_name: categoryItem.threatName, remark: categoryItem.remark, rowIndex: rowIndex, formValid: true, category_name_valid: true, categoryImageUrl: categoryItem.imagUrl});\n  }\n  /* Add category */\n  handleDeleteCategory(rowIndex){\n   \n    const categoryItem = this.state.categoryList[rowIndex];\n   \n    this.setState( { loading: true}, () => {\n      commonService.deleteAPIWithAccessToken( `threat/`+categoryItem.threatId)\n        .then( res => {\n          this.setState({loading: false});\n          if ( undefined === res.data || !res.data.status ) {            \n             toast.error(res.data.message);      \n            return;\n          }         \n          \n          toast.success(res.data.message);\n          this.categoryList();\n        } )\n        .catch( err => {       \n            \n          if(err.response !== undefined && err.response.status === 401) {\n            localStorage.clear();\n            this.props.history.push('/login');\n          }\n          else{\n            this.setState( { loading: false } );\n            toast.error(err.message);\n          }\n      } )\n    })\n  }\n\n  filterItemList(){\n    const filterItem = this.state.filterItem;\n    this.categoryList(filterItem);\n  }\n  \n  changeFilterHandler = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    const filterItem = this.state.filterItem\n    filterItem[name] = value;\n    this.setState({ filterItem: filterItem });\n  };\n  resetSearchFilter() {\n    this.setState({filterItem: { status: '', custom: ''}});\n    this.categoryList();\n  }\n\n  render() {\n\n    const { categoryList, loading, modal, errors  } = this.state;     \n    let loaderElement ='';\n    \n    if(loading)\n      loaderElement = <Loader />\n    /*let categoryImagePreview = '';\n    if(this.state.categoryImageUrl !== \"\")\n      categoryImagePreview = <div className=\"imagePreview\"><img src={this.state.categoryImageUrl} alt=\"\" /></div>*/\n\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          \n          {loaderElement}\n          <Col lg={12}>\n            <Card className=\"\">\n                <CardHeader className=\"mainHeading\">\n                  <strong>Threat Type List</strong> \n                  <Button color=\"\" className=\"categoryAdd\" type=\"button\" onClick={this.toggle}><i className=\"fa fa-plus\"></i> Add Threat Type</Button>\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col md={12}>\n                      <Row className=\"filterRow\">                      \n                        <Col md={\"3\"}>\n                          <FormGroup> \n                            <Label htmlFor=\"filter_doctor_id\">Search By Name</Label>            \n                            <Input type=\"text\" placeholder=\"Search By Name\" id=\"custom\" name=\"custom\" value={this.state.filterItem.custom} onChange={this.changeFilterHandler} />\n                          </FormGroup>  \n                        </Col>\n                        <Col md={\"3\"}>\n                          <FormGroup> \n                            <Label htmlFor=\"filter_doctor_id\">Search By Status</Label>            \n                            <Input type=\"select\" placeholder=\"Search By Status\" id=\"status\" name=\"status\" value={this.state.filterItem.status} onChange={this.changeFilterHandler}>\n                                <option value = \"\">Select</option>\n                                <option value=\"Active\">Active</option>\n                                <option value=\"Inactive\">Inactive</option>\n                            </Input>\n                          </FormGroup>  \n                        </Col>\n                        <Col md={\"1\"} className=\"p-0\">\n                          <FormGroup> \n                            <Label>&nbsp;</Label><br />\n                            <Button color=\"success\" type=\"button\" size=\"sm\" onClick={this.filterItemList}><i className=\"fa fa-search\"></i></Button>&nbsp;\n                            <Button color=\"danger\" type=\"reset\" size=\"sm\" onClick={this.resetSearchFilter}><i className=\"fa fa-refresh\"></i></Button>\n                          </FormGroup>             \n                        </Col>\n                      </Row> \n                       \n                    </Col>       \n                    <Col lg= {12}>   \n                      <ThreatTypeData data={categoryList} toggle={this.toggle} editCategoryAction={this.handleEditCategory} deleteCategoryAction={this.handleDeleteCategory} dataTableLoadingStatus = {this.state.loading} />\n                    </Col> \n                  </Row>\n                </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Modal isOpen={modal} toggle={this.toggle} className=\"category-modal-section\">\n          <ModalHeader toggle={this.toggle}>Threat Type</ModalHeader>\n          <Form onSubmit={this.submitHandler} noValidate>\n            <ModalBody>\n              <FormGroup> \n                <Label htmlFor=\"category_name\">Threat Type Name</Label>            \n                <Input type=\"text\" placeholder=\"Threat Type Name *\" invalid={errors['threatName'] !== undefined && errors['threatName'] !== \"\"} id=\"category_name\" name=\"category_name\" value={this.state.category_name} onChange={this.changeHandler} required />\n                <div className=\"invalid-feedback\">\n                  {errors['threatName']}\n                </div>\n              </FormGroup>\n              \n              <FormGroup>\n                <Label htmlFor=\"template_status\">Status</Label>            \n                <Input type=\"select\" placeholder=\"Status *\" invalid={errors['status'] !== undefined && errors['status'] !== \"\"} id=\"status\" name=\"status\" value={this.state.status} onChange={this.changeHandler} required >\n                  <option value=\"\">Select Status</option>\n                  <option value=\"Active\">Active</option>\n                  <option value=\"Inactive\">Inactive</option>\n                  \n                </Input>\n                <div className=\"invalid-feedback\">\n                  {errors['status']}\n                </div>\n              </FormGroup>\n               \n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" disabled={this.state.formProccessing} type=\"submit\">Submit</Button>\n              <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n            </ModalFooter>\n          </Form>\n        </Modal>\n      </div>\n\n    )\n  }\n}\n\nexport default ThreatType;\n","import React, { Component } from 'react';\r\nimport  { Link } from 'react-router-dom';\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nclass OrganizationData extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: [],\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n  \r\n  editOrganizationItem(rowIndex){    \r\n    this.props.editOrganizationAction(rowIndex);\r\n  }\r\n  deleteOrganizationItem(rowIndex){    \r\n    this.props.deleteOrganizationAction(rowIndex);\r\n  }\r\n  \r\n  render() {\r\n   \r\n    let rowsItem = [];    \r\n    for(const [i, orgnization] of this.props.data.entries()){\r\n      console.log(i);\r\n      let orgInfo = {\r\n        organizationName: orgnization.organizationName,\r\n        authId: orgnization.authId,\r\n        firstName: orgnization.firstName +' '+ orgnization.lastName,\r\n        email: orgnization.email,\r\n        phoneNumber: orgnization.phoneNumber || \" \",\r\n        address: orgnization.address || \" \",\r\n        createdAt: (new Date(orgnization.createdAt)).toLocaleDateString(\"en-US\"),\r\n        status: orgnization.status ? \"Active\" : \"Inactive\",   \r\n      }      \r\n      rowsItem.push(orgInfo);\r\n    }      \r\n    const columns = [      \r\n      {\r\n        label: 'User Name',\r\n        name: 'firstName',\r\n      },\r\n      {\r\n        label: 'Organization',\r\n        name: 'organizationName',\r\n      },\r\n      {\r\n        label: 'Email ID',\r\n        name: 'email',\r\n      },\r\n      {\r\n        label: 'Phone no.',\r\n        name: 'phoneNumber',\r\n      },\r\n      {\r\n        label: 'Address',\r\n        name: 'address',\r\n      },\r\n      {\r\n        label: 'Registered on',\r\n        name: 'createdAt',\r\n      },\r\n      {\r\n        label: 'Status',\r\n        name: 'status',\r\n      },\r\n      {\r\n        label: 'Action',\r\n        name: 'action',\r\n        options: {\r\n          filter: false,\r\n          sort: false,\r\n          download: false,\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            let i = tableMeta.rowIndex;\r\n            return (\r\n              <p><button className=\"btn-edit\" disabled={this.state.buttonProcessing} onClick={() => \r\n                this.editOrganizationItem(i)}><i className=\"fa fa-pencil\"></i> </button>\r\n                <Link className=\"btn-view\" to={`/admin/organization/user?organizationId=${rowsItem[i].authId}`} title=\"Company User\"><i className=\"fa fa-user\"></i> </Link>\r\n                <Link className=\"btn-view\" to={`/admin/organization/employee?organizationId=${rowsItem[i].authId}`} title=\"Company Employee\"><i className=\"fa fa-users\"></i> </Link>\r\n                <a href=\"#!\" className=\"btn-delete\" disabled={this.state.buttonProcessing} onClick={() => { if(window.confirm('Are you sure you want to delete this record?')){ this.deleteOrganizationItem(i) };}} ><i className=\"fa fa-trash\"></i></a></p>\r\n            );\r\n          }\r\n        }\r\n      },\r\n    ];\r\n    const options = {\r\n      search: true,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      download: true,\r\n      downloadOptions: {filename: 'va-client-list.csv', separator: ','},\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Loading........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      fixedHeaderOptions: { xAxis: false, yAxis: false }\r\n\r\n    };\r\n    \r\n    \r\n    return (\r\n      <MUIDataTable\r\n        title={\"Organization List\"}\r\n        data={rowsItem}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrganizationData;","import React, { Component } from 'react';\r\nimport { Card, CardBody, CardHeader, Col, Row, Button, Form, Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../core/services/commonService';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport Loader from '../../Loader/Loader';\r\nimport OrganizationData from './OrganizationData';\r\nimport './Organization.css'\r\n\r\nclass Organization extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      modal: false,      \r\n      organizationList: [],\r\n      loading: true,\r\n      rowIndex: -1,\r\n      changeStatusBtn:'',\r\n      formProccessing: false,\r\n      formField: {organizationName: '', email: '', firstName: '', lastName: '', mobileNumber:'', phoneNumber: '', address: '', address2:'', city:'', state:'', country:'', postalCode:'' },\r\n      errors: {organizationName: '', email: '', firstName: '', lastName: '', error: ''},\r\n      formValid: false,\r\n      filterItem: { filter_organization_id: '', filterOrgName: '', filterLocation: '', filterFrom:'',  filterTo:'', filterStatus:'', custom_search: ''},\r\n    } \r\n    this.handleEditOrganization = this.handleEditOrganization.bind(this);\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    this.handleDeleteOrganization = this.handleDeleteOrganization.bind(this);\r\n    this.filterOragnizationList = this.filterOragnizationList.bind(this);\r\n  }\r\n  // Fetch the organization List\r\n  componentDidMount() { \r\n    this.organizationList();\r\n  }\r\n  /*organization List API*/\r\n  organizationList(filterItem = {}) {\r\n    let organizationQuery = \"\";\r\n    console.log(filterItem);\r\n    if(filterItem.filterOrgName !== undefined && filterItem.filterOrgName !== \"\" ) \r\n      organizationQuery += (organizationQuery !==\"\" ) ? \"&organizationName=\"+filterItem.filterOrgName: \"?organizationName=\"+filterItem.filterOrgName;\r\n    if(filterItem.filterLocation !== undefined && filterItem.filterLocation !== \"\" ) \r\n      organizationQuery += (organizationQuery !==\"\" ) ? \"&location=\"+filterItem.filterLocation: \"?location=\"+filterItem.filterLocation;\r\n    if(filterItem.custom_search !== undefined && filterItem.custom_search !== \"\" ) \r\n      organizationQuery += (organizationQuery !==\"\" ) ? \"&emailOrName=\"+filterItem.custom_search: \"?emailOrName=\"+filterItem.custom_search;\r\n    if(filterItem.filterFrom !== undefined && filterItem.filterFrom !== \"\" ){\r\n      let newFromDate = this.getFormatDate( filterItem.filterFrom );\r\n      organizationQuery += (organizationQuery !==\"\" ) ? \"&start_date=\"+newFromDate : \"?start_date=\"+newFromDate;\r\n    }\r\n    if(filterItem.filterTo !== undefined && filterItem.filterTo !== \"\" ){\r\n      let newToDate = this.getFormatDate( filterItem.filterTo );\r\n      organizationQuery += (organizationQuery !==\"\" ) ? \"&end_date=\"+newToDate: \"?end_date=\"+newToDate;\r\n    }\r\n    if(filterItem.filterStatus !== undefined && filterItem.filterStatus !== \"\" ) \r\n      organizationQuery += (organizationQuery !==\"\" ) ? \"&status=\"+filterItem.filterStatus: \"?status=\"+filterItem.filterStatus;\r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('organization'+organizationQuery)\r\n        .then( res => {\r\n           \r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }   \r\n\r\n          this.setState({loading:false, organizationList: res.data.data});     \r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    } )\r\n  }\r\n  /* Submit Form Handler*/\r\n  submitHandler (event) {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n    if(this.validateForm())\r\n      return false;\r\n    \r\n    this.setState( { formProccessing: true}, () => {\r\n      const formInputField = this.state.formField;\r\n      const formData = {\r\n        \"email\": formInputField.email,\r\n        \"firstName\": formInputField.firstName, \r\n        \"lastName\": formInputField.lastName, \r\n        \"mobileNumber\": formInputField.mobileNumber, \r\n        \"phoneNumber\": formInputField.phoneNumber, \r\n        \"organizationName\": formInputField.organizationName,\r\n        \"address\": formInputField.address,\r\n        \"address2\": formInputField.address2,\r\n        \"city\": formInputField.city,\r\n        \"state\": formInputField.state,\r\n        \"country\": formInputField.country,\r\n        \"postalCode\": formInputField.postalCode\r\n      };\r\n      \r\n      /*if(this.state.address)\r\n        formData['address'] = this.state.address;\r\n      \r\n      if(this.state.address2)\r\n        formData['address2'] = this.state.address2;\r\n      \r\n      if(this.state.country)\r\n        formData['country'] = this.state.country;*/\r\n      \r\n      const rowIndex = this.state.rowIndex;\r\n      if(rowIndex > -1) {\r\n       const organizationInfo = this.state.organizationList[rowIndex];\r\n       formData['organizationId'] = organizationInfo.organizationId;\r\n        commonService.putAPIWithAccessToken('organization/'+organizationInfo.organizationId, formData)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {           \r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          this.setState({ modal: false, formProccessing: false});\r\n          toast.success(res.data.message);\r\n          this.organizationList();\r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n      }\r\n      else{\r\n        commonService.postAPIWithAccessToken('organization', formData)\r\n        .then( res => {           \r\n          if ( undefined === res.data.data || !res.data.status ) { \r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          this.setState({ modal: false});\r\n          toast.success(res.data.message);\r\n          this.organizationList();        \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n      }\r\n    } );\r\n    \r\n  };\r\n  /* Input Field On changes*/\r\n  changeHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const formField = this.state.formField\r\n    formField[name] = value;\r\n    this.setState({ formField: formField });\r\n  };\r\n  \r\n  \r\n /* Validate Form */\r\n  validateForm() {\r\n    let formValid = false;\r\n    let formField = this.state.formField; \r\n    let errors = {};\r\n    var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n    if(formField.firstName === undefined || formField.firstName.trim() === \"\"){\r\n      formValid = true;\r\n      errors['firstName'] = \"First name field required!\";\r\n    }\r\n    if(formField.organizationName === undefined || formField.organizationName.trim() === \"\"){\r\n      formValid = true;\r\n      errors['organizationName'] = \"Organization field required!\";\r\n    }\r\n    if(formField.email === undefined || formField.email.trim() === \"\"){\r\n      formValid = true;\r\n      errors['email'] = \"Email field required!\";\r\n    }\r\n    else if(!(pattern.test(formField.email))){\r\n      formValid = true;\r\n      errors['email'] = \"Invalid email format\";\r\n    }\r\n    \r\n    this.setState({errors:  errors});\r\n    return formValid;\r\n    \r\n  }\r\n  /* Set Error Class*/\r\n  errorClass(error) {\r\n    return(error.length === 0 ? '' : 'has-error');\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      rowIndex: -1,\r\n      changeStatusBtn: '',\r\n      formValid: false,\r\n      formField: {organizationName: '', email: '', firstName: '', lastName: '', mobileNumber:'', phoneNumber: '', address: '', address2:'', city:'', state:'', country:'', postalCode:'' },\r\n      errors: {organizationName: '', email: '', firstName: '', lastName: '', error: ''}\r\n    });\r\n  }\r\n  /* Edit organization*/\r\n  handleEditOrganization(rowIndex){\r\n      const organizationInfo = this.state.organizationList[rowIndex];\r\n      const formField = {\r\n        organizationName: organizationInfo.organizationName,\r\n        email: organizationInfo.email, \r\n        firstName: organizationInfo.firstName, \r\n        lastName: organizationInfo.lastName, \r\n        phoneNumber: organizationInfo.phoneNumber,\r\n        mobileNumber: organizationInfo.mobileNumber,\r\n        address: organizationInfo.address,\r\n        address2: organizationInfo.address2,\r\n        city: organizationInfo.city,\r\n        state: organizationInfo.state,\r\n        country: organizationInfo.country,\r\n        postalCode: organizationInfo.postalCode\r\n      };\r\n      const statusBtn = <Button type=\"button\" size=\"sm\" className={`changeStatusBtn `+( organizationInfo.status ? 'btn-danger' : 'btn-success' )} onClick={() => \r\n        this.changeProfileStatus(organizationInfo.profileId, organizationInfo.status )} >{ ( organizationInfo.status ? 'De-Activate Account' : 'Activate Account' )}</Button>\r\n      \r\n      this.setState({rowIndex: rowIndex, formField: formField, modal: true, changeStatusBtn:statusBtn, formValid: true});\r\n  }\r\n\r\n  /* Change Profile status*/\r\n  changeProfileStatus(profileId,status){\r\n    this.setState( { loading: true}, () => {\r\n      const formData = {\r\n        \"profileId\": profileId,\r\n        \"status\": (status ? false : true ),\r\n      };\r\n      commonService.putAPIWithAccessToken('organization/status', formData)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {           \r\n            this.setState( { loading: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          this.setState({ modal: false, loading: false});\r\n          toast.success(res.data.message);\r\n          this.organizationList();        \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n        } )\r\n    } );\r\n  }\r\n\r\n  /* Delete organization*/\r\n  handleDeleteOrganization(rowIndex){\r\n\r\n    const orgInfo = this.state.organizationList[rowIndex];\r\n    //console.log(orgInfo);return;\r\n    let formdata = { \"profileId\":orgInfo.profileId }\r\n\r\n    this.setState( { loading: true}, () => {\r\n      commonService.deleteAPIWithAccessToken( 'organization',formdata)\r\n        .then( res => {\r\n          this.setState({loading: false});\r\n          if ( undefined === res.data || !res.data.status ) {            \r\n             toast.error(res.data.message);      \r\n            return;\r\n          }         \r\n          toast.success(res.data.message);\r\n          this.organizationList();\r\n        } )\r\n        .catch( err => {       \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n      } )\r\n    })\r\n    \r\n  }\r\n  filterOragnizationList(){\r\n    const filterItem = this.state.filterItem;\r\n    this.organizationList(filterItem);\r\n  }\r\n  \r\n  changeFilterHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const filterItem = this.state.filterItem\r\n    filterItem[name] = value;\r\n    this.setState({ filterItem: filterItem });\r\n  };\r\n  \r\n\r\n  setFilterFromDate = date => {\r\n    let filterFormField = this.state.filterItem;\r\n    filterFormField.filterFrom = date;\r\n    this.setState({ filterItem: filterFormField });\r\n  };\r\n  setFilterToDate = date => {\r\n    let filterFormField = this.state.filterItem;\r\n    filterFormField.filterTo = date;\r\n    this.setState({ filterItem: filterFormField });\r\n  };\r\n\r\n  resetfilterOragnization = () => {\r\n    this.setState({\r\n      filterItem: { filter_organization_id: '', filterOrgName: '', filterMobile: '', filterFrom:'',  filterTo:'', filterStatus:'', custom_search: ''}\r\n    });\r\n    this.organizationList();\r\n  }\r\n  \r\n  getFormatDate(date) {\r\n    var year = date.getFullYear().toString();\r\n    var month = (date.getMonth() + 101).toString().substring(1);\r\n    var day = (date.getDate() + 100).toString().substring(1);\r\n    return year + \"-\" + month + \"-\" + day;\r\n  }\r\n\r\n  render() {\r\n    \r\n    const { organizationList, loading, modal, formProccessing, changeStatusBtn, filterItem, errors } = this.state;     \r\n    let loaderElement = '';\r\n    if(loading)        \r\n      loaderElement = <Loader />\r\n    const processingBtnText = <>Submit <i className=\"fa fa-spinner\"></i></>;\r\n    \r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          \r\n          {loaderElement}\r\n          <Col lg={12}>\r\n            <Card>\r\n              <CardHeader className=\"mainHeading\">\r\n                <strong>Organization List</strong>\r\n                <Button color=\"primary\" className=\"categoryAdd\" type=\"button\" onClick={this.toggle}><i className=\"fa fa-plus\"></i> Add New Organization</Button>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <Row className=\"filterRow\">                      \r\n                      <Col md={\"2\"} className=\"pl-3\">\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"filterOrgName\">Organization</Label>\r\n                          <Input id=\"filterOrgName\" name=\"filterOrgName\" placeholder=\"Organization Name\" value={this.state.filterItem.filterOrgName}  onChange={this.changeFilterHandler} />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"custom_search\">Email ID / Name</Label>\r\n                          <Input type=\"text\" placeholder=\"Search By Email ID / Name\" id=\"custom_search\" name=\"custom_search\" value={this.state.filterItem.custom_search} onChange={this.changeFilterHandler} />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      \r\n                      <Col md={\"1\"}>\r\n                        <FormGroup> \r\n                          <Label>Status</Label>\r\n                          <Input type=\"select\" name=\"filterStatus\" value={filterItem.filterStatus} onChange={this.changeFilterHandler}>\r\n                            <option value=\"\">All</option>\r\n                            <option value=\"1\">Active</option>\r\n                            <option value=\"0\">Inactive</option>\r\n                          </Input>\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      {/*<Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label>Date From</Label>\r\n                          <DatePicker className=\"form-control\" selected={ filterItem.filterFrom } onChange={this.setFilterFromDate} dateFormat=\"MM/dd/yyyy\" />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label>Date To</Label>\r\n                          <DatePicker className=\"form-control\" selected={ filterItem.filterTo } onChange={this.setFilterToDate} dateFormat=\"MM/dd/yyyy\" />\r\n                        </FormGroup>  \r\n                      </Col>*/}\r\n                      <Col md={\"1\"} className=\"p-0\">\r\n                        <FormGroup> \r\n                          <Label>&nbsp;</Label><br />\r\n                          <Button color=\"success\" type=\"button\" size=\"sm\" onClick={this.filterOragnizationList}><i className=\"fa fa-search\"></i></Button>&nbsp;\r\n                          <Button color=\"danger\" type=\"reset\" size=\"sm\" onClick={this.resetfilterOragnization}><i className=\"fa fa-refresh\"></i></Button>\r\n                        </FormGroup>             \r\n                      </Col>\r\n                    </Row>  \r\n                  </Col>\r\n                  <Col lg={12}>\r\n                    <OrganizationData data={organizationList} editOrganizationAction={this.handleEditOrganization} deleteOrganizationAction={this.handleDeleteOrganization} dataTableLoadingStatus = {this.state.loading} />\r\n                  </Col>  \r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Modal isOpen={modal} toggle={this.toggle} className=\"full-width-modal-section organization-modal\">\r\n          <ModalHeader toggle={this.toggle}>Organization Info</ModalHeader>\r\n          <Form onSubmit={this.submitHandler} noValidate>\r\n            <ModalBody>\r\n              \r\n              <Row>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"firstName\">First Name</Label>            \r\n                    <Input type=\"text\" placeholder=\"First Person *\" id=\"firstName\" name=\"firstName\" value={this.state.formField.firstName} onChange={this.changeHandler} required />\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['firstName']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"lastName\">Last Name</Label>            \r\n                    <Input type=\"text\" placeholder=\"Last Person\" id=\"lastName\" name=\"lastName\" value={this.state.formField.lastName} onChange={this.changeHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"organizationName\">Organization Name</Label>            \r\n                    <Input type=\"text\" placeholder=\"Organization Name *\" id=\"organizationName\" name=\"organizationName\" value={this.state.formField.organizationName} onChange={this.changeHandler} required />\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['organizationName']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>  \r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"email\">Email</Label>            \r\n                    <Input type=\"text\" placeholder=\"Email *\" id=\"email\" name=\"email\" value={this.state.formField.email} onChange={this.changeHandler} required />\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['email']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n                \r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"phoneNumber\">Phone Number</Label>            \r\n                    <Input type=\"number\" placeholder=\"Phone Number\" id=\"phoneNumber\" name=\"phoneNumber\" value={this.state.formField.phoneNumber} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"address\">Street Address </Label>            \r\n                    <Input type=\"text\" placeholder=\"Street Address\" id=\"address\" name=\"address\" value={this.state.formField.address} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                \r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"city\">City </Label>            \r\n                    <Input type=\"text\" placeholder=\"City\" id=\"city\" name=\"city\" value={this.state.formField.city} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup>\r\n                    <Label htmlFor=\"state\">State</Label>            \r\n                    <Input type=\"text\" placeholder=\"State\" id=\"state\" name=\"state\" value={this.state.formField.state} onChange={this.changeHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"postalCode\">Postal Code </Label>            \r\n                    <Input type=\"text\" placeholder=\"Postal Code\" id=\"postalCode\" name=\"postalCode\" value={this.state.formField.postalCode} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"country\">Country </Label>            \r\n                    <Input type=\"text\" placeholder=\"Country\" id=\"country\" name=\"country\" value={this.state.formField.country} onChange={this.changeHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>           \r\n            </ModalBody>\r\n            <ModalFooter>\r\n              {changeStatusBtn}\r\n              <Button color=\"primary\" disabled={formProccessing} type=\"submit\">{formProccessing ? processingBtnText : 'Save Changes' }</Button>\r\n              <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Organization;\r\n","import React, { Component } from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport commonService from '../../../../core/services/commonService';\r\nclass EmployeeData extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: []\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n  /* Edit Employee Info */\r\n  editEmployeeItem(rowIndex){    \r\n    this.props.editEmployeeAction(rowIndex);\r\n  }\r\n\r\n  deleteEmployeeItem(rowIndex){    \r\n    this.props.deleteEmployeeAction(rowIndex);\r\n  }\r\n\r\n  render() {\r\n    \r\n    let rowsItem = [];    \r\n    for(const [i, employee] of this.props.data.entries()){\r\n      console.log(i);\r\n      let orgInfo = {   \r\n        organizationName: employee.organizationName,      \r\n        firstName: `${employee.firstName} ${employee.lastName}`,\r\n        email: employee.email,\r\n        roleName: employee.roleName || \" \",\r\n        phoneNumber: employee.phoneNumber || \" \",\r\n        address: employee.address || \" \",\r\n        city: employee.city || \" \",      \r\n        state: employee.state || \" \",\r\n        country: employee.country || \" \",\r\n        status: commonService.getStatus(employee.status),   \r\n        action: \"\",       \r\n      }      \r\n      rowsItem.push(orgInfo);\r\n    }      \r\n    \r\n    const columns = [ \r\n      {\r\n        label: 'Employee Name',\r\n        name: 'firstName',\r\n      },     \r\n      {\r\n        label: 'Organization Name',\r\n        name: 'organizationName',\r\n      },\r\n      \r\n      {\r\n        label: 'Email',\r\n        name: 'email',\r\n      },\r\n      {\r\n        label: 'Phone Number',\r\n        name: 'phoneNumber',\r\n      },\r\n      {\r\n        label: 'Status',\r\n        name: 'status',\r\n      },\r\n      {\r\n        label: 'Action',\r\n        name: 'action',\r\n        options: {\r\n          filter: true,\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            let i = tableMeta.rowIndex;\r\n           \r\n            return (\r\n             <p><button className=\"btn-edit\" disabled={this.state.buttonProcessing} onClick={() => \r\n              this.editEmployeeItem(i)}><i className=\"fa fa-pencil\"></i> </button>\r\n              <button className=\"btn-delete\" disabled={this.state.buttonProcessing} onClick={() => {if( window.confirm('Are you sure you wish to delete this employee?'))\r\n              this.deleteEmployeeItem(i)}}><i className=\"fa fa-trash\"></i></button></p>\r\n            );\r\n          },\r\n        }\r\n      },\r\n    ];\r\n    const options = {\r\n      search: true,viewColumns: false,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      download: true,\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Processing........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      fixedHeaderOptions: { xAxis: false, yAxis: false }\r\n\r\n    };\r\n    \r\n    return (\r\n      <MUIDataTable\r\n        title={\"Employee User\"}\r\n        data={rowsItem}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeeData;","import React, { Component } from 'react';\r\nimport { Card, CardBody, CardHeader, Col, Row, Button, Form, Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../../core/services/commonService';\r\nimport Loader from '../../../Loader/Loader';\r\nimport EmployeeData from './EmployeeData';\r\nimport './Employee.css'\r\nconst queryString = require('query-string');\r\nclass Employee extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      modal: false,      \r\n      EmployeeList: [],\r\n      organizationList: [],\r\n      loading: true,\r\n      formProccessing: false,\r\n      rowIndex: -1,\r\n      formField: { organizationId: '', email: '', firstName: '',lastName: '', phoneNumber: '', address: '', city: '', state: '', country: '', postalCode: '', role: '', status: '' },\r\n      errors: { email: '', employee_name: '', role: '', error: ''},\r\n      formValid: true,\r\n      filterItem: { filter_organization_id: '', country: '', state: '', custom_search: ''},\r\n    } \r\n    this.handleEditEmployee = this.handleEditEmployee.bind(this);\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    this.handleDeleteEmployee = this.handleDeleteEmployee.bind(this);\r\n    this.filterEmployeeList = this.filterEmployeeList.bind(this);\r\n    this.resetSearchFilter = this.resetSearchFilter.bind(this);\r\n    \r\n  }\r\n  \r\n  // Fetch the Employee List\r\n  componentDidMount() { \r\n    \r\n    const queryParams = queryString.parse(this.props.location.search);\r\n    if( queryParams.organizationId !== undefined) {     \r\n      let filterItem = this.state.filterItem;\r\n      filterItem.filter_organization_id = queryParams.organizationId;\r\n      this.setState({filterItem: filterItem});\r\n    }\r\n    this.EmployeeList(this.state.filterItem);\r\n    this.organizationList();\r\n    \r\n  }\r\n  /*Employee List API*/\r\n  EmployeeList(filterItem={}) {\r\n    let stroreWalkQuery = \"\";\r\n    if(filterItem.filter_organization_id !== undefined && filterItem.filter_organization_id !== \"\" ) \r\n      stroreWalkQuery += (stroreWalkQuery !==\"\" ) ? \"&organizationId=\"+filterItem.filter_organization_id: \"?organizationId=\"+filterItem.filter_organization_id;\r\n    if(filterItem.custom_search !== undefined && filterItem.custom_search !== \"\" ) \r\n      stroreWalkQuery += (stroreWalkQuery !==\"\" ) ? \"&keyword=\"+filterItem.custom_search: \"?keyword=\"+filterItem.custom_search;\r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('employee'+stroreWalkQuery)\r\n        .then( res => {\r\n          \r\n           \r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }   \r\n\r\n          this.setState({loading:false, EmployeeList: res.data.data});     \r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    } )\r\n  }\r\n\r\n  /*Organization List API*/\r\n  organizationList() {   \r\n    \r\n    commonService.getAPIWithAccessToken('organization')\r\n      .then( res => {       \r\n         \r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n          this.setState( { loading: false } );\r\n          toast.error(res.data.message);\r\n          return;\r\n        }   \r\n\r\n        this.setState({loading:false, organizationList: res.data.data});     \r\n       \r\n      } )\r\n      .catch( err => {         \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.history.push('/login');\r\n        }\r\n        else \r\n          this.setState( { loading: false } );\r\n      } )\r\n    \r\n  }\r\n  filterEmployeeList(){\r\n    const filterItem = this.state.filterItem;\r\n    this.EmployeeList(filterItem);\r\n  }\r\n  /* Submit Form Handler*/\r\n  submitHandler (event) {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n    if(this.validateForm())\r\n      return false;\r\n    this.setState( { formProccessing: true}, () => {\r\n      const formInputField = this.state.formField;\r\n      let statusText = commonService.getStatusVal(formInputField.status)\r\n    \r\n      const formData = {\r\n        \"email\": formInputField.email,\r\n        \"firstName\": formInputField.firstName, \r\n        \"lastName\": formInputField.lastName, \r\n        \"phoneNumber\": formInputField.phoneNumber, \r\n        \"address\": formInputField.address, \r\n        \"roleName\": formInputField.role, \r\n        \"city\": formInputField.city, \r\n        \"state\": formInputField.state, \r\n        \"country\": formInputField.country, \r\n        \"postalCode\": formInputField.postalCode, \r\n        \"employeeName\": formInputField.firstName,\r\n        \"organizationAuthId\": formInputField.organizationId,\r\n        \"status\": statusText\r\n      };\r\n      const rowIndex = this.state.rowIndex;\r\n      if(rowIndex > -1) {\r\n        const employeeInfo = this.state.EmployeeList[rowIndex];\r\n\r\n        commonService.putAPIWithAccessToken('employee/'+employeeInfo.profileId, formData)\r\n        .then( res => {\r\n          \r\n           \r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n           \r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          \r\n          this.setState({ modal: false, formProccessing: false});\r\n          toast.success(res.data.message);\r\n          this.EmployeeList(this.state.filterItem);\r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n        } )\r\n      }\r\n      else{\r\n        commonService.postAPIWithAccessToken('employee', formData)\r\n        .then( res => {\r\n         \r\n          if ( undefined === res.data.data || !res.data.status ) { \r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          \r\n          this.setState({ modal: false});\r\n          toast.success(res.data.message);\r\n          this.EmployeeList(this.state.filterItem);\r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n        } )\r\n      }\r\n    } );\r\n    \r\n  };\r\n  /* Input Field On changes*/\r\n  changeHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const formField = this.state.formField\r\n    formField[name] = value;\r\n    this.setState({ formField: formField });\r\n  };\r\n\r\n  changeFilterHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const filterItem = this.state.filterItem\r\n    filterItem[name] = value;\r\n    this.setState({ filterItem: filterItem });\r\n  };\r\n  \r\n  /* Validate Form Field */\r\n  \r\n  \r\n  /* Validate Form */\r\n  validateForm() {\r\n    let formValid = false;\r\n    let formField = this.state.formField; \r\n    let errors = {};\r\n    var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n    if(formField.firstName === undefined || formField.firstName.trim() === \"\"){\r\n      formValid = true;\r\n      errors['firstName'] = \"First name field required!\";\r\n    }\r\n    if(formField.organizationId === undefined || formField.organizationId.trim() === \"\"){\r\n      formValid = true;\r\n      errors['organizationId'] = \"Organization field required!\";\r\n    }\r\n    if(formField.email === undefined || formField.email.trim() === \"\"){\r\n      formValid = true;\r\n      errors['email'] = \"Email field required!\";\r\n    }\r\n    else if(!(pattern.test(formField.email))){\r\n      formValid = true;\r\n      errors['email'] = \"Invalid email format\";\r\n    }\r\n    if(formField.status === undefined || formField.status.trim() === \"\" ){\r\n      formValid = true;\r\n      errors['status'] = 'Status field required';\r\n    }\r\n    this.setState({errors:  errors});\r\n    return formValid;\r\n    \r\n  }\r\n  /* Set Error Class*/\r\n  errorClass(error) {\r\n    return(error.length === 0 ? '' : 'has-error');\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      rowIndex: -1,\r\n      formValid: false,\r\n      formProccessing : false,\r\n      formField: {email: '', firstName: '', lastName:'', phoneNumber: '', address: '', city: '', state: '', country: '', postalCode: '', role: '' },\r\n      errors: {email: '', employee_name: '', role: '', error: ''}\r\n    });\r\n  }\r\n  /* Edit Employee*/\r\n  handleEditEmployee(rowIndex){\r\n      const employeeInfo = this.state.EmployeeList[rowIndex];\r\n      let status = \"Active\"\r\n      status = commonService.getStatus(employeeInfo.status);\r\n      const formField = {\r\n        organizationId: employeeInfo.organizationAuthId,        \r\n        email: employeeInfo.email, \r\n        firstName: employeeInfo.firstName,\r\n        lastName: employeeInfo.lastName, \r\n        phoneNumber: employeeInfo.phoneNumber, \r\n        address: employeeInfo.address, \r\n        city: employeeInfo.city, \r\n        state: employeeInfo.state, \r\n        country: employeeInfo.country, \r\n        postalCode: employeeInfo.postalCode, \r\n        role: employeeInfo.roleName,\r\n        status: status };\r\n      this.setState({rowIndex: rowIndex, formField: formField, formProccessing : false, modal: true, formValid: true});\r\n  }\r\n  /* Delete Employee*/\r\n  handleDeleteEmployee(rowIndex){\r\n   \r\n    const employeeInfo = this.state.EmployeeList[rowIndex];\r\n    \r\n    this.setState( { loading : true}, () => {   \r\n      commonService.deleteAPIWithAccessToken('employee', {employeeId: employeeInfo.profileId})\r\n      .then( res => {\r\n        \r\n         \r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n         \r\n          this.setState( { loading : false} );\r\n          toast.error(res.data.message);\r\n          return;\r\n        } \r\n        \r\n        this.setState({ modal: false, loading : false});\r\n        toast.success(res.data.message);\r\n        this.EmployeeList();\r\n       \r\n      } )\r\n      .catch( err => {         \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.history.push('/login');\r\n        }\r\n        else\r\n          this.setState( { loading : false } );\r\n          toast.error(err.message);\r\n      } )\r\n    } );\r\n   \r\n    \r\n  }\r\n \r\n  resetSearchFilter() {\r\n    this.setState({filterItem: {filter_organization_id: \"\", custom_search: \"\" }});\r\n    this.EmployeeList();\r\n  }\r\n  render() {\r\n\r\n    const { EmployeeList, loading, modal, formProccessing, organizationList, errors } = this.state;     \r\n    let loaderElement = '';\r\n    if(loading)        \r\n      loaderElement = <Loader />\r\n\r\n    const processingBtnText = <>Submit <i className=\"fa fa-spinner\"></i></>;\r\n    \r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          \r\n          {loaderElement}\r\n          <Col lg={12}>\r\n            <Card className=\"oep-card\">\r\n              <CardHeader className=\"mainHeading\">\r\n                <strong>Employee User List</strong> <Button color=\"primary\" className=\"categoryAdd\" type=\"button\" onClick={this.toggle}><i className=\"fa fa-plus\"></i> Add New</Button>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <Row className=\"filterRow\"> \r\n                \r\n                      <Col md={\"2\"} className=\"pl-3\">\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filter_organization_id\">Organization</Label>            \r\n                          <Input type=\"select\" placeholder=\"Organization *\" id=\"filter_organization_id\" name=\"filter_organization_id\" value={this.state.filterItem.filter_organization_id} onChange={this.changeFilterHandler} >\r\n                            <option value=\"\">Select</option>\r\n                            {organizationList.map((organizationInfo, index) =>\r\n                              <SetOrganizationDropDownItem key={index} organizationInfo={organizationInfo} />\r\n                            )}\r\n                          </Input>\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      \r\n                      <Col md={\"3\"}>\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filter_organization_id\">Search By Email/ Name</Label>            \r\n                          <Input type=\"text\" placeholder=\"Search By Email/ Name\" id=\"custom_search\" name=\"custom_search\" value={this.state.formField.custom_search} onChange={this.changeFilterHandler} />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"1\"} className=\"p-0\">\r\n                        <FormGroup> \r\n                          <Label>&nbsp;</Label><br />\r\n                          <Button color=\"success\" type=\"button\" size=\"sm\" onClick={this.filterEmployeeList}><i className=\"fa fa-search\"></i></Button>&nbsp;\r\n                          <Button color=\"danger\" type=\"reset\" size=\"sm\" onClick={this.resetSearchFilter}><i className=\"fa fa-refresh\"></i></Button>\r\n                        </FormGroup>             \r\n                      </Col>\r\n                    </Row> \r\n                  </Col>\r\n                  <Col md={12}>\r\n                    <EmployeeData data={EmployeeList} editEmployeeAction={this.handleEditEmployee} deleteEmployeeAction={this.handleDeleteEmployee} dataTableLoadingStatus = {this.state.loading} />\r\n                  </Col>\r\n                </Row> \r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Modal isOpen={modal} toggle={this.toggle} className=\"full-width-modal-section employee-modal\">\r\n          <ModalHeader toggle={this.toggle}>Company Employee User</ModalHeader>\r\n          <Form onSubmit={this.submitHandler} noValidate>\r\n            <ModalBody>\r\n              \r\n              <Row>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"organizationId\">Organization Name</Label>            \r\n                    <Input type=\"select\" placeholder=\"Organization Name *\" id=\"organizationId\" name=\"organizationId\" value={this.state.formField.organizationId} onChange={this.changeHandler} required >\r\n                      <option value=\"\">Select</option>\r\n                      {organizationList.map((organizationInfo, index) =>\r\n                        <SetOrganizationDropDownItem key={index} organizationInfo={organizationInfo} />\r\n                      )}\r\n                    </Input>\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['organizationId']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>  \r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"firstName\">First Name</Label>            \r\n                    <Input type=\"text\" placeholder=\"First Person *\" id=\"firstName\" name=\"firstName\" value={this.state.formField.firstName} onChange={this.changeHandler} required />\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['firstName']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"lastName\">Last Name</Label>            \r\n                    <Input type=\"text\" placeholder=\"Last Person\" id=\"lastName\" name=\"lastName\" value={this.state.formField.lastName} onChange={this.changeHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n                \r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"email\">Email</Label>            \r\n                    <Input type=\"text\" placeholder=\"Email *\" id=\"email\" name=\"email\" value={this.state.formField.email} onChange={this.changeHandler} required />\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['email']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n                \r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"phoneNumber\">Phone Number</Label>            \r\n                    <Input type=\"number\" placeholder=\"Phone Number\" id=\"phoneNumber\" name=\"phoneNumber\" value={this.state.formField.phoneNumber} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"address\">Street Address </Label>            \r\n                    <Input type=\"text\" placeholder=\"Street Address\" id=\"address\" name=\"address\" value={this.state.formField.address} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                \r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"city\">City </Label>            \r\n                    <Input type=\"text\" placeholder=\"City\" id=\"city\" name=\"city\" value={this.state.formField.city} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup>\r\n                    <Label htmlFor=\"state\">State</Label>            \r\n                    <Input type=\"text\" placeholder=\"State\" id=\"state\" name=\"state\" value={this.state.formField.state} onChange={this.changeHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"postalCode\">Postal Code </Label>            \r\n                    <Input type=\"text\" placeholder=\"Postal Code\" id=\"postalCode\" name=\"postalCode\" value={this.state.formField.postalCode} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"country\">Country </Label>            \r\n                    <Input type=\"text\" placeholder=\"Country\" id=\"country\" name=\"country\" value={this.state.formField.country} onChange={this.changeHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"template_status\">Status</Label>            \r\n                    <Input type=\"select\" placeholder=\"Status *\" invalid={errors['status'] !== undefined && errors['status'] !== \"\"} id=\"status\" name=\"status\" value={this.state.formField.status} onChange={this.changeHandler} required >\r\n                      <option value=\"\">Select Status</option>\r\n                      <option value=\"Active\">Active</option>\r\n                      <option value=\"Inactive\">Inactive</option>\r\n                    </Input>\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['status']}\r\n                    </div>\r\n              </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"primary\" disabled={formProccessing} type=\"submit\">{formProccessing ? processingBtnText : 'Submit' }</Button>\r\n              <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nfunction SetOrganizationDropDownItem (props) {\r\n  const organizationInfo = props.organizationInfo;\r\n  return (<option value={organizationInfo.authId} >{organizationInfo.organizationName}</option>)\r\n}\r\n\r\nexport default Employee;\r\n","import React, { Component } from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport commonService from '../../../../core/services/commonService';\r\nclass CompanyUserData extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: []\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n  /* Edit Employee Info */\r\n  editEmployeeItem(rowIndex){    \r\n    this.props.editEmployeeAction(rowIndex);\r\n  }\r\n\r\n  deleteEmployeeItem(rowIndex){    \r\n    this.props.deleteEmployeeAction(rowIndex);\r\n  }\r\n\r\n  render() {\r\n    \r\n    let rowsItem = [];    \r\n    for(const [i, employee] of this.props.data.entries()){\r\n      console.log(i);\r\n      let orgInfo = {   \r\n        organizationName: employee.organizationName,      \r\n        firstName: `${employee.firstName} ${employee.lastName}`,\r\n        email: employee.email,\r\n        roleName: employee.roleName || \" \",\r\n        phoneNumber: employee.phoneNumber || \" \",\r\n        address: employee.address || \" \",\r\n        city: employee.city || \" \",      \r\n        state: employee.state || \" \",\r\n        country: employee.country || \" \",\r\n        status: commonService.getStatus(employee.status),   \r\n        action: \"\",       \r\n      }      \r\n      rowsItem.push(orgInfo);\r\n    }      \r\n    \r\n    const columns = [ \r\n      {\r\n        label: 'User Name',\r\n        name: 'firstName',\r\n      },     \r\n      {\r\n        label: 'Organization Name',\r\n        name: 'organizationName',\r\n      },\r\n      \r\n      {\r\n        label: 'Email',\r\n        name: 'email',\r\n      },\r\n      {\r\n        label: 'Phone Number',\r\n        name: 'phoneNumber',\r\n      },\r\n      {\r\n        label: 'Status',\r\n        name: 'status',\r\n      },\r\n      {\r\n        label: 'Action',\r\n        name: 'action',\r\n        options: {\r\n          filter: true,\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            let i = tableMeta.rowIndex;\r\n           \r\n            return (\r\n             <p><button className=\"btn-edit\" disabled={this.state.buttonProcessing} onClick={() => \r\n              this.editEmployeeItem(i)}><i className=\"fa fa-pencil\"></i> </button>\r\n              <button className=\"btn-delete\" disabled={this.state.buttonProcessing} onClick={() => {if( window.confirm('Are you sure you wish to delete this employee?'))\r\n              this.deleteEmployeeItem(i)}}><i className=\"fa fa-trash\"></i></button></p>\r\n            );\r\n          },\r\n        }\r\n      },\r\n    ];\r\n    const options = {\r\n      search: true,viewColumns: false,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      download: true,\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Processing........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      fixedHeaderOptions: { xAxis: false, yAxis: false }\r\n\r\n    };\r\n    \r\n    return (\r\n      <MUIDataTable\r\n        title={\"Company User\"}\r\n        data={rowsItem}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CompanyUserData;","import React, { Component } from 'react';\r\nimport { Card, CardBody, CardHeader, Col, Row, Button, Form, Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../../core/services/commonService';\r\nimport Loader from '../../../Loader/Loader';\r\nimport CompanyUserData from './CompanyUserData';\r\nimport './CompanyUser.css'\r\nconst queryString = require('query-string');\r\nclass CompanyUser extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      modal: false,      \r\n      EmployeeList: [],\r\n      organizationList: [],\r\n      loading: true,\r\n      formProccessing: false,\r\n      rowIndex: -1,\r\n      formField: { organizationId: '', email: '', firstName: '',lastName: '', phoneNumber: '', address: '', city: '', state: '', country: '', postalCode: '', role: '', status: '' },\r\n      errors: { email: '', employee_name: '', role: '', error: ''},\r\n      formValid: true,\r\n      filterItem: { filter_organization_id: '', country: '', state: '', custom_search: ''},\r\n    } \r\n    this.handleEditEmployee = this.handleEditEmployee.bind(this);\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    this.handleDeleteEmployee = this.handleDeleteEmployee.bind(this);\r\n    this.filterEmployeeList = this.filterEmployeeList.bind(this);\r\n    this.resetSearchFilter = this.resetSearchFilter.bind(this);\r\n    \r\n  }\r\n  \r\n  // Fetch the Employee List\r\n  componentDidMount() { \r\n    const queryParams = queryString.parse(this.props.location.search);\r\n    if( queryParams.organizationId !== undefined) {     \r\n      let filterItem = this.state.filterItem;\r\n      filterItem.filter_organization_id = queryParams.organizationId;\r\n      this.setState({filterItem: filterItem});\r\n    }\r\n    this.EmployeeList(this.state.filterItem);\r\n    this.organizationList();\r\n    \r\n  }\r\n  /*Employee List API*/\r\n  EmployeeList(filterItem={}) {\r\n    let stroreWalkQuery = \"?roleType=company_user\";\r\n    if(filterItem.filter_organization_id !== undefined && filterItem.filter_organization_id !== \"\" ) \r\n      stroreWalkQuery += (stroreWalkQuery !==\"\" ) ? \"&organizationId=\"+filterItem.filter_organization_id: \"?organizationId=\"+filterItem.filter_organization_id;\r\n    if(filterItem.custom_search !== undefined && filterItem.custom_search !== \"\" ) \r\n      stroreWalkQuery += (stroreWalkQuery !==\"\" ) ? \"&keyword=\"+filterItem.custom_search: \"?keyword=\"+filterItem.custom_search;\r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('employee'+stroreWalkQuery)\r\n        .then( res => {\r\n          \r\n           \r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }   \r\n\r\n          this.setState({loading:false, EmployeeList: res.data.data});     \r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    } )\r\n  }\r\n\r\n  /*Organization List API*/\r\n  organizationList() {   \r\n    \r\n    commonService.getAPIWithAccessToken('organization')\r\n      .then( res => {       \r\n         \r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n          this.setState( { loading: false } );\r\n          toast.error(res.data.message);\r\n          return;\r\n        }   \r\n\r\n        this.setState({loading:false, organizationList: res.data.data});     \r\n       \r\n      } )\r\n      .catch( err => {         \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.history.push('/login');\r\n        }\r\n        else \r\n          this.setState( { loading: false } );\r\n      } )\r\n    \r\n  }\r\n  filterEmployeeList(){\r\n    const filterItem = this.state.filterItem;\r\n    this.EmployeeList(filterItem);\r\n  }\r\n  /* Submit Form Handler*/\r\n  submitHandler (event) {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n    if(this.validateForm())\r\n      return false;\r\n    this.setState( { formProccessing: true}, () => {\r\n      const formInputField = this.state.formField;\r\n      let statusText = commonService.getStatusVal(formInputField.status)\r\n    \r\n      const formData = {\r\n        \"email\": formInputField.email,\r\n        \"firstName\": formInputField.firstName, \r\n        \"lastName\": formInputField.lastName, \r\n        \"phoneNumber\": formInputField.phoneNumber, \r\n        \"address\": formInputField.address, \r\n        \"roleName\": formInputField.role, \r\n        \"city\": formInputField.city, \r\n        \"state\": formInputField.state, \r\n        \"country\": formInputField.country, \r\n        \"postalCode\": formInputField.postalCode, \r\n        \"employeeName\": formInputField.firstName,\r\n        \"organizationAuthId\": formInputField.organizationId,\r\n        \"status\": statusText,\r\n        \"roleType\": \"company_user\"\r\n      };\r\n      const rowIndex = this.state.rowIndex;\r\n      if(rowIndex > -1) {\r\n        const employeeInfo = this.state.EmployeeList[rowIndex];\r\n\r\n        commonService.putAPIWithAccessToken('employee/'+employeeInfo.profileId, formData)\r\n        .then( res => {\r\n          \r\n           \r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n           \r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          \r\n          this.setState({ modal: false, formProccessing: false});\r\n          toast.success(res.data.message);\r\n          this.EmployeeList(this.state.filterItem);\r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n        } )\r\n      }\r\n      else{\r\n        commonService.postAPIWithAccessToken('employee', formData)\r\n        .then( res => {\r\n         \r\n          if ( undefined === res.data.data || !res.data.status ) { \r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          \r\n          this.setState({ modal: false});\r\n          toast.success(res.data.message);\r\n          this.EmployeeList(this.state.filterItem);\r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n        } )\r\n      }\r\n    } );\r\n    \r\n  };\r\n  /* Input Field On changes*/\r\n  changeHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const formField = this.state.formField\r\n    formField[name] = value;\r\n    this.setState({ formField: formField });\r\n  };\r\n\r\n  changeFilterHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const filterItem = this.state.filterItem\r\n    filterItem[name] = value;\r\n    this.setState({ filterItem: filterItem });\r\n  };\r\n  \r\n  /* Validate Form Field */\r\n  \r\n  \r\n  /* Validate Form */\r\n  validateForm() {\r\n    let formValid = false;\r\n    let formField = this.state.formField; \r\n    let errors = {};\r\n    var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n    if(formField.firstName === undefined || formField.firstName.trim() === \"\"){\r\n      formValid = true;\r\n      errors['firstName'] = \"First name field required!\";\r\n    }\r\n    if(formField.organizationId === undefined || formField.organizationId.trim() === \"\"){\r\n      formValid = true;\r\n      errors['organizationId'] = \"Organization field required!\";\r\n    }\r\n    if(formField.email === undefined || formField.email.trim() === \"\"){\r\n      formValid = true;\r\n      errors['email'] = \"Email field required!\";\r\n    }\r\n    else if(!(pattern.test(formField.email))){\r\n      formValid = true;\r\n      errors['email'] = \"Invalid email format\";\r\n    }\r\n    if(formField.status === undefined || formField.status.trim() === \"\" ){\r\n      formValid = true;\r\n      errors['status'] = 'Status field required';\r\n    }\r\n    this.setState({errors:  errors});\r\n    return formValid;\r\n    \r\n  }\r\n  /* Set Error Class*/\r\n  errorClass(error) {\r\n    return(error.length === 0 ? '' : 'has-error');\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      rowIndex: -1,\r\n      formValid: false,\r\n      formProccessing : false,\r\n      formField: {email: '', firstName: '', lastName:'', phoneNumber: '', address: '', city: '', state: '', country: '', postalCode: '', role: '' },\r\n      errors: {email: '', employee_name: '', role: '', error: ''}\r\n    });\r\n  }\r\n  /* Edit Employee*/\r\n  handleEditEmployee(rowIndex){\r\n      const employeeInfo = this.state.EmployeeList[rowIndex];\r\n      let status = \"Active\"\r\n      status = commonService.getStatus(employeeInfo.status);\r\n      const formField = {\r\n        organizationId: employeeInfo.organizationAuthId,        \r\n        email: employeeInfo.email, \r\n        firstName: employeeInfo.firstName,\r\n        lastName: employeeInfo.lastName, \r\n        phoneNumber: employeeInfo.phoneNumber, \r\n        address: employeeInfo.address, \r\n        city: employeeInfo.city, \r\n        state: employeeInfo.state, \r\n        country: employeeInfo.country, \r\n        postalCode: employeeInfo.postalCode, \r\n        role: employeeInfo.roleName,\r\n        status: status };\r\n      this.setState({rowIndex: rowIndex, formField: formField, formProccessing : false, modal: true, formValid: true});\r\n  }\r\n  /* Delete Employee*/\r\n  handleDeleteEmployee(rowIndex){\r\n   \r\n    const employeeInfo = this.state.EmployeeList[rowIndex];\r\n    \r\n    this.setState( { loading : true}, () => {   \r\n      commonService.deleteAPIWithAccessToken('employee', {employeeId: employeeInfo.profileId})\r\n      .then( res => {\r\n        \r\n         \r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n         \r\n          this.setState( { loading : false} );\r\n          toast.error(res.data.message);\r\n          return;\r\n        } \r\n        \r\n        this.setState({ modal: false, loading : false});\r\n        toast.success(res.data.message);\r\n        this.EmployeeList();\r\n       \r\n      } )\r\n      .catch( err => {         \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.history.push('/login');\r\n        }\r\n        else\r\n          this.setState( { loading : false } );\r\n          toast.error(err.message);\r\n      } )\r\n    } );\r\n   \r\n    \r\n  }\r\n \r\n  resetSearchFilter() {\r\n    this.setState({filterItem: {filter_organization_id: \"\", custom_search: \"\" }});\r\n    this.EmployeeList();\r\n  }\r\n  render() {\r\n\r\n    const { EmployeeList, loading, modal, formProccessing, organizationList, errors } = this.state;     \r\n    let loaderElement = '';\r\n    if(loading)        \r\n      loaderElement = <Loader />\r\n\r\n    const processingBtnText = <>Submit <i className=\"fa fa-spinner\"></i></>;\r\n    \r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          \r\n          {loaderElement}\r\n          <Col lg={12}>\r\n            <Card className=\"oep-card\">\r\n              <CardHeader className=\"mainHeading\">\r\n                <strong>Company User List</strong> <Button color=\"primary\" className=\"categoryAdd\" type=\"button\" onClick={this.toggle}><i className=\"fa fa-plus\"></i> Add New</Button>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <Row className=\"filterRow\"> \r\n                \r\n                      <Col md={\"2\"} className=\"pl-3\">\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filter_organization_id\">Organization</Label>            \r\n                          <Input type=\"select\" placeholder=\"Organization *\" id=\"filter_organization_id\" name=\"filter_organization_id\" value={this.state.filterItem.filter_organization_id} onChange={this.changeFilterHandler} >\r\n                            <option value=\"\">Select</option>\r\n                            {organizationList.map((organizationInfo, index) =>\r\n                              <SetOrganizationDropDownItem key={index} organizationInfo={organizationInfo} />\r\n                            )}\r\n                          </Input>\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      \r\n                      <Col md={\"3\"}>\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filter_organization_id\">Search By Email/ Name</Label>            \r\n                          <Input type=\"text\" placeholder=\"Search By Email/ Name\" id=\"custom_search\" name=\"custom_search\" value={this.state.formField.custom_search} onChange={this.changeFilterHandler} />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"1\"} className=\"p-0\">\r\n                        <FormGroup> \r\n                          <Label>&nbsp;</Label><br />\r\n                          <Button color=\"success\" type=\"button\" size=\"sm\" onClick={this.filterEmployeeList}><i className=\"fa fa-search\"></i></Button>&nbsp;\r\n                          <Button color=\"danger\" type=\"reset\" size=\"sm\" onClick={this.resetSearchFilter}><i className=\"fa fa-refresh\"></i></Button>\r\n                        </FormGroup>             \r\n                      </Col>\r\n                    </Row> \r\n                  </Col>\r\n                  <Col md={12}>\r\n                    <CompanyUserData data={EmployeeList} editEmployeeAction={this.handleEditEmployee} deleteEmployeeAction={this.handleDeleteEmployee} dataTableLoadingStatus = {this.state.loading} />\r\n                  </Col>\r\n                </Row> \r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Modal isOpen={modal} toggle={this.toggle} className=\"full-width-modal-section employee-modal\">\r\n          <ModalHeader toggle={this.toggle}>Company User</ModalHeader>\r\n          <Form onSubmit={this.submitHandler} noValidate>\r\n            <ModalBody>\r\n              \r\n              <Row>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"organizationId\">Organization Name</Label>            \r\n                    <Input type=\"select\" placeholder=\"Organization Name *\" id=\"organizationId\" name=\"organizationId\" value={this.state.formField.organizationId} onChange={this.changeHandler} required >\r\n                      <option value=\"\">Select</option>\r\n                      {organizationList.map((organizationInfo, index) =>\r\n                        <SetOrganizationDropDownItem key={index} organizationInfo={organizationInfo} />\r\n                      )}\r\n                    </Input>\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['organizationId']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>  \r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"firstName\">First Name</Label>            \r\n                    <Input type=\"text\" placeholder=\"First Person *\" id=\"firstName\" name=\"firstName\" value={this.state.formField.firstName} onChange={this.changeHandler} required />\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['firstName']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"lastName\">Last Name</Label>            \r\n                    <Input type=\"text\" placeholder=\"Last Person\" id=\"lastName\" name=\"lastName\" value={this.state.formField.lastName} onChange={this.changeHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n                \r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"email\">Email</Label>            \r\n                    <Input type=\"text\" placeholder=\"Email *\" id=\"email\" name=\"email\" value={this.state.formField.email} onChange={this.changeHandler} required />\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['email']}\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"roleName\">Role</Label>            \r\n                    <Input type=\"text\" placeholder=\"Role\" id=\"roleName\" name=\"roleName\" value={this.state.formField.roleName} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"phoneNumber\">Phone Number</Label>            \r\n                    <Input type=\"number\" placeholder=\"Phone Number\" id=\"phoneNumber\" name=\"phoneNumber\" value={this.state.formField.phoneNumber} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"address\">Street Address </Label>            \r\n                    <Input type=\"text\" placeholder=\"Street Address\" id=\"address\" name=\"address\" value={this.state.formField.address} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                \r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"city\">City </Label>            \r\n                    <Input type=\"text\" placeholder=\"City\" id=\"city\" name=\"city\" value={this.state.formField.city} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup>\r\n                    <Label htmlFor=\"state\">State</Label>            \r\n                    <Input type=\"text\" placeholder=\"State\" id=\"state\" name=\"state\" value={this.state.formField.state} onChange={this.changeHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"postalCode\">Postal Code </Label>            \r\n                    <Input type=\"text\" placeholder=\"Postal Code\" id=\"postalCode\" name=\"postalCode\" value={this.state.formField.postalCode} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"country\">Country </Label>            \r\n                    <Input type=\"text\" placeholder=\"Country\" id=\"country\" name=\"country\" value={this.state.formField.country} onChange={this.changeHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"template_status\">Status</Label>            \r\n                    <Input type=\"select\" placeholder=\"Status *\" invalid={errors['status'] !== undefined && errors['status'] !== \"\"} id=\"status\" name=\"status\" value={this.state.formField.status} onChange={this.changeHandler} required >\r\n                      <option value=\"\">Select Status</option>\r\n                      <option value=\"Active\">Active</option>\r\n                      <option value=\"Inactive\">Inactive</option>\r\n                    </Input>\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors['status']}\r\n                    </div>\r\n              </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"primary\" disabled={formProccessing} type=\"submit\">{formProccessing ? processingBtnText : 'Submit' }</Button>\r\n              <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nfunction SetOrganizationDropDownItem (props) {\r\n  const organizationInfo = props.organizationInfo;\r\n  return (<option value={organizationInfo.authId} >{organizationInfo.organizationName}</option>)\r\n}\r\n\r\nexport default CompanyUser;\r\n","import Dashboard from '../views/AdminDashboard/Dashboard/Dashboard';\r\nimport Category from '../views/AdminDashboard/Category/Category';\r\nimport ThreatType from '../views/AdminDashboard/ThreatType/ThreatType'\r\nimport organizationList from '../views/AdminDashboard/Organization/Organization';\r\nimport employeeList from '../views/AdminDashboard/Organization/Employee/Employee';\r\nimport CompanyUser from '../views/AdminDashboard/Organization/CompanyUser/CompanyUser';\r\n/*import UsersList from '../views/AdminDashboard/Users/Users'\r\nimport UserDetails from '../views/AdminDashboard/Users/User';\r\nimport EnquiryListing from '../views/AdminDashboard/Organization/Enquiry/EnquiryListing';\r\nimport AdvertiserPlans from '../views/AdminDashboard/Subscription/AdvertiserSubscription';\r\nimport ChangePassword from '../views/AdminDashboard/ChangePassword/ChangePassword';\r\nimport UserTransactionList from '../views/AdminDashboard/UserTransactions/UserTransactionList';\r\nimport SubscribedAdvertiserList from '../views/AdminDashboard/SubscribedUsers/SubscribedAdvertiserList';\r\nimport SubscribedOwnerList from '../views/AdminDashboard/SubscribedUsers/SubscribedOwnerList';\r\nimport ApplicationList from '../views/AdminDashboard/VaApplications/ApplicationLists.';\r\nimport EditVaApplication from '../views/AdminDashboard/VaApplications/EditVaApplication';\r\nimport VaRequestListing from '../views/AdminDashboard/Organization/VaRequest/VaRequestListing';\r\nimport ScheduledBooking from '../views/AdminDashboard/ScheduledBooking/ScheduledBooking';\r\nimport AssignRequest from '../views/AdminDashboard/Organization/VaRequest/AssignRequest';\r\nimport VaTaskListing from '../views/AdminDashboard/Organization/VaTask/VaTaskListing';\r\nimport SubscribersList from '../views/AdminDashboard/NewsletterSubscriber/NewsletterSubscribersList';\r\nimport VaTimesheetList from '../views/AdminDashboard/Organization/VaTimesheet/VaTimesheetList';\r\nimport BillingList from '../views/AdminDashboard/Organization/Billing/BillingList';\r\nimport AddVaApplication from '../views/AdminDashboard/VaApplications/AddVaApplication';\r\n*/\r\nconst adminRoutes = [\r\n  { path: '/admin/', exact: true, name: 'Admin' },\r\n  { path: '/admin/dashboard', exact: true, name: 'Dashboard', component: Dashboard },\r\n  { path: '/admin/master-case-type', exact: true, name: 'Master Case Type', component: Category },  \r\n  \r\n  { path: '/admin/master-threat-type', exact: true, name: 'Master Threat Type', component: ThreatType },  \r\n  \r\n  { path: '/admin/organization', exact: true, name: 'Manage Organization', component: organizationList },\r\n  { path: '/admin/organization/user', exact: true, name: 'Company User', component: CompanyUser },\r\n  { path: '/admin/organization/employee', exact: true, name: 'Employee User', component: employeeList },\r\n  /*{ path: '/admin/users', exact: true, name: 'Manage Admin Users', component: UsersList },\r\n  { path: '/admin/user/:profileId', exact: true,  name: 'User Details', component: UserDetails },\r\n  { path: '/admin/va-application', exact: true, name: 'Manage VA Application', component: ApplicationList },\r\n  { path: '/admin/va-application/add-new-va', exact: true, name: 'Add New VA Application', component: AddVaApplication },\r\n  { path: '/admin/va-application/:vaApplicationId', exact: true, name: 'VA Application Details', component: EditVaApplication },\r\n  { path: '/admin/va-request', exact: true, name: 'Manage Request', component: VaRequestListing },\r\n  { path: '/admin/va-request/assign-va/:vaRequestId', exact: true, name: 'Assign VA Request', component: AssignRequest },\r\n  { path: '/admin/enquiries', exact: true, name: 'Manage Enquiries', component: EnquiryListing },\r\n  { path: '/admin/scheduled-booking', exact: true, name: 'Manage Discovery Call', component: ScheduledBooking },\r\n  { path: '/admin/subscription', exact: true, name: 'Manage Advertiser Subscription', component: AdvertiserPlans },\r\n  { path: '/admin/change-password', exact: true,  name: 'Change Password', component: ChangePassword },\r\n  { path: '/admin/transactions', exact: true, name: 'Manage Transactions', component: UserTransactionList },\r\n  { path: '/admin/subscribed', exact: true, name: 'Subscribed Owner', component: SubscribedOwnerList },\r\n  { path: '/admin/subscribed/advertisers', exact: true, name: 'Subscribed Advertiser', component: SubscribedAdvertiserList },\r\n  { path: '/admin/va-task', exact: true, name: 'Manage Task', component: VaTaskListing },\r\n  { path: '/admin/timesheet', exact: true, name: 'Manage Timesheet', component: VaTimesheetList },\r\n  { path: '/admin/newsletter', exact: true, name: 'Newsletter Subscribers', component: SubscribersList },\r\n  { path: '/admin/billing', exact: true, name: 'Clients Billing', component: BillingList },*/\r\n\r\n\r\n];\r\n\r\nexport default adminRoutes;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nconst defaultProps = {};\r\n\r\nclass DefaultFooter extends Component {\r\n  render() {\r\n\r\n    // eslint-disable-next-line\r\n    const { children, ...attributes } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <span>Copyright  &copy; {(new Date().getFullYear())} VirDrop. All Rights Reserved.</span>\r\n        <span className=\"ml-auto\">Powered by <a href=\"https://www.niletechnologies.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Nile Technologies</a>.</span>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nDefaultFooter.propTypes = propTypes;\r\nDefaultFooter.defaultProps = defaultProps;\r\n\r\nexport default DefaultFooter;\r\n","import React from 'react';\r\nimport \"./UserAvtar.css\";\r\nimport commonService from '../../core/services/commonService';\r\nconst UserAvtar = (props) => {\r\n  let name = commonService.getLocalStorageValue( 'userName' );\r\n  let arrName = name.split(\" \");\r\n  let firstName = arrName.slice(0, 1).join(' ');\r\n  let lastName = arrName.slice(1, arrName.length).join(' ');\r\n  return (\r\n    <div className=\"profileImage\">{firstName.substring(0, 1)+''+lastName.substring(0, 1)}</div>\r\n  );\r\n}\r\n\r\nexport default UserAvtar;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UncontrolledDropdown, DropdownItem, DropdownMenu, DropdownToggle, Nav } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { AppNavbarBrand, AppSidebarToggler } from '@coreui/react';\r\nimport UserAvtar from '../UserLayout/UserAvtar'\r\nimport commonService from '../../core/services/commonService';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nconst defaultProps = {};\r\n\r\nclass DefaultHeader extends Component {\r\n  render() {\r\n\r\n    // eslint-disable-next-line\r\n    const { children, ...attributes } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <AppSidebarToggler className=\"d-lg-none\" display=\"md\" mobile />\r\n        <AppNavbarBrand\r\n          full={{ src: `${process.env.PUBLIC_URL}/logo.png`, width: 88, height: 40, alt: 'Incursus Logo' }}\r\n          minimized={{ src: `${process.env.PUBLIC_URL}/logo.png`, width: 30, height: 30, alt: 'Incursus Logo' }}\r\n        />\r\n        <AppSidebarToggler className=\"d-md-down-none\" display=\"lg\" />\r\n\r\n        \r\n        <Nav className=\"ml-auto\" navbar>\r\n          <UncontrolledDropdown nav direction=\"down\">\r\n            <DropdownToggle nav>\r\n              <div className=\"admin-avatar\"><UserAvtar /></div>\r\n              <span className=\"admin-profile-username\">\r\n                {commonService.getLocalStorageValue( 'userName' )} <span className=\"caret\"></span>\r\n              </span>\r\n            </DropdownToggle>\r\n            <DropdownMenu right>\r\n              <DropdownItem header tag=\"div\" className=\"text-center\"><strong>My Account</strong></DropdownItem>\r\n              <DropdownItem><Link to=\"/admin/dashboard\" className=\"profileDropDownLink\"><i className=\"fa fa-dashboard\"></i> Dashboard</Link></DropdownItem>\r\n              <DropdownItem><Link to=\"/admin/change-password\" className=\"profileDropDownLink\"><i className=\"fa fa-lock\"></i> Change Password</Link></DropdownItem>\r\n              <DropdownItem onClick={e => this.props.onLogout(e)}><i className=\"fa fa-sign-out\"></i> Logout</DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </Nav>\r\n        \r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nDefaultHeader.propTypes = propTypes;\r\nDefaultHeader.defaultProps = defaultProps;\r\n\r\nexport default DefaultHeader;\r\n","import React, { Component, Suspense } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport * as router from 'react-router-dom';\r\nimport { Container } from 'reactstrap';\r\nimport './App.scss';\r\n\r\nimport {\r\n  AppAside,\r\n  AppFooter,\r\n  AppHeader,\r\n  AppSidebar,\r\n  AppSidebarFooter,\r\n  AppSidebarForm,\r\n  AppSidebarHeader,\r\n  AppSidebarMinimizer,\r\n  AppBreadcrumb2 as AppBreadcrumb,\r\n  AppSidebarNav2 as AppSidebarNav,\r\n} from '@coreui/react';\r\n// sidebar nav config\r\nimport navigation from './_nav';\r\n// routes config\r\nimport adminRoutes from '../../routes/adminRoutes';\r\nimport './AdminLayout.css';\r\n//import DefaultAside from './DefaultAside';\r\nimport DefaultFooter from './DefaultFooter';\r\nimport DefaultHeader from './DefaultHeader';\r\n\r\nclass AdminLayout extends Component {\r\n\r\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n\r\n  signOut(e) {\r\n    e.preventDefault();\r\n    localStorage.clear();\r\n    this.props.history.push('/login')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app dashboard-template\">\r\n        <AppHeader fixed>\r\n          <Suspense  fallback={this.loading()}>\r\n            <DefaultHeader onLogout={e=>this.signOut(e)}/>\r\n          </Suspense>\r\n        </AppHeader>\r\n        <div className=\"app-body admin-panel\">\r\n          <AppSidebar fixed display=\"lg\">\r\n            <AppSidebarHeader />\r\n            <AppSidebarForm />\r\n            <Suspense>\r\n            <AppSidebarNav navConfig={navigation} {...this.props} router={router}/>\r\n            </Suspense>\r\n            <AppSidebarFooter />\r\n            <AppSidebarMinimizer />\r\n          </AppSidebar>\r\n          <main className=\"main\">\r\n            <AppBreadcrumb appRoutes={adminRoutes} router={router}/>\r\n            <Container fluid>\r\n              <ToastContainer />\r\n              <Suspense fallback={this.loading()}>\r\n                <Switch>\r\n                  {adminRoutes.map((route, idx) => {\r\n                    return route.component ? (\r\n                      <Route\r\n                        key={idx}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        name={route.name}\r\n                        render={props => (\r\n                          <route.component {...props} />\r\n                        )} />\r\n                    ) : (null);\r\n                  })}                  \r\n                  <Redirect from=\"/admin\" to=\"/admin/dashboard\" />\r\n                </Switch>\r\n              </Suspense>\r\n            </Container>\r\n          </main>\r\n          <AppAside fixed>\r\n            <Suspense fallback={this.loading()}>\r\n              {/* <DefaultAside /> */}\r\n            </Suspense>\r\n          </AppAside>\r\n        </div>\r\n        <AppFooter>\r\n          <Suspense fallback={this.loading()}>\r\n            <DefaultFooter />\r\n          </Suspense>\r\n        </AppFooter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminLayout;\r\n"],"sourceRoot":""}